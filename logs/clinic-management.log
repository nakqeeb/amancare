2025-09-07 00:42:26 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h13m15s905ms).
2025-09-07 02:18:49 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h36m22s427ms).
2025-09-07 03:53:20 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h34m31s416ms).
2025-09-07 05:11:02 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h17m41s709ms).
2025-09-07 05:45:41 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=34m38s948ms).
2025-09-07 05:48:42 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-07 05:48:42 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-07 05:48:42 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-07 05:48:42 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-07 06:07:03 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/3
2025-09-07 06:07:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/3
2025-09-07 06:07:03 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-07 06:07:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/refresh
2025-09-07 06:07:03 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/refresh
2025-09-07 06:07:03 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-07 06:07:03 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/refresh
2025-09-07 06:07:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:07:03 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/3
2025-09-07 06:07:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:07:03 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/3
2025-09-07 06:07:03 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAppointmentById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:07:03 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAppointmentById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:07:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-09-07 06:07:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:07:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:07:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:07:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:07:04 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/undefined/upcoming
2025-09-07 06:07:04 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/undefined/upcoming
2025-09-07 06:07:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:07:04 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/undefined/upcoming
2025-09-07 06:07:04 [http-nio-8080-exec-2] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'patientId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "undefined"]
2025-09-07 06:12:19 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/login
2025-09-07 06:12:19 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-09-07 06:12:19 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-07 06:12:19 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-09-07 06:12:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.username = :usernameOrEmail 
        OR u.email = :usernameOrEmail */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.username=? 
            or u1_0.email=?
2025-09-07 06:12:20 [http-nio-8080-exec-4] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-07 06:12:20 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/me
2025-09-07 06:12:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/me
2025-09-07 06:12:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:12:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/me
2025-09-07 06:12:20 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-07 06:12:20 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-07 06:12:26 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:12:26 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-09-07 06:12:26 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:12:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:12:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:12:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:12:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:12:26 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:12:26 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:12:26 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:12:26 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:12:26 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:12:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:12:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:12:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 06:12:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:12:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:12:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:12:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:12:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:12:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:12:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:12:57 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:12:57 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:12:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:12:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:12:57 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:12:57 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:12:57 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:12:57 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:12:57 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:12:57 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:12:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:12:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:12:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 06:12:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:12:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:12:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:12:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:12:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:12:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:12:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:13:07 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:13:07 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:13:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:13:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:13:07 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:13:07 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:13:07 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:13:07 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:13:07 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:13:07 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:13:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:13:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:13:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 06:13:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:13:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:13:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:13:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:13:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:13:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:13:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:13:11 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:13:11 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:13:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:13:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:13:11 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:13:11 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:13:11 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:13:11 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:13:11 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:13:11 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:13:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:13:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 06:13:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:13:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:13:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:13:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:13:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:13:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:13:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:13:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:14:07 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:14:07 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:14:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:14:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:14:08 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:14:08 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:14:08 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:14:08 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:14:08 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:14:08 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:14:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:14:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:14:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 06:14:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:14:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:14:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:14:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:14:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:14:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:14:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:14:10 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:14:10 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:14:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:14:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:14:10 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:14:10 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:14:10 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:14:10 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:14:10 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:14:10 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:14:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:14:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:14:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 06:14:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:14:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:14:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:14:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:14:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:14:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:14:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:15:03 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-09-07 06:15:03 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:15:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:15:03 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:15:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:15:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:15:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:15:03 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:15:03 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:15:03 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:15:03 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:15:03 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:15:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:15:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:15:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 06:15:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:15:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:15:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:15:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:15:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:15:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:15:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:15:15 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:15:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:15:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:15:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:15:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:15:15 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:15:15 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:15:15 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:15:15 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:15:15 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:15:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:15:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:15:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 06:15:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:15:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:15:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:15:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:15:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:15:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:15:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:15:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:15:37 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:15:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:15:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:15:37 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:15:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:15:37 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:15:37 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:15:37 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:15:37 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:15:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:15:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:15:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 06:15:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:15:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:15:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:15:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:15:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:15:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:15:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:32:16 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:32:16 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:32:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:32:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:32:16 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:32:16 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:32:16 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:32:16 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:32:16 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:32:16 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:32:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:32:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 06:32:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:32:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:32:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:32:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:32:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:32:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:32:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:32:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:32:22 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:32:22 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:32:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:32:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:32:22 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:32:22 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:32:22 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:32:22 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:32:22 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:32:22 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:32:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:32:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:32:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 06:32:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:32:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:32:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:32:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:32:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:32:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:32:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:32:46 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 90795 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-07 06:32:46 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-07 06:32:46 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-07 06:32:46 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-07 06:32:47 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-07 06:32:47 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52 ms. Found 13 JPA repository interfaces.
2025-09-07 06:32:47 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-07 06:32:47 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-07 06:32:47 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-07 06:32:47 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-07 06:32:47 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1423 ms
2025-09-07 06:32:47 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-07 06:32:47 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-07 06:32:47 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-07 06:32:48 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-07 06:32:48 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-07 06:32:48 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@25568336
2025-09-07 06:32:48 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-07 06:32:48 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-07 06:32:48 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-07 06:32:49 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-07 06:32:49 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-07 06:32:49 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-07 06:32:50 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name daoAuthenticationProvider
2025-09-07 06:32:50 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-07 06:32:51 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-07 06:32:51 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
2025-09-07 06:32:51 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-09-07 06:32:51 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-07 06:32:51 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-07 06:32:51 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-07 06:32:51 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-09-07 06:32:51 [restartedMain] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-09-07 06:34:18 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 91211 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-07 06:34:18 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-07 06:34:18 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-07 06:34:18 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-07 06:34:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-07 06:34:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35 ms. Found 13 JPA repository interfaces.
2025-09-07 06:34:19 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-07 06:34:19 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-07 06:34:19 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-07 06:34:19 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-07 06:34:19 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 982 ms
2025-09-07 06:34:19 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-07 06:34:19 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-07 06:34:19 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-07 06:34:19 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-07 06:34:19 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-07 06:34:19 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@25568336
2025-09-07 06:34:19 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-07 06:34:19 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-07 06:34:19 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-07 06:34:20 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-07 06:34:20 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-07 06:34:20 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-07 06:34:22 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name daoAuthenticationProvider
2025-09-07 06:34:22 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-07 06:34:22 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-07 06:34:22 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-07 06:34:22 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-07 06:34:22 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 4.622 seconds (process running for 4.95)
2025-09-07 06:34:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-07 06:34:22 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-07 06:34:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-07 06:34:22 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-07 06:34:37 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-07 06:34:37 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-07 06:34:37 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 12 ms
2025-09-07 06:34:37 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:34:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-09-07 06:34:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:34:37 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:34:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:34:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:34:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:34:37 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:34:37 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:34:37 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:34:37 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:34:38 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:34:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:34:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:34:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 06:34:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:34:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:34:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:34:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:34:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:34:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:34:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:34:42 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:34:42 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:34:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:34:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:34:42 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:34:42 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:34:42 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:34:42 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:34:42 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:34:42 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:34:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:34:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:34:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 06:34:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:34:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:34:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:34:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:34:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:34:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:34:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:34:45 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 06:34:45 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-07 06:34:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-07 06:34:45 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 06:34:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:34:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:34:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-07 06:34:45 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 06:34:45 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 06:34:45 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 06:34:45 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 06:34:45 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 06:34:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:34:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:34:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 06:34:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-07 06:34:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-07 06:34:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:34:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:34:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:34:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:34:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:34:50 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:34:50 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:34:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:34:50 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:34:50 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:34:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:34:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:34:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 06:34:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:34:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:34:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:34:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:34:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:34:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:34:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:34:53 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 06:34:53 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-07 06:34:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:34:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:34:53 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 06:34:53 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-07 06:34:53 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 06:34:53 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 06:34:53 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 06:34:53 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 06:34:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:34:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:34:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 06:34:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-07 06:34:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-07 06:34:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 06:34:56 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:34:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:34:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:34:56 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:34:56 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:34:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 06:34:56 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:34:56 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 06:34:56 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 06:34:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:34:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:34:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 06:34:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-07 06:34:58 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 06:34:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:34:58 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 06:34:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:34:58 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 06:34:58 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 06:34:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-07 06:34:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:34:58 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 06:34:58 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 06:34:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 06:34:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:34:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-07 06:34:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-07 06:35:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=1000&sortBy=appointmentDate&sortDirection=asc
2025-09-07 06:35:00 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:35:00 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=1000&sortBy=appointmentDate&sortDirection=asc
2025-09-07 06:35:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:35:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:35:00 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=1000&sortBy=appointmentDate&sortDirection=asc
2025-09-07 06:35:00 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:35:00 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:35:00 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:35:00 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:35:00 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:35:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:35:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:35:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date 
    limit
        ?
2025-09-07 06:35:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:35:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:35:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:35:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:35:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:35:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:35:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:35:09 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/NaN
2025-09-07 06:35:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/NaN
2025-09-07 06:35:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:35:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/NaN
2025-09-07 06:35:09 [http-nio-8080-exec-6] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'id': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "NaN"]
2025-09-07 06:35:09 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:35:09 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:35:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:35:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:35:09 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:35:09 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:35:09 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:35:09 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:35:09 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:35:09 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:35:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:35:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:35:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 06:35:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:35:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:35:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:35:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:35:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:35:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:35:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:43:33 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-07 06:43:33 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 06:43:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:43:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:43:33 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 06:43:33 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-07 06:43:33 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 06:43:33 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 06:43:33 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 06:43:33 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 06:43:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:43:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:43:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-07 06:43:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 06:43:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-07 06:45:45 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:45:45 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:45:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:45:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:45:45 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:45:45 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:45:45 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:45:45 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:45:45 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:45:45 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:45:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:45:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:45:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 06:45:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:45:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:45:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:45:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:45:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:45:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:45:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:48:09 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:48:09 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:48:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:48:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:48:09 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:48:09 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:48:09 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:48:09 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:48:09 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:48:09 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:48:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:48:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:48:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 06:48:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:48:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:48:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:48:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:48:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:48:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:48:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:50:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:50:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:50:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:50:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:50:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:50:40 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:50:40 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:50:40 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:50:40 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:50:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:50:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 06:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:50:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:50:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:50:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:50:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:50:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:50:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:50:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:52:47 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:52:47 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:52:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:52:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:52:47 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:52:47 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:52:47 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:52:47 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:52:47 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:52:47 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:52:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:52:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 06:52:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:52:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:52:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:52:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:52:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:52:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:52:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:52:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:52:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:52:54 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:52:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:52:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:52:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:52:54 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:52:54 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:52:54 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:52:54 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:52:54 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:52:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:52:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:52:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 06:52:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:52:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:52:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:52:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:52:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:52:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:52:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:53:01 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-09-07 06:53:01 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:53:01 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:53:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:53:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:53:01 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:53:01 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:53:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:53:01 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:53:01 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:53:01 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:53:01 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:53:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:53:01 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:53:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 06:53:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:53:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:53:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:53:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:53:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:53:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:53:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:53:22 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 06:53:22 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:53:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:53:22 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 06:53:22 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 06:53:22 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:53:22 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 06:53:22 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:53:22 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 06:53:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 06:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 06:53:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 06:53:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:53:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:53:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 06:53:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:53:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 06:53:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 06:53:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:34:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-07 07:34:22 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-07 07:34:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-07 07:34:22 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-07 07:43:15 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 07:43:15 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 07:43:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:43:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:43:15 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 07:43:15 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 07:43:15 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 07:43:15 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:43:15 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 07:43:15 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:43:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 07:43:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 07:43:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 07:43:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:43:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:43:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:43:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:43:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:43:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:43:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:47:43 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 07:47:43 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=1000&sortBy=appointmentDate&sortDirection=asc
2025-09-07 07:47:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=1000&sortBy=appointmentDate&sortDirection=asc
2025-09-07 07:47:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:47:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:47:43 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 07:47:43 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 07:47:43 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 07:47:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=1000&sortBy=appointmentDate&sortDirection=asc
2025-09-07 07:47:43 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:47:43 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:47:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 07:47:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 07:47:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date 
    limit
        ?
2025-09-07 07:47:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:47:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:47:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:47:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:47:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:47:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:47:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:47:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=1000&sortBy=appointmentDate&sortDirection=asc
2025-09-07 07:47:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 07:47:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:47:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:47:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=1000&sortBy=appointmentDate&sortDirection=asc
2025-09-07 07:47:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 07:47:47 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:47:47 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:47:47 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 07:47:47 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 07:47:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 07:47:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 07:47:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date 
    limit
        ?
2025-09-07 07:47:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:47:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:47:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:47:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:47:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:47:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:47:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:48:08 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 07:48:08 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=1000&sortBy=appointmentDate&sortDirection=asc
2025-09-07 07:48:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:48:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:48:08 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=1000&sortBy=appointmentDate&sortDirection=asc
2025-09-07 07:48:08 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 07:48:08 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 07:48:08 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 07:48:08 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:48:08 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:48:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 07:48:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 07:48:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date 
    limit
        ?
2025-09-07 07:48:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:48:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:48:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:48:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:48:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:48:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:48:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:48:26 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/NaN
2025-09-07 07:48:26 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/NaN
2025-09-07 07:48:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:48:26 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/NaN
2025-09-07 07:48:26 [http-nio-8080-exec-10] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'id': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "NaN"]
2025-09-07 07:48:26 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 07:48:26 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 07:48:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:48:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:48:26 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 07:48:26 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 07:48:26 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 07:48:26 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 07:48:26 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:48:26 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:48:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 07:48:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 07:48:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 07:48:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:48:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:48:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:48:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:48:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:48:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:48:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:49:56 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 07:49:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 07:49:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:49:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:49:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 07:49:56 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 07:49:56 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 07:49:56 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 07:49:56 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:49:56 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:49:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 07:49:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 07:49:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 07:49:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:49:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:49:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:49:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:49:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:49:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:49:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:55:08 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 07:55:08 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-09-07 07:55:08 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 07:55:08 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 07:55:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:55:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:55:08 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 07:55:08 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 07:55:08 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 07:55:08 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 07:55:08 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:55:08 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:55:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 07:55:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 07:55:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 07:55:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:55:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:55:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:55:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:55:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:55:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:55:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:55:24 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&date=2025-08-28
2025-09-07 07:55:24 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&date=2025-08-28
2025-09-07 07:55:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:55:24 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&date=2025-08-28
2025-09-07 07:55:24 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:55:24 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:55:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 07:55:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
        and a1_0.appointment_date=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 07:55:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:55:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:55:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:55:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:55:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:55:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:55:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:55:54 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 07:55:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:55:54 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 07:55:54 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:55:54 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:55:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 07:55:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 07:55:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:55:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:55:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:55:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:55:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:55:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:55:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:56:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&date=2025-10-29
2025-09-07 07:56:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&date=2025-10-29
2025-09-07 07:56:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:56:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&date=2025-10-29
2025-09-07 07:56:02 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:56:02 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:56:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 07:56:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
        and a1_0.appointment_date=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 07:56:13 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&date=2025-10-28
2025-09-07 07:56:13 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&date=2025-10-28
2025-09-07 07:56:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:56:13 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&date=2025-10-28
2025-09-07 07:56:13 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:56:13 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:56:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 07:56:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
        and a1_0.appointment_date=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 07:56:42 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&date=2025-08-28
2025-09-07 07:56:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:56:42 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&date=2025-08-28
2025-09-07 07:56:42 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:56:42 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:56:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 07:56:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
        and a1_0.appointment_date=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 07:56:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:56:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:56:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:56:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:56:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:56:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:56:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:56:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 07:56:50 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 07:56:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 07:56:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:56:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 07:56:50 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 07:56:50 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 07:56:50 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 07:56:50 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 07:56:50 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 07:56:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 07:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 07:56:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 07:56:51 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 07:56:51 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 07:56:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:56:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:56:51 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 07:56:51 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 07:56:51 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 07:56:51 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 07:56:51 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:56:51 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 07:56:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 07:56:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 07:56:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 07:56:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:56:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:56:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 07:56:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:56:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 07:56:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 07:56:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:04:46 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:04:46 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:04:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:04:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:04:46 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:04:46 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:04:46 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:04:46 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:04:46 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:04:46 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:04:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:04:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:04:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:04:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:04:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:04:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:04:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:04:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:04:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:04:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:05:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:05:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:05:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:05:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:05:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:05:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:05:02 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:05:02 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:05:02 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:05:02 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:05:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:05:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:05:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:07:30 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-07 08:07:30 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-07 08:07:30 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-07 08:07:30 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-07 08:07:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:07:51 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-07 08:07:51 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-07 08:07:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:07:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:07:51 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-07 08:07:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:07:51 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:07:51 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:07:51 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:07:51 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:07:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:07:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:07:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-07 08:07:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-07 08:07:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:07:59 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:07:59 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:07:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:07:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:07:59 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:07:59 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:07:59 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:07:59 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:07:59 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:07:59 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:07:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:07:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:07:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:08:19 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:08:19 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:08:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:08:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:08:19 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:08:19 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:08:19 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:08:19 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:08:19 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:08:19 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:08:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:08:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:08:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:09:03 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:09:03 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:09:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:09:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:09:03 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:09:03 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:09:03 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:09:03 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:09:03 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:09:03 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:09:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:09:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:09:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:09:39 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:09:39 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:09:39 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:09:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:09:39 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:09:39 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:09:39 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:09:39 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:09:39 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:09:39 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:09:39 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:09:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:09:39 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:09:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:09:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:09:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:09:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:09:59 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:09:59 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:09:59 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:09:59 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:09:59 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:09:59 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:09:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:10:18 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:10:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:10:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:10:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:10:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:10:18 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:10:18 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:10:18 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:10:18 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:10:18 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:10:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:10:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:10:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:10:21 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:10:21 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:10:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:10:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:10:21 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:10:21 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:10:21 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:10:21 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:10:21 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:10:21 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:10:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:10:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:10:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:10:28 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:10:28 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-07 08:10:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:10:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:10:28 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:10:28 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-07 08:10:28 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:10:28 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:10:28 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:10:28 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:10:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:10:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:10:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-07 08:10:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:10:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-07 08:10:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:10:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:10:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:10:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:10:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:10:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:10:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:10:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:10:32 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:10:32 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:10:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:10:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:10:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:11:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:11:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-07 08:11:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:11:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:11:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-07 08:11:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:11:36 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:11:36 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:11:36 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:11:36 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:11:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:11:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:11:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-07 08:11:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-07 08:11:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:13:17 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients
2025-09-07 08:13:17 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /patients
2025-09-07 08:13:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:13:17 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /patients
2025-09-07 08:13:18 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.createPatient(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreatePatientRequest); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:13:18 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.createPatient(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreatePatientRequest); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:13:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:13:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.phone=?
2025-09-07 08:13:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-07 08:13:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.patient_number=? 
    limit
        ?
2025-09-07 08:13:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.patient_number=? 
    limit
        ?
2025-09-07 08:13:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.Patient */insert 
    into
        patients (address, allergies, blood_type, chronic_diseases, clinic_id, created_at, date_of_birth, email, emergency_contact_name, emergency_contact_phone, first_name, gender, is_active, last_name, notes, patient_number, phone, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-07 08:13:18 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/6
2025-09-07 08:13:18 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/6
2025-09-07 08:13:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:13:18 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/6
2025-09-07 08:13:18 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:13:18 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:13:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:13:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:13:33 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/6
2025-09-07 08:13:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:13:33 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/6
2025-09-07 08:13:33 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:13:33 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:13:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:13:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:13:35 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/6
2025-09-07 08:13:35 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /patients/6
2025-09-07 08:13:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:13:35 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /patients/6
2025-09-07 08:13:35 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.updatePatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,com.nakqeeb.amancare.dto.request.UpdatePatientRequest); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:13:35 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.updatePatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,com.nakqeeb.amancare.dto.request.UpdatePatientRequest); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:13:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:13:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:13:35 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/6
2025-09-07 08:13:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:13:35 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/6
2025-09-07 08:13:35 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:13:35 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:13:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:13:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:13:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/6
2025-09-07 08:13:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:13:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/6
2025-09-07 08:13:37 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:13:37 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:13:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:13:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:14:31 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /patients/6
2025-09-07 08:14:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:14:31 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /patients/6
2025-09-07 08:14:31 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.updatePatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,com.nakqeeb.amancare.dto.request.UpdatePatientRequest); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:14:31 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.updatePatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,com.nakqeeb.amancare.dto.request.UpdatePatientRequest); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:14:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:14:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:14:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* update
        for com.nakqeeb.amancare.entity.Patient */update patients 
    set
        address=?,
        allergies=?,
        blood_type=?,
        chronic_diseases=?,
        clinic_id=?,
        date_of_birth=?,
        email=?,
        emergency_contact_name=?,
        emergency_contact_phone=?,
        first_name=?,
        gender=?,
        is_active=?,
        last_name=?,
        notes=?,
        patient_number=?,
        phone=?,
        updated_at=? 
    where
        id=?
2025-09-07 08:14:31 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/6
2025-09-07 08:14:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:14:31 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/6
2025-09-07 08:14:31 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:14:31 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:14:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:14:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:14:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:14:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:14:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:14:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:14:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:14:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:14:50 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:14:50 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:14:50 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:14:50 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:14:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:14:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:14:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:15:00 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:15:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:15:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:15:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:15:00 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:15:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:15:00 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:15:00 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:15:00 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:15:00 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:15:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:15:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:15:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:15:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:15:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:15:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:15:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:15:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:15:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:15:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:15:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:15:03 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:15:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:15:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:15:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:15:03 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:15:03 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:15:03 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:15:03 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:15:03 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:15:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:15:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:15:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:15:10 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:15:10 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:15:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:15:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:15:10 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:15:10 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:15:10 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:15:10 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:15:10 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:15:10 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:15:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:15:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:15:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:15:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:15:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:15:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:15:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:15:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:15:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:15:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:15:13 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:15:13 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:15:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:15:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:15:13 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:15:13 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:15:13 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:15:13 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:15:13 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:15:13 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:15:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:15:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:15:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:26:09 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:26:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:26:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:26:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:26:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:26:09 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:26:09 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:26:09 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:26:09 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:26:09 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:26:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:26:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:26:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:27:11 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments
2025-09-07 08:27:11 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-07 08:27:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:27:11 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-07 08:27:11 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:27:11 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:27:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:27:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:27:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:27:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:27:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.doctor = :doctor 
        AND a.appointmentDate = :date 
        AND a.status NOT IN ('CANCELLED', 'NO_SHOW') 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.doctor_id=? 
            and a1_0.appointment_date=? 
            and a1_0.status not in ('CANCELLED', 'NO_SHOW') 
        order by
            a1_0.appointment_time
2025-09-07 08:27:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.Appointment */insert 
    into
        appointments (appointment_date, appointment_time, appointment_type, chief_complaint, clinic_id, created_at, created_by, doctor_id, duration_minutes, notes, patient_id, status, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-07 08:27:11 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:27:11 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:27:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:27:11 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:27:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:27:11 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:27:11 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:27:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:27:11 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:27:11 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:27:11 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:27:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:27:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:27:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:27:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:27:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:27:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:27:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:27:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:27:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:27:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:27:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:27:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:27:15 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-07 08:27:15 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:27:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:27:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:27:15 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-07 08:27:15 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:27:15 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:27:15 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:27:15 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:27:15 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:27:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:27:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:27:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-07 08:27:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:27:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-07 08:27:24 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:27:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:27:24 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:27:24 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:27:24 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:27:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:27:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:27:24 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:27:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:27:24 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:27:24 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:27:24 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:27:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:27:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:27:30 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/6
2025-09-07 08:27:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:27:30 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/6
2025-09-07 08:27:30 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:27:30 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:27:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:27:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:27:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:27:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:27:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:27:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:27:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:27:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:27:47 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:27:47 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:27:47 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:27:47 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:27:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:27:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:27:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:27:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:27:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:27:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:27:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:27:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:27:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:27:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:27:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:27:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:27:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:27:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:27:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:27:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:27:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:27:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:27:50 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:27:50 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:27:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:27:50 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:27:50 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:27:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:27:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:27:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:27:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:27:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:27:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:27:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:27:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:27:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:27:54 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:27:54 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:27:54 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:27:54 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:27:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:27:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:27:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:27:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:27:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:27:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:27:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:27:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:27:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:27:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:27:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:27:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:27:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:28:24 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&date=2025-09-24
2025-09-07 08:28:24 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&date=2025-09-24
2025-09-07 08:28:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:28:24 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&date=2025-09-24
2025-09-07 08:28:24 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:28:24 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:28:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:28:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
        and a1_0.appointment_date=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:28:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:28:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:28:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:28:28 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&date=2025-09-24&doctorId=6
2025-09-07 08:28:28 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&date=2025-09-24&doctorId=6
2025-09-07 08:28:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:28:28 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&date=2025-09-24&doctorId=6
2025-09-07 08:28:28 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:28:28 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:28:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:28:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:28:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.doctor_id=? 
        and a1_0.appointment_date=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:28:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:28:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:28:30 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&date=2025-09-24&doctorId=6&status=SCHEDULED
2025-09-07 08:28:30 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&date=2025-09-24&doctorId=6&status=SCHEDULED
2025-09-07 08:28:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:28:30 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&date=2025-09-24&doctorId=6&status=SCHEDULED
2025-09-07 08:28:30 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:28:30 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:28:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:28:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:28:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.doctor_id=? 
        and a1_0.appointment_date=? 
        and a1_0.status=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:28:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:28:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:28:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:28:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:28:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:28:32 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:28:32 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:28:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:28:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:28:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:28:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:28:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:28:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:28:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:28:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:28:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:28:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:28:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:28:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:29:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:29:41 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:29:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:29:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:29:41 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:29:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:29:41 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:29:41 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:29:41 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:29:41 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:29:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:29:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:29:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:29:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:29:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:29:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:29:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:29:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:29:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:29:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:29:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:29:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:29:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:31:20 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:31:20 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:31:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:31:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:31:20 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:31:20 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:31:20 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:31:20 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:31:20 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:31:20 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:31:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:31:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:31:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:31:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:31:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:31:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:31:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:31:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:31:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:31:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:31:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:31:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:31:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:33:16 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:33:16 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:33:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:33:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:33:17 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:33:17 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:33:17 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:33:17 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:33:17 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:33:17 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:33:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:33:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:33:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:33:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:33:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:33:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:33:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:33:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:33:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:33:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:33:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:33:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:33:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:33:29 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:33:29 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:33:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:33:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:33:29 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:33:29 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:33:29 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:33:29 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:33:29 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:33:29 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:33:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:33:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:33:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:33:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:33:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:33:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:33:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:33:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:33:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:33:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:33:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:33:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:33:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:33:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:33:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=1000&sortBy=appointmentDate&sortDirection=asc
2025-09-07 08:33:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:33:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:33:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:33:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=1000&sortBy=appointmentDate&sortDirection=asc
2025-09-07 08:33:54 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:33:54 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:33:54 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:33:54 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:33:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:33:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date 
    limit
        ?
2025-09-07 08:33:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:33:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:33:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:33:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:33:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:33:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:33:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:33:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:33:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:33:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:33:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:34:00 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:34:00 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:34:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:34:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:34:00 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:34:00 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:34:00 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:34:00 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:34:00 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:34:00 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:34:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:34:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:34:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:34:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-07 08:34:22 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-07 08:34:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-07 08:34:22 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-07 08:36:46 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:36:46 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:36:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:36:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:36:46 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:36:46 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:36:46 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:36:46 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:36:46 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:36:46 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:36:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:36:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:36:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:36:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:36:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:36:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:36:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:36:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:36:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:36:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:36:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:36:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:36:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:37:06 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:37:06 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:37:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:37:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:37:06 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:37:06 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:37:06 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:37:06 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:37:06 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:37:06 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:37:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:37:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:37:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:37:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:37:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:37:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:37:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:37:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:37:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:37:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:37:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:37:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:37:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:40:06 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:40:06 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:40:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:40:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:40:06 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:40:06 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:40:06 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:40:06 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:40:06 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:40:06 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:40:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:40:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:40:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:40:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:40:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:40:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:40:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:40:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:40:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:40:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:40:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:40:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:40:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:40:09 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:40:09 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:40:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:40:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:40:09 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:40:09 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:40:09 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:40:09 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:40:09 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:40:09 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:40:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:40:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:40:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:40:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:40:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:40:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:40:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:40:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:40:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:40:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:40:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:40:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:40:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:40:14 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:40:14 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:40:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:40:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:40:14 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:40:14 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:40:14 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:40:14 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:40:14 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:40:14 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:40:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:40:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:40:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:40:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:40:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:40:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:40:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:40:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:40:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:40:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:40:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:40:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:40:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:40:44 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:40:44 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:40:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:40:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:40:44 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:40:44 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:40:44 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:40:44 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:40:44 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:40:44 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:40:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:40:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:40:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:40:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:40:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:40:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:40:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:40:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:40:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:40:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:40:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:40:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:40:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:40:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:40:51 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:40:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:40:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:40:51 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:40:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:40:51 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:40:51 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:40:51 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:40:51 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:40:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:40:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:40:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:40:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:40:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:40:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:40:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:40:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:40:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:40:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:40:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:40:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:40:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:41:48 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:41:48 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:41:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:41:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:41:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:41:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:41:49 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:41:49 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:41:49 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:41:49 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:41:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:41:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:41:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:41:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:41:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:41:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:41:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:41:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:41:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:41:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:41:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:41:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:41:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:42:14 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:42:14 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:42:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:42:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:42:14 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:42:14 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:42:14 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:42:14 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:42:14 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:42:14 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:42:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:42:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:42:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:42:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:42:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:42:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:42:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:42:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:42:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:42:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:42:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:42:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:42:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:42:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:42:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:42:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:42:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:42:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:42:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:42:56 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:42:56 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:42:56 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:42:56 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:42:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:42:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:42:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:42:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:42:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:42:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:42:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:42:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:42:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:42:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:42:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:42:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:42:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:42:59 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:42:59 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:42:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:42:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:42:59 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:42:59 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:42:59 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:42:59 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:42:59 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:42:59 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:42:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:42:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:42:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:42:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:42:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:42:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:42:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:42:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:42:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:42:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:42:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:42:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:42:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:43:16 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:43:16 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/2
2025-09-07 08:43:16 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:43:16 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/2
2025-09-07 08:43:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:43:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:43:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:43:16 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:43:16 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:43:16 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:43:16 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:43:16 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/2
2025-09-07 08:43:16 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:43:16 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:43:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:43:16 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAppointmentById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:43:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:43:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:43:16 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAppointmentById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:43:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-09-07 08:43:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:43:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:43:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:43:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:43:49 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:43:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:43:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:43:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:43:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:43:49 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:43:49 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:43:49 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:43:49 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:43:49 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:43:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:43:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:43:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:43:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:43:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:43:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:43:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:43:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:43:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:43:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:43:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:43:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:43:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:44:17 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/3?reason=%D8%AA%D9%85%20%D8%AA%D9%82%D8%AF%D9%8A%D9%85%20%D8%A7%D9%84%D8%B9%D9%84%D8%A7%D8%AC%20%D9%84%D9%87
2025-09-07 08:44:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /appointments/3?reason=%D8%AA%D9%85%20%D8%AA%D9%82%D8%AF%D9%8A%D9%85%20%D8%A7%D9%84%D8%B9%D9%84%D8%A7%D8%AC%20%D9%84%D9%87
2025-09-07 08:44:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:44:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /appointments/3?reason=%D8%AA%D9%85%20%D8%AA%D9%82%D8%AF%D9%8A%D9%85%20%D8%A7%D9%84%D8%B9%D9%84%D8%A7%D8%AC%20%D9%84%D9%87
2025-09-07 08:44:17 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.cancelAppointment(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:44:17 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.cancelAppointment(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:44:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-09-07 08:44:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:44:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* update
        for com.nakqeeb.amancare.entity.Appointment */update appointments 
    set
        appointment_date=?,
        appointment_time=?,
        appointment_type=?,
        chief_complaint=?,
        clinic_id=?,
        created_by=?,
        doctor_id=?,
        duration_minutes=?,
        notes=?,
        patient_id=?,
        status=?,
        updated_at=? 
    where
        id=?
2025-09-07 08:44:17 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:44:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:44:17 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:44:17 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:44:17 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:44:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:44:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:44:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:44:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:44:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:44:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:44:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:44:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:44:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:44:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:44:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:44:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:44:24 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/3
2025-09-07 08:44:24 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/3
2025-09-07 08:44:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:44:24 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/3
2025-09-07 08:44:24 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAppointmentById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:44:24 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAppointmentById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:44:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-09-07 08:44:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:44:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:44:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:44:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:44:24 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/undefined/upcoming
2025-09-07 08:44:24 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/undefined/upcoming
2025-09-07 08:44:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:44:24 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/undefined/upcoming
2025-09-07 08:44:25 [http-nio-8080-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'patientId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "undefined"]
2025-09-07 08:44:29 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:44:29 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:44:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:44:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:44:29 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:44:29 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:44:29 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:44:29 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:44:29 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:44:29 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:44:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:44:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:44:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:44:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:44:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:44:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:44:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:44:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:44:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:44:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:44:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:44:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:44:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:44:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/3
2025-09-07 08:44:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:44:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/3
2025-09-07 08:44:32 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAppointmentById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:44:32 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAppointmentById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:44:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-09-07 08:44:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:44:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:44:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:44:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:44:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/undefined/upcoming
2025-09-07 08:44:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:44:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/undefined/upcoming
2025-09-07 08:44:32 [http-nio-8080-exec-9] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'patientId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "undefined"]
2025-09-07 08:45:06 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:45:06 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=1000&sortBy=appointmentDate&sortDirection=asc
2025-09-07 08:45:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:45:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:45:06 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:45:06 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:45:06 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:45:06 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=1000&sortBy=appointmentDate&sortDirection=asc
2025-09-07 08:45:06 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:45:06 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:45:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:45:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:45:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date 
    limit
        ?
2025-09-07 08:45:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:45:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:45:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:45:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:45:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:45:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:45:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:45:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:45:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:45:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:45:09 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/NaN
2025-09-07 08:45:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:45:09 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/NaN
2025-09-07 08:45:09 [http-nio-8080-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'id': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "NaN"]
2025-09-07 08:45:09 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:45:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:45:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:45:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:45:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:45:09 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:45:09 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:45:09 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:45:09 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:45:09 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:45:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:45:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:45:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:45:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:45:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:45:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:45:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:45:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:45:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:45:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:45:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:45:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:45:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:46:53 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:46:53 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:46:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:46:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:46:53 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:46:53 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:46:53 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:46:53 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:46:53 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:46:53 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:46:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:46:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:46:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:46:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:46:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:46:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:46:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:46:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:46:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:46:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:46:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:46:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:46:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:46:58 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:46:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:46:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:46:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:46:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:46:58 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:46:58 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:46:58 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:46:58 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:46:58 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:46:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:46:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:46:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:46:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:46:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:46:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:46:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:46:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:46:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:46:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:46:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:46:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:46:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:47:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:47:03 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/3
2025-09-07 08:47:03 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:47:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:47:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:47:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:47:03 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:47:03 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:47:03 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:47:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:47:03 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/3
2025-09-07 08:47:03 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAppointmentById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:47:03 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:47:03 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAppointmentById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:47:03 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:47:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:47:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:47:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-09-07 08:47:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:47:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:47:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:47:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:47:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:48:10 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/NaN
2025-09-07 08:48:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:48:10 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/NaN
2025-09-07 08:48:11 [http-nio-8080-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'id': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "NaN"]
2025-09-07 08:48:11 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:48:11 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:48:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:48:11 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:48:11 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:48:11 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:48:11 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:48:11 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:48:11 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:48:11 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:48:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:48:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:48:11 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:48:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:48:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:48:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:48:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:48:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:48:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:48:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:48:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:48:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:48:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:48:16 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:48:16 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:48:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:48:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:48:16 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:48:16 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:48:16 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:48:16 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:48:16 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:48:16 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:48:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:48:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:48:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:48:42 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-07 08:48:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:48:42 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-07 08:48:42 [http-nio-8080-exec-9] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [1] in public org.springframework.http.ResponseEntity<com.nakqeeb.amancare.dto.response.ApiResponse<com.nakqeeb.amancare.dto.response.AppointmentResponse>> com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest): [Field error in object 'createAppointmentRequest' on field 'appointmentDate': rejected value [2025-09-07]; codes [Future.createAppointmentRequest.appointmentDate,Future.appointmentDate,Future.java.time.LocalDate,Future]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createAppointmentRequest.appointmentDate,appointmentDate]; arguments []; default message [appointmentDate]]; default message [تاريخ الموعد يجب أن يكون في المستقبل]] ]
2025-09-07 08:48:48 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-07 08:48:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:48:48 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-07 08:48:48 [http-nio-8080-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [1] in public org.springframework.http.ResponseEntity<com.nakqeeb.amancare.dto.response.ApiResponse<com.nakqeeb.amancare.dto.response.AppointmentResponse>> com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest): [Field error in object 'createAppointmentRequest' on field 'appointmentDate': rejected value [2025-09-07]; codes [Future.createAppointmentRequest.appointmentDate,Future.appointmentDate,Future.java.time.LocalDate,Future]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createAppointmentRequest.appointmentDate,appointmentDate]; arguments []; default message [appointmentDate]]; default message [تاريخ الموعد يجب أن يكون في المستقبل]] ]
2025-09-07 08:49:09 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-07 08:49:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:49:09 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-07 08:49:09 [http-nio-8080-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [1] in public org.springframework.http.ResponseEntity<com.nakqeeb.amancare.dto.response.ApiResponse<com.nakqeeb.amancare.dto.response.AppointmentResponse>> com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest): [Field error in object 'createAppointmentRequest' on field 'appointmentDate': rejected value [2025-09-07]; codes [Future.createAppointmentRequest.appointmentDate,Future.appointmentDate,Future.java.time.LocalDate,Future]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createAppointmentRequest.appointmentDate,appointmentDate]; arguments []; default message [appointmentDate]]; default message [تاريخ الموعد يجب أن يكون في المستقبل]] ]
2025-09-07 08:50:06 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-07 08:50:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:50:06 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-07 08:50:06 [http-nio-8080-exec-10] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [1] in public org.springframework.http.ResponseEntity<com.nakqeeb.amancare.dto.response.ApiResponse<com.nakqeeb.amancare.dto.response.AppointmentResponse>> com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest): [Field error in object 'createAppointmentRequest' on field 'appointmentDate': rejected value [2025-09-07]; codes [Future.createAppointmentRequest.appointmentDate,Future.appointmentDate,Future.java.time.LocalDate,Future]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createAppointmentRequest.appointmentDate,appointmentDate]; arguments []; default message [appointmentDate]]; default message [تاريخ الموعد يجب أن يكون في المستقبل]] ]
2025-09-07 08:50:35 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-07 08:50:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:50:35 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-07 08:50:35 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [1] in public org.springframework.http.ResponseEntity<com.nakqeeb.amancare.dto.response.ApiResponse<com.nakqeeb.amancare.dto.response.AppointmentResponse>> com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest): [Field error in object 'createAppointmentRequest' on field 'appointmentDate': rejected value [2025-09-07]; codes [Future.createAppointmentRequest.appointmentDate,Future.appointmentDate,Future.java.time.LocalDate,Future]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createAppointmentRequest.appointmentDate,appointmentDate]; arguments []; default message [appointmentDate]]; default message [تاريخ الموعد يجب أن يكون في المستقبل]] ]
2025-09-07 08:51:11 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-07 08:51:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:51:11 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-07 08:51:11 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:51:11 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:51:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:51:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:51:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:51:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:51:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.doctor = :doctor 
        AND a.appointmentDate = :date 
        AND a.status NOT IN ('CANCELLED', 'NO_SHOW') 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.doctor_id=? 
            and a1_0.appointment_date=? 
            and a1_0.status not in ('CANCELLED', 'NO_SHOW') 
        order by
            a1_0.appointment_time
2025-09-07 08:51:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.Appointment */insert 
    into
        appointments (appointment_date, appointment_time, appointment_type, chief_complaint, clinic_id, created_at, created_by, doctor_id, duration_minutes, notes, patient_id, status, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-07 08:51:11 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:51:11 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:51:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:51:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:51:11 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:51:11 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:51:11 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:51:11 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:51:11 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:51:11 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:51:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:51:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:51:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:51:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:51:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:51:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:51:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:51:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:51:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:51:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:51:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:51:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:51:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:51:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:51:24 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:51:24 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-07 08:51:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:51:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:51:24 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-07 08:51:24 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:51:24 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:51:24 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:51:24 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:51:24 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:51:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:51:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:51:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-07 08:51:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:51:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-07 08:51:26 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:51:26 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:51:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:51:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:51:26 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:51:26 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:51:26 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:51:26 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:51:26 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:51:26 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:51:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:51:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:51:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:51:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:51:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:51:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:51:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:51:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:51:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:51:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:51:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:51:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:51:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:51:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:51:27 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:51:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:51:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:51:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:51:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:51:27 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:51:27 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:51:27 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:51:27 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:51:27 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:51:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:51:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:51:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:51:48 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-07 08:51:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:51:48 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-07 08:51:48 [http-nio-8080-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.nakqeeb.amancare.entity.AppointmentType` from String "ROUTINE_CHECK": not one of the values accepted for Enum class: [EMERGENCY, FOLLOW_UP, CONSULTATION]]
2025-09-07 08:51:58 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-07 08:51:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:51:58 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-07 08:51:58 [http-nio-8080-exec-9] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.nakqeeb.amancare.entity.AppointmentType` from String "ROUTINE_CHECK": not one of the values accepted for Enum class: [EMERGENCY, FOLLOW_UP, CONSULTATION]]
2025-09-07 08:52:04 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-07 08:52:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:52:04 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-07 08:52:04 [http-nio-8080-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.nakqeeb.amancare.entity.AppointmentType` from String "ROUTINE_CHECK": not one of the values accepted for Enum class: [EMERGENCY, FOLLOW_UP, CONSULTATION]]
2025-09-07 08:52:29 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-07 08:52:29 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:52:29 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-07 08:52:29 [http-nio-8080-exec-10] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.nakqeeb.amancare.entity.AppointmentType` from String "ROUTINE_CHECK": not one of the values accepted for Enum class: [EMERGENCY, FOLLOW_UP, CONSULTATION]]
2025-09-07 08:52:41 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-07 08:52:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:52:41 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-07 08:52:41 [http-nio-8080-exec-6] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.nakqeeb.amancare.entity.AppointmentType` from String "ROUTINE_CHECK": not one of the values accepted for Enum class: [EMERGENCY, FOLLOW_UP, CONSULTATION]]
2025-09-07 08:53:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/me
2025-09-07 08:53:18 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-07 08:53:18 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-07 08:53:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/me
2025-09-07 08:53:18 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-07 08:53:18 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController] with authorization manager org.springframework.security.authorization.method.PreAuthorizeAuthorizationManager@4b46eb38 and result ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasRole('SYSTEM_ADMIN') or hasRole('ADMIN') or hasRole('DOCTOR') or hasRole('NURSE') or hasRole('RECEPTIONIST')]
2025-09-07 08:53:18 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authorization.AuthorizationDeniedException: Access Denied]
2025-09-07 08:53:27 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/refresh
2025-09-07 08:53:27 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-07 08:53:27 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-07 08:53:27 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/refresh
2025-09-07 08:53:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-09-07 08:53:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-07 08:53:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-07 08:53:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-09-07 08:53:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.username = :usernameOrEmail 
        OR u.email = :usernameOrEmail */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.username=? 
            or u1_0.email=?
2025-09-07 08:53:37 [http-nio-8080-exec-2] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-07 08:54:05 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/all
2025-09-07 08:54:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:54:05 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/all
2025-09-07 08:54:05 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAllDoctorsSchedules(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-09-07 08:54:05 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAllDoctorsSchedules(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-09-07 08:54:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor.clinic.id = :clinicId 
        AND ds.isActive = true */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        join
            users d1_0 
                on d1_0.id=ds1_0.doctor_id 
        where
            d1_0.clinic_id=? 
            and ds1_0.is_active=1
2025-09-07 08:54:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:54:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:54:41 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-07 08:54:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:54:41 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-07 08:54:41 [http-nio-8080-exec-10] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.nakqeeb.amancare.entity.AppointmentType` from String "ROUTINE_CHECK": not one of the values accepted for Enum class: [EMERGENCY, FOLLOW_UP, CONSULTATION]]
2025-09-07 08:54:52 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-07 08:54:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:54:52 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-07 08:54:52 [http-nio-8080-exec-6] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.nakqeeb.amancare.entity.AppointmentType` from String "ROUTINE_CHECK": not one of the values accepted for Enum class: [EMERGENCY, FOLLOW_UP, CONSULTATION]]
2025-09-07 08:54:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-07 08:54:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:54:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-07 08:54:58 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.nakqeeb.amancare.entity.AppointmentType` from String "ROUTINE_CHECK": not one of the values accepted for Enum class: [EMERGENCY, FOLLOW_UP, CONSULTATION]]
2025-09-07 08:55:09 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-09-07 08:55:09 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:55:09 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:55:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:55:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:55:09 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 08:55:09 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:55:09 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:55:09 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:55:09 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:55:09 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 08:55:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:55:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:55:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 08:55:37 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-07 08:55:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:55:37 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-07 08:55:37 [http-nio-8080-exec-9] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [1] in public org.springframework.http.ResponseEntity<com.nakqeeb.amancare.dto.response.ApiResponse<com.nakqeeb.amancare.dto.response.AppointmentResponse>> com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest): [Field error in object 'createAppointmentRequest' on field 'appointmentDate': rejected value [2025-09-07]; codes [Future.createAppointmentRequest.appointmentDate,Future.appointmentDate,Future.java.time.LocalDate,Future]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createAppointmentRequest.appointmentDate,appointmentDate]; arguments []; default message [appointmentDate]]; default message [تاريخ الموعد يجب أن يكون في المستقبل]] ]
2025-09-07 08:56:24 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-07 08:56:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:56:24 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-07 08:56:24 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:56:24 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:56:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:56:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:56:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:56:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:56:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.doctor = :doctor 
        AND a.appointmentDate = :date 
        AND a.status NOT IN ('CANCELLED', 'NO_SHOW') 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.doctor_id=? 
            and a1_0.appointment_date=? 
            and a1_0.status not in ('CANCELLED', 'NO_SHOW') 
        order by
            a1_0.appointment_time
2025-09-07 08:56:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.Appointment */insert 
    into
        appointments (appointment_date, appointment_time, appointment_type, chief_complaint, clinic_id, created_at, created_by, doctor_id, duration_minutes, notes, patient_id, status, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-07 08:56:24 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:56:24 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:56:24 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:56:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:56:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:56:24 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:56:24 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:56:24 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:56:24 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:56:24 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:56:24 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:56:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:56:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:56:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:56:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:56:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:56:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:56:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:56:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:56:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:56:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:56:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:56:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:56:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:56:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:56:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:56:32 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:56:32 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:56:32 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:56:32 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:56:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:56:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:56:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:56:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:56:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:56:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:56:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:56:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:56:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:56:35 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/NaN
2025-09-07 08:56:35 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/NaN
2025-09-07 08:56:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:56:35 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/NaN
2025-09-07 08:56:35 [http-nio-8080-exec-2] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'id': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "NaN"]
2025-09-07 08:56:35 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:56:35 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:56:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:56:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:56:35 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:56:35 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:56:35 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:56:35 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:56:35 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:56:35 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:56:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:56:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:56:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:56:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:56:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:56:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:56:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:56:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:56:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:56:37 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/NaN
2025-09-07 08:56:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:56:37 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/NaN
2025-09-07 08:56:37 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'id': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "NaN"]
2025-09-07 08:56:37 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:56:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 08:56:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:56:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:56:37 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-07 08:56:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 08:56:37 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:56:37 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 08:56:37 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:56:37 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 08:56:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 08:56:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 08:56:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-07 08:56:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-07 08:56:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:56:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:56:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:56:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:56:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:56:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 08:59:57 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-07 08:59:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 08:59:57 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-07 08:59:57 [http-nio-8080-exec-2] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [1] in public org.springframework.http.ResponseEntity<com.nakqeeb.amancare.dto.response.ApiResponse<com.nakqeeb.amancare.dto.response.AppointmentResponse>> com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest): [Field error in object 'createAppointmentRequest' on field 'appointmentDate': rejected value [2024-09-07]; codes [Future.createAppointmentRequest.appointmentDate,Future.appointmentDate,Future.java.time.LocalDate,Future]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createAppointmentRequest.appointmentDate,appointmentDate]; arguments []; default message [appointmentDate]]; default message [تاريخ الموعد يجب أن يكون في المستقبل]] ]
2025-09-07 09:00:16 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-07 09:00:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 09:00:16 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-07 09:00:16 [http-nio-8080-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [1] in public org.springframework.http.ResponseEntity<com.nakqeeb.amancare.dto.response.ApiResponse<com.nakqeeb.amancare.dto.response.AppointmentResponse>> com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest): [Field error in object 'createAppointmentRequest' on field 'appointmentDate': rejected value [2024-09-07]; codes [Future.createAppointmentRequest.appointmentDate,Future.appointmentDate,Future.java.time.LocalDate,Future]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createAppointmentRequest.appointmentDate,appointmentDate]; arguments []; default message [appointmentDate]]; default message [تاريخ الموعد يجب أن يكون في المستقبل]] ]
2025-09-07 09:00:22 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-07 09:00:22 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 09:00:22 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-07 09:00:22 [http-nio-8080-exec-9] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [1] in public org.springframework.http.ResponseEntity<com.nakqeeb.amancare.dto.response.ApiResponse<com.nakqeeb.amancare.dto.response.AppointmentResponse>> com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest): [Field error in object 'createAppointmentRequest' on field 'appointmentDate': rejected value [2024-09-08]; codes [Future.createAppointmentRequest.appointmentDate,Future.appointmentDate,Future.java.time.LocalDate,Future]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createAppointmentRequest.appointmentDate,appointmentDate]; arguments []; default message [appointmentDate]]; default message [تاريخ الموعد يجب أن يكون في المستقبل]] ]
2025-09-07 09:00:42 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 09:00:42 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-07 09:00:42 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 09:00:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 09:00:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 09:00:42 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-07 09:00:42 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 09:00:42 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-07 09:00:42 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-07 09:00:42 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 09:00:42 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-07 09:00:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 09:00:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-07 09:00:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-07 09:00:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-07 09:00:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 09:00:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-07 09:00:51 [http-nio-8080-exec-7] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [1] in public org.springframework.http.ResponseEntity<com.nakqeeb.amancare.dto.response.ApiResponse<com.nakqeeb.amancare.dto.response.AppointmentResponse>> com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest): [Field error in object 'createAppointmentRequest' on field 'appointmentDate': rejected value [2025-09-07]; codes [Future.createAppointmentRequest.appointmentDate,Future.appointmentDate,Future.java.time.LocalDate,Future]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createAppointmentRequest.appointmentDate,appointmentDate]; arguments []; default message [appointmentDate]]; default message [تاريخ الموعد يجب أن يكون في المستقبل]] ]
2025-09-07 09:01:00 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-07 09:01:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-07 09:01:00 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-07 09:01:00 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 09:01:00 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-07 09:01:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-07 09:01:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-07 09:01:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
