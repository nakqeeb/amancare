2025-09-22 00:39:11 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h35m39s683ms).
2025-09-22 01:51:51 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h12m39s751ms).
2025-09-22 03:06:04 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h14m13s546ms).
2025-09-22 04:22:09 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h16m5s215ms).
2025-09-22 05:35:08 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h12m58s46ms).
2025-09-22 05:41:39 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 05:41:39 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 05:41:39 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 05:41:39 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 05:41:39 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 05:41:41 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 10944 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 05:41:41 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 05:41:41 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 05:41:41 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 05:41:42 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 05:41:42 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 15 JPA repository interfaces.
2025-09-22 05:41:43 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 05:41:43 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 05:41:43 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 05:41:43 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 05:41:43 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1102 ms
2025-09-22 05:41:43 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 05:41:43 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 05:41:43 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 05:41:43 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 05:41:43 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 05:41:43 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4e0cd4cb
2025-09-22 05:41:43 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 05:41:43 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 05:41:43 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 05:41:44 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 05:41:44 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 05:41:44 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 05:41:44 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 05:41:45 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 05:41:45 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 05:41:45 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 05:41:46 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 05:41:46 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 05:41:46 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 05:41:46 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 05:41:46 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 05:41:46 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 05:41:46 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 05:41:46 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.141 seconds (process running for 5.429)
2025-09-22 05:41:46 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 05:41:46 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 05:41:46 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 05:41:46 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 05:41:54 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 05:41:54 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 05:41:54 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-09-22 05:41:54 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-09-22 05:41:54 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 05:41:54 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 05:41:54 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-09-22 05:41:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-09-22 05:41:54 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 05:41:54 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 05:41:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-09-22 05:41:54 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-09-22 05:41:54 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 05:41:54 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 05:41:54 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-09-22 05:41:54 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-22 05:41:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-09-22 05:41:54 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 05:41:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 05:41:54 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 05:41:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-09-22 05:41:54 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-09-22 05:41:54 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 05:41:54 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 05:41:54 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-09-22 05:41:54 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 05:41:54 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-22 05:41:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs/swagger-config
2025-09-22 05:41:54 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 05:41:54 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-22 05:41:54 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 05:41:54 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 05:41:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs/swagger-config
2025-09-22 05:41:54 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 05:41:54 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-22 05:41:54 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs
2025-09-22 05:41:54 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 05:41:54 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 05:41:54 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs
2025-09-22 05:41:55 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 810 ms
2025-09-22 05:42:21 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-09-22 05:42:21 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 05:42:21 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 05:42:21 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-09-22 05:42:21 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-09-22 05:42:21 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-22 05:42:21 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-09-22 05:42:21 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 05:42:21 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 05:42:21 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 05:42:21 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 05:42:21 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-09-22 05:42:21 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-09-22 05:42:21 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-22 05:42:21 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 05:42:21 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 05:42:21 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 05:42:21 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-09-22 05:42:21 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 05:42:21 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-09-22 05:42:21 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-09-22 05:42:21 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 05:42:21 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 05:42:21 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-09-22 05:42:21 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs/swagger-config
2025-09-22 05:42:21 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 05:42:21 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 05:42:21 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs/swagger-config
2025-09-22 05:42:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-22 05:42:21 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 05:42:21 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 05:42:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-22 05:42:21 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs
2025-09-22 05:42:21 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 05:42:21 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 05:42:21 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs
2025-09-22 05:42:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-09-22 05:42:43 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 05:42:43 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 05:42:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-09-22 05:42:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.username = :usernameOrEmail 
        OR u.email = :usernameOrEmail */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.username=? 
            or u1_0.email=?
2025-09-22 05:42:44 [http-nio-8080-exec-3] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-22 05:43:17 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /clinics/9
2025-09-22 05:43:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 05:43:17 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /clinics/9
2025-09-22 05:43:17 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 05:43:17 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 05:43:17 [http-nio-8080-exec-1] INFO  c.n.a.controller.ClinicController - Fetching clinic 9 by user: 2
2025-09-22 05:43:17 [http-nio-8080-exec-1] INFO  c.n.amancare.service.ClinicService - Fetching clinic with ID: 9 by user: 2
2025-09-22 05:43:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 05:43:35 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /clinics?page=0&size=10&sortBy=name&sortDirection=ASC
2025-09-22 05:43:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 05:43:35 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /clinics?page=0&size=10&sortBy=name&sortDirection=ASC
2025-09-22 05:43:35 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getAllClinics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.String,java.lang.Boolean,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 05:43:35 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getAllClinics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.String,java.lang.Boolean,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 05:43:35 [http-nio-8080-exec-9] INFO  c.n.amancare.service.ClinicService - Fetching all clinics - User: 2, Role: SYSTEM_ADMIN
2025-09-22 05:43:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    order by
        c1_0.name 
    limit
        ?, ?
2025-09-22 05:43:35 [http-nio-8080-exec-9] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-09-22 05:44:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /clinics?search=%D8%A7%D9%84%D9%86%D9%88%D8%B1&page=0&size=10&sortBy=name&sortDirection=ASC
2025-09-22 05:44:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 05:44:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /clinics?search=%D8%A7%D9%84%D9%86%D9%88%D8%B1&page=0&size=10&sortBy=name&sortDirection=ASC
2025-09-22 05:44:02 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getAllClinics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.String,java.lang.Boolean,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 05:44:02 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getAllClinics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.String,java.lang.Boolean,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 05:44:02 [http-nio-8080-exec-5] INFO  c.n.amancare.service.ClinicService - Fetching all clinics - User: 2, Role: SYSTEM_ADMIN
2025-09-22 05:44:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Clinic c 
    WHERE
        LOWER(c.name) LIKE LOWER(CONCAT('%', :name, '%')) 
    order by
        c.name asc */ select
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start 
        from
            clinics c1_0 
        where
            lower(c1_0.name) like lower(concat('%', ?, '%')) escape '' 
        order by
            c1_0.name 
        limit
            ?
2025-09-22 05:44:20 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /clinics/9/statistics
2025-09-22 05:44:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 05:44:20 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /clinics/9/statistics
2025-09-22 05:44:20 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 05:44:20 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 05:44:20 [http-nio-8080-exec-4] INFO  c.n.a.controller.ClinicController - Fetching statistics for clinic 9 by user: 2
2025-09-22 05:44:20 [http-nio-8080-exec-4] INFO  c.n.amancare.service.ClinicService - Fetching statistics for clinic: 9 by user: 2
2025-09-22 05:44:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 05:44:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(u1_0.id) 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-09-22 05:44:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-22 05:44:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-22 05:44:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(a1_0.id) 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=?
2025-09-22 05:44:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(a) 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND DATE(a.appointmentDate) = :date 
        AND a.status NOT IN ('CANCELLED', 'NO_SHOW') */ select
            count(a1_0.id) 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and date(a1_0.appointment_date)=? 
            and a1_0.status not in ('CANCELLED', 'NO_SHOW')
2025-09-22 05:44:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-09-22 05:44:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=? 
            and i1_0.status='PAID'
2025-09-22 05:44:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('SENT', 'PARTIALLY_PAID', 'OVERDUE') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('SENT', 'PARTIALLY_PAID', 'OVERDUE')
2025-09-22 05:44:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /clinics/expiring-subscriptions?daysAhead=30
2025-09-22 05:44:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 05:44:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /clinics/expiring-subscriptions?daysAhead=30
2025-09-22 05:44:58 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getExpiringSoonClinics(int,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 05:44:58 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getExpiringSoonClinics(int,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 05:44:58 [http-nio-8080-exec-3] INFO  c.n.a.controller.ClinicController - Fetching clinics with expiring subscriptions within 30 days
2025-09-22 05:44:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Clinic c 
    WHERE
        c.subscriptionEndDate BETWEEN :startDate AND :endDate */ select
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start 
        from
            clinics c1_0 
        where
            c1_0.subscription_end_date between ? and ?
2025-09-22 07:11:30 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h24m16s399ms).
2025-09-22 08:04:31 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=53m1s637ms).
2025-09-22 08:21:01 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Retrograde clock change detected (housekeeper delta=29s739ms), soft-evicting connections from pool.
2025-09-22 08:58:04 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 08:58:04 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 08:58:04 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 08:58:04 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 09:14:45 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 09:14:45 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 09:14:45 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 09:14:45 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 09:14:45 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 09:14:48 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 29820 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 09:14:48 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 09:14:48 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 09:14:48 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 09:14:49 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 09:14:49 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 57 ms. Found 15 JPA repository interfaces.
2025-09-22 09:14:49 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 09:14:49 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 09:14:49 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 09:14:49 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 09:14:49 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1046 ms
2025-09-22 09:14:49 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 09:14:49 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 09:14:49 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 09:14:49 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 09:14:49 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 09:14:49 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2d678dfa
2025-09-22 09:14:49 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 09:14:49 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 09:14:49 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 09:14:50 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 09:14:50 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 09:14:50 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       add column created_at datetime(6) not null
2025-09-22 09:14:50 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       add column updated_at datetime(6)
2025-09-22 09:14:50 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       add column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 09:14:50 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column description varchar(500)
2025-09-22 09:14:50 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       add column discount_amount decimal(10,2)
2025-09-22 09:14:50 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       add column discount_percentage decimal(5,2)
2025-09-22 09:14:50 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       add column notes TEXT
2025-09-22 09:14:50 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       add column performed_by varchar(255)
2025-09-22 09:14:50 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       add column procedure_date date
2025-09-22 09:14:50 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       add column service_code varchar(50)
2025-09-22 09:14:50 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       add column tax_amount decimal(10,2)
2025-09-22 09:14:50 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       add column is_taxable bit
2025-09-22 09:14:50 [restartedMain] DEBUG org.hibernate.SQL - 
    create index idx_invoice_id 
       on invoice_items (invoice_id)
2025-09-22 09:14:50 [restartedMain] DEBUG org.hibernate.SQL - 
    create index idx_service_name 
       on invoice_items (service_name)
2025-09-22 09:14:50 [restartedMain] DEBUG org.hibernate.SQL - 
    create index idx_category 
       on invoice_items (category)
2025-09-22 09:14:50 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 09:14:51 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 09:14:51 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 09:14:51 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 09:14:51 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 09:14:52 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 09:14:52 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 09:14:53 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 09:14:53 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 09:14:53 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 09:14:53 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 09:14:53 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 09:14:53 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.258 seconds (process running for 5.531)
2025-09-22 09:14:53 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 09:14:53 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 09:14:53 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 09:14:53 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 09:15:10 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 09:15:10 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 09:15:10 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-22 09:15:10 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-09-22 09:15:10 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 09:15:10 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 09:15:10 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-09-22 09:15:10 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-09-22 09:15:10 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-09-22 09:15:10 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 09:15:10 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 09:15:10 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-09-22 09:15:10 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 09:15:10 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 09:15:10 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-22 09:15:10 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 09:15:10 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-09-22 09:15:10 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 09:15:10 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-22 09:15:10 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-09-22 09:15:10 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-09-22 09:15:10 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 09:15:10 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 09:15:10 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 09:15:10 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 09:15:10 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-09-22 09:15:10 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-09-22 09:15:10 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs/swagger-config
2025-09-22 09:15:10 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-22 09:15:10 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 09:15:10 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 09:15:10 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 09:15:10 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 09:15:10 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-22 09:15:10 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs/swagger-config
2025-09-22 09:15:10 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs
2025-09-22 09:15:10 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 09:15:10 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 09:15:10 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs
2025-09-22 09:15:11 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 817 ms
2025-09-22 09:36:27 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 09:36:27 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 09:36:27 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 09:36:27 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 09:36:27 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 09:36:29 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 35090 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 09:36:29 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 09:36:29 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 09:36:29 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 09:36:30 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 09:36:30 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 51 ms. Found 15 JPA repository interfaces.
2025-09-22 09:36:30 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 09:36:30 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 09:36:30 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 09:36:30 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 09:36:30 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1218 ms
2025-09-22 09:36:31 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 09:36:31 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 09:36:31 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 09:36:31 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 09:36:31 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 09:36:31 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@c175e4a
2025-09-22 09:36:31 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 09:36:31 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 09:36:31 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 09:36:32 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 09:36:32 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 09:36:32 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 09:36:32 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 09:36:32 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 09:36:33 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 09:36:33 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 09:36:33 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 09:36:34 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 09:36:34 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 09:36:35 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 09:36:35 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 09:36:35 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 09:36:35 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 09:36:35 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 09:36:35 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 6.988 seconds (process running for 7.367)
2025-09-22 09:36:35 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 09:36:35 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 09:36:35 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 09:36:35 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 10:42:32 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=21m555ms).
2025-09-22 12:19:02 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h36m30s442ms).
2025-09-22 13:23:18 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h4m15s982ms).
2025-09-22 13:49:48 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=26m29s934ms).
2025-09-22 13:51:37 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 13:51:37 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 13:51:37 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2025-09-22 13:51:37 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-09-22 13:51:37 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 13:51:37 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 13:51:37 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-09-22 13:51:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-09-22 13:51:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 13:51:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 13:51:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-09-22 13:51:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-09-22 13:51:37 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 13:51:37 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 13:51:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-09-22 13:51:37 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-22 13:51:37 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-09-22 13:51:37 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 13:51:37 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-09-22 13:51:37 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 13:51:37 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 13:51:37 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 13:51:37 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-09-22 13:51:37 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-22 13:51:37 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 13:51:37 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 13:51:37 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-09-22 13:51:37 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs/swagger-config
2025-09-22 13:51:37 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 13:51:37 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 13:51:37 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs/swagger-config
2025-09-22 13:51:37 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-22 13:51:37 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 13:51:37 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 13:51:37 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-22 13:51:37 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs
2025-09-22 13:51:37 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 13:51:37 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 13:51:37 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs
2025-09-22 13:51:38 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 1094 ms
2025-09-22 13:51:55 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-09-22 13:51:55 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 13:51:55 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 13:51:55 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-09-22 13:51:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.username = :usernameOrEmail 
        OR u.email = :usernameOrEmail */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.username=? 
            or u1_0.email=?
2025-09-22 13:51:55 [http-nio-8080-exec-4] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-22 13:52:20 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /clinics
2025-09-22 13:52:20 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 13:52:20 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 13:52:48 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /clinics
2025-09-22 13:52:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 13:52:48 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /clinics
2025-09-22 13:52:48 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.createClinic(com.nakqeeb.amancare.dto.request.CreateClinicRequest,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 13:52:48 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.createClinic(com.nakqeeb.amancare.dto.request.CreateClinicRequest,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 13:52:48 [http-nio-8080-exec-9] INFO  c.n.a.controller.ClinicController - Creating new clinic: عيادة الأمان الطبية by SYSTEM_ADMIN: 2
2025-09-22 13:52:48 [http-nio-8080-exec-9] INFO  c.n.amancare.service.ClinicService - Creating new clinic: عيادة الأمان الطبية by user: 2
2025-09-22 13:52:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        clinics c1_0 
    where
        upper(c1_0.name)=upper(?) 
    limit
        ?
2025-09-22 13:52:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.Clinic */insert 
    into
        clinics (address, created_at, description, email, is_active, name, phone, subscription_end_date, subscription_plan, subscription_start_date, updated_at, working_days, working_hours_end, working_hours_start) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-22 13:52:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-22 13:52:48 [http-nio-8080-exec-9] INFO  c.n.amancare.service.AuditLogService - Audit Log: User 2 performed CREATE on CLINIC #12 in clinic 12
2025-09-22 13:52:48 [http-nio-8080-exec-9] INFO  c.n.amancare.service.ClinicService - Successfully created clinic with ID: 12
2025-09-22 13:57:04 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 13:57:04 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 13:57:04 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 13:57:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 13:57:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 13:57:06 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 48711 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 13:57:06 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 13:57:06 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 13:57:06 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 13:57:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 13:57:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 15 JPA repository interfaces.
2025-09-22 13:57:07 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 13:57:07 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 13:57:07 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 13:57:07 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 13:57:07 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1054 ms
2025-09-22 13:57:08 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 13:57:08 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 13:57:08 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 13:57:08 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 13:57:08 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 13:57:08 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3339a270
2025-09-22 13:57:08 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 13:57:08 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 13:57:08 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 13:57:08 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 13:57:09 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 13:57:09 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 13:57:09 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 13:57:09 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 13:57:10 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 13:57:10 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 13:57:10 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 13:57:10 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 13:57:10 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 13:57:11 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 13:57:11 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 13:57:11 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 13:57:11 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 13:57:11 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 13:57:11 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.278 seconds (process running for 5.551)
2025-09-22 13:57:11 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 13:57:11 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 13:57:11 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 13:57:11 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 14:00:00 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 14:00:00 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 14:00:00 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 14:00:00 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 14:00:00 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 14:00:02 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 49440 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 14:00:02 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 14:00:02 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 14:00:02 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 14:00:02 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 14:00:02 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 15 JPA repository interfaces.
2025-09-22 14:00:03 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 14:00:03 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 14:00:03 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 14:00:03 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 14:00:03 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 983 ms
2025-09-22 14:00:03 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 14:00:03 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 14:00:03 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 14:00:03 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 14:00:03 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 14:00:03 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6179c0ce
2025-09-22 14:00:03 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 14:00:03 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 14:00:03 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 14:00:04 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 14:00:04 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 14:00:04 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 14:00:04 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 14:00:04 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 14:00:05 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 14:00:05 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 14:00:05 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 14:00:06 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 14:00:06 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 14:00:07 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 14:00:07 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 14:00:07 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 14:00:07 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 14:00:07 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 14:00:07 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.368 seconds (process running for 5.628)
2025-09-22 14:00:07 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 14:00:07 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 14:00:07 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 14:00:07 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 14:08:10 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 14:08:10 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 14:08:10 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 14:08:10 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 14:08:10 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 14:10:04 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 51885 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 14:10:04 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 14:10:04 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 14:10:04 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 14:10:04 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 14:10:04 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38 ms. Found 15 JPA repository interfaces.
2025-09-22 14:10:05 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 14:10:05 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 14:10:05 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 14:10:05 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 14:10:05 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 988 ms
2025-09-22 14:10:05 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 14:10:05 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 14:10:05 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 14:10:05 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 14:10:05 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 14:10:05 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3339a270
2025-09-22 14:10:05 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 14:10:05 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 14:10:05 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 14:10:06 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 14:10:06 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 14:10:06 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 14:10:06 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 14:10:06 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 14:10:07 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 14:10:07 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 14:10:07 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 14:10:08 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 14:10:08 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 14:10:08 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 14:10:08 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 14:10:08 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 14:10:08 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 14:10:08 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 14:10:08 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.088 seconds (process running for 5.365)
2025-09-22 14:10:08 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 14:10:08 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 14:10:08 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 14:10:08 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 14:10:21 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 14:10:21 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 14:10:21 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-22 14:10:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-09-22 14:10:21 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 14:10:21 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 14:10:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-09-22 14:10:21 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-09-22 14:10:21 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-09-22 14:10:21 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 14:10:21 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 14:10:21 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 14:10:21 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 14:10:21 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-22 14:10:21 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-09-22 14:10:21 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-09-22 14:10:21 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-09-22 14:10:21 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 14:10:21 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 14:10:21 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 14:10:21 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-09-22 14:10:21 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 14:10:21 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-09-22 14:10:21 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 14:10:21 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 14:10:21 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-22 14:10:21 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-09-22 14:10:21 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs/swagger-config
2025-09-22 14:10:21 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-22 14:10:21 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 14:10:21 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 14:10:21 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 14:10:21 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs/swagger-config
2025-09-22 14:10:21 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 14:10:21 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-22 14:10:21 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs
2025-09-22 14:10:21 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 14:10:21 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 14:10:21 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs
2025-09-22 14:10:22 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 859 ms
2025-09-22 14:10:57 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /clinics/{id}
2025-09-22 14:10:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 14:10:57 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /clinics/{id}
2025-09-22 14:10:57 [http-nio-8080-exec-4] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.nakqeeb.amancare.dto.response.ApiResponse<com.nakqeeb.amancare.dto.response.ClinicResponse>> com.nakqeeb.amancare.controller.ClinicController.updateClinic(com.nakqeeb.amancare.dto.request.UpdateClinicRequest,com.nakqeeb.amancare.security.UserPrincipal) with 2 errors: [Field error in object 'updateClinicRequest' on field 'email': rejected value [string]; codes [Email.updateClinicRequest.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [updateClinicRequest.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@246495f,.*]; default message [البريد الإلكتروني غير صحيح]] [Field error in object 'updateClinicRequest' on field 'phone': rejected value [string]; codes [ValidYemeniPhone.updateClinicRequest.phone,ValidYemeniPhone.phone,ValidYemeniPhone.java.lang.String,ValidYemeniPhone]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [updateClinicRequest.phone,phone]; arguments []; default message [phone]]; default message [رقم الهاتف يجب أن يكون رقماً يمنياً صحيحاً]] ]
2025-09-22 14:11:12 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /clinics/{id}
2025-09-22 14:11:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 14:11:12 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /clinics/{id}
2025-09-22 14:11:12 [http-nio-8080-exec-6] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.nakqeeb.amancare.dto.response.ApiResponse<com.nakqeeb.amancare.dto.response.ClinicResponse>> com.nakqeeb.amancare.controller.ClinicController.updateClinic(com.nakqeeb.amancare.dto.request.UpdateClinicRequest,com.nakqeeb.amancare.security.UserPrincipal): [Field error in object 'updateClinicRequest' on field 'email': rejected value [string]; codes [Email.updateClinicRequest.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [updateClinicRequest.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@246495f,.*]; default message [البريد الإلكتروني غير صحيح]] ]
2025-09-22 14:11:22 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /clinics/{id}
2025-09-22 14:11:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 14:11:22 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /clinics/{id}
2025-09-22 14:11:22 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.updateClinic(com.nakqeeb.amancare.dto.request.UpdateClinicRequest,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 14:11:22 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.updateClinic(com.nakqeeb.amancare.dto.request.UpdateClinicRequest,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 14:11:22 [http-nio-8080-exec-8] INFO  c.n.a.controller.ClinicController - SYSTEM_ADMIN is updating clinic with clinic context. ActingClinicId: null, Reason: null
2025-09-22 14:12:10 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /clinics/{id}
2025-09-22 14:12:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 14:12:10 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /clinics/{id}
2025-09-22 14:12:10 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.updateClinic(com.nakqeeb.amancare.dto.request.UpdateClinicRequest,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 14:12:10 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.updateClinic(com.nakqeeb.amancare.dto.request.UpdateClinicRequest,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 14:12:10 [http-nio-8080-exec-7] INFO  c.n.a.controller.ClinicController - SYSTEM_ADMIN is updating clinic with clinic context. ActingClinicId: null, Reason: null
2025-09-22 14:12:31 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /clinics/{id}
2025-09-22 14:12:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 14:12:31 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /clinics/{id}
2025-09-22 14:12:31 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.updateClinic(com.nakqeeb.amancare.dto.request.UpdateClinicRequest,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 14:12:31 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.updateClinic(com.nakqeeb.amancare.dto.request.UpdateClinicRequest,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 14:12:31 [http-nio-8080-exec-9] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 12 - Reason: asked by clinic admin
2025-09-22 14:12:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 14:12:31 [http-nio-8080-exec-9] INFO  c.n.a.controller.ClinicController - SYSTEM_ADMIN is updating clinic with clinic context. ActingClinicId: 12, Reason: asked by clinic admin
2025-09-22 14:12:31 [http-nio-8080-exec-9] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 12 - Reason: asked by clinic admin
2025-09-22 14:12:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Clinic x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            clinics c1_0 
        where
            c1_0.id=?
2025-09-22 14:12:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-22 14:12:31 [http-nio-8080-exec-9] INFO  c.n.a.service.ClinicContextService - System Admin Action Logged: User 2 performed CONTEXT_SWITCH on clinic 12 - asked by clinic admin
2025-09-22 14:12:31 [http-nio-8080-exec-9] INFO  c.n.amancare.service.ClinicService - Updating clinic with ID: 12 by user: 2
2025-09-22 14:12:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 14:12:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-22 14:12:31 [http-nio-8080-exec-9] INFO  c.n.amancare.service.AuditLogService - Audit Log: User 2 performed UPDATE on CLINIC #12 in clinic 12
2025-09-22 14:12:31 [http-nio-8080-exec-9] INFO  c.n.amancare.service.ClinicService - Successfully updated clinic with ID: 12
2025-09-22 14:12:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* update
        for com.nakqeeb.amancare.entity.Clinic */update clinics 
    set
        address=?,
        description=?,
        email=?,
        is_active=?,
        name=?,
        phone=?,
        subscription_end_date=?,
        subscription_plan=?,
        subscription_start_date=?,
        updated_at=?,
        working_days=?,
        working_hours_end=?,
        working_hours_start=? 
    where
        id=?
2025-09-22 14:13:11 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /clinics/12/subscription
2025-09-22 14:13:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 14:13:11 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /clinics/12/subscription
2025-09-22 14:13:11 [http-nio-8080-exec-10] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): was expecting double-quote to start field name]
2025-09-22 14:13:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /clinics/12/subscription
2025-09-22 14:13:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 14:13:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /clinics/12/subscription
2025-09-22 14:13:27 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.updateSubscription(java.lang.Long,com.nakqeeb.amancare.dto.request.UpdateSubscriptionRequest,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 14:13:27 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.updateSubscription(java.lang.Long,com.nakqeeb.amancare.dto.request.UpdateSubscriptionRequest,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 14:13:27 [http-nio-8080-exec-1] INFO  c.n.a.controller.ClinicController - Updating subscription for clinic 12 by SYSTEM_ADMIN: 2
2025-09-22 14:13:27 [http-nio-8080-exec-1] INFO  c.n.amancare.service.ClinicService - Updating subscription for clinic: 12 by user: 2
2025-09-22 14:13:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 14:13:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-22 14:13:27 [http-nio-8080-exec-1] INFO  c.n.amancare.service.AuditLogService - Audit Log: User 2 performed UPDATE on CLINIC #12 in clinic 12
2025-09-22 14:13:27 [http-nio-8080-exec-1] INFO  c.n.amancare.service.ClinicService - Successfully updated subscription for clinic: 12
2025-09-22 14:13:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* update
        for com.nakqeeb.amancare.entity.Clinic */update clinics 
    set
        address=?,
        description=?,
        email=?,
        is_active=?,
        name=?,
        phone=?,
        subscription_end_date=?,
        subscription_plan=?,
        subscription_start_date=?,
        updated_at=?,
        working_days=?,
        working_hours_end=?,
        working_hours_start=? 
    where
        id=?
2025-09-22 14:14:07 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /clinics/12/subscription
2025-09-22 14:14:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 14:14:07 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /clinics/12/subscription
2025-09-22 14:14:07 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.nakqeeb.amancare.entity.SubscriptionPlan` from String "BASIaC": not one of the values accepted for Enum class: [ENTERPRISE, BASIC, PREMIUM]]
2025-09-22 14:36:05 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Retrograde clock change detected (housekeeper delta=29s791ms), soft-evicting connections from pool.
2025-09-22 14:51:35 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Retrograde clock change detected (housekeeper delta=29s742ms), soft-evicting connections from pool.
2025-09-22 14:56:26 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /patients
2025-09-22 14:56:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 14:56:26 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /patients
2025-09-22 14:56:26 [http-nio-8080-exec-4] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.nakqeeb.amancare.entity.Gender` from String "MALEe": not one of the values accepted for Enum class: [FEMALE, MALE]]
2025-09-22 15:01:31 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 15:01:31 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 15:01:31 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 15:01:31 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 15:01:31 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 15:01:33 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 64386 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 15:01:33 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 15:01:33 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 15:01:33 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 15:01:34 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 15:01:34 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 41 ms. Found 15 JPA repository interfaces.
2025-09-22 15:01:34 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 15:01:34 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 15:01:34 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 15:01:34 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 15:01:34 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1457 ms
2025-09-22 15:01:35 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 15:01:35 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 15:01:35 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 15:01:35 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 15:01:35 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 15:01:35 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@52e5f881
2025-09-22 15:01:35 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 15:01:35 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 15:01:35 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 15:01:35 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 15:01:36 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 15:01:36 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 15:01:36 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 15:01:36 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 15:01:37 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 15:01:37 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 15:01:37 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 15:01:37 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 15:01:37 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 15:01:38 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 15:01:38 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 15:01:38 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 15:01:38 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 15:01:38 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 15:01:38 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.397 seconds (process running for 5.672)
2025-09-22 15:01:38 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 15:01:38 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 15:01:38 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 15:01:38 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 15:02:07 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 15:02:07 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 15:02:07 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2025-09-22 15:02:07 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /clinics/12/subscription
2025-09-22 15:02:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 15:02:08 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /clinics/12/subscription
2025-09-22 15:02:08 [http-nio-8080-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: قيمة خطة الاشتراك غير صحيحة: 'BASIaC'. القيم المسموحة هي: BASIC, PREMIUM, ENTERPRISE]
2025-09-22 15:03:00 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /clinics/12/subscription
2025-09-22 15:03:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 15:03:01 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /clinics/12/subscription
2025-09-22 15:03:01 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.updateSubscription(java.lang.Long,com.nakqeeb.amancare.dto.request.UpdateSubscriptionRequest,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:03:01 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.updateSubscription(java.lang.Long,com.nakqeeb.amancare.dto.request.UpdateSubscriptionRequest,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:03:01 [http-nio-8080-exec-2] INFO  c.n.a.controller.ClinicController - Updating subscription for clinic 12 by SYSTEM_ADMIN: 2
2025-09-22 15:03:01 [http-nio-8080-exec-2] INFO  c.n.amancare.service.ClinicService - Updating subscription for clinic: 12 by user: 2
2025-09-22 15:03:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 15:03:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-22 15:03:01 [http-nio-8080-exec-2] INFO  c.n.amancare.service.AuditLogService - Audit Log: User 2 performed UPDATE on CLINIC #12 in clinic 12
2025-09-22 15:03:01 [http-nio-8080-exec-2] INFO  c.n.amancare.service.ClinicService - Successfully updated subscription for clinic: 12
2025-09-22 15:03:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* update
        for com.nakqeeb.amancare.entity.Clinic */update clinics 
    set
        address=?,
        description=?,
        email=?,
        is_active=?,
        name=?,
        phone=?,
        subscription_end_date=?,
        subscription_plan=?,
        subscription_start_date=?,
        updated_at=?,
        working_days=?,
        working_hours_end=?,
        working_hours_start=? 
    where
        id=?
2025-09-22 15:03:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /clinics/12/deactivate?reason=not%20paying
2025-09-22 15:03:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 15:03:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /clinics/12/deactivate?reason=not%20paying
2025-09-22 15:03:27 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.deactivateClinic(java.lang.Long,java.lang.String,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:03:27 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.deactivateClinic(java.lang.Long,java.lang.String,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:03:27 [http-nio-8080-exec-4] INFO  c.n.a.controller.ClinicController - Deactivating clinic 12 by SYSTEM_ADMIN: 2 - Reason: not paying
2025-09-22 15:03:27 [http-nio-8080-exec-4] INFO  c.n.amancare.service.ClinicService - Deactivating clinic: 12 by user: 2 - Reason: not paying
2025-09-22 15:03:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 15:03:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-22 15:03:27 [http-nio-8080-exec-4] INFO  c.n.amancare.service.AuditLogService - Audit Log: User 2 performed DEACTIVATE on CLINIC #12 in clinic 12
2025-09-22 15:03:27 [http-nio-8080-exec-4] INFO  c.n.amancare.service.ClinicService - Successfully deactivated clinic: 12
2025-09-22 15:03:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* update
        for com.nakqeeb.amancare.entity.Clinic */update clinics 
    set
        address=?,
        description=?,
        email=?,
        is_active=?,
        name=?,
        phone=?,
        subscription_end_date=?,
        subscription_plan=?,
        subscription_start_date=?,
        updated_at=?,
        working_days=?,
        working_hours_end=?,
        working_hours_start=? 
    where
        id=?
2025-09-22 15:04:44 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /clinics/12/activate
2025-09-22 15:04:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 15:04:44 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /clinics/12/activate
2025-09-22 15:04:44 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.activateClinic(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:04:44 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.activateClinic(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:04:44 [http-nio-8080-exec-6] INFO  c.n.a.controller.ClinicController - Activating clinic 12 by SYSTEM_ADMIN: 2
2025-09-22 15:04:44 [http-nio-8080-exec-6] INFO  c.n.amancare.service.ClinicService - Activating clinic: 12 by user: 2
2025-09-22 15:04:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 15:04:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-22 15:04:44 [http-nio-8080-exec-6] INFO  c.n.amancare.service.AuditLogService - Audit Log: User 2 performed ACTIVATE on CLINIC #12 in clinic 12
2025-09-22 15:04:44 [http-nio-8080-exec-6] INFO  c.n.amancare.service.ClinicService - Successfully activated clinic: 12
2025-09-22 15:04:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* update
        for com.nakqeeb.amancare.entity.Clinic */update clinics 
    set
        address=?,
        description=?,
        email=?,
        is_active=?,
        name=?,
        phone=?,
        subscription_end_date=?,
        subscription_plan=?,
        subscription_start_date=?,
        updated_at=?,
        working_days=?,
        working_hours_end=?,
        working_hours_start=? 
    where
        id=?
2025-09-22 15:04:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /clinics/expiring-subscriptions?daysAhead=30
2025-09-22 15:04:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 15:04:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /clinics/expiring-subscriptions?daysAhead=30
2025-09-22 15:04:55 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getExpiringSoonClinics(int,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:04:55 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getExpiringSoonClinics(int,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:04:55 [http-nio-8080-exec-8] INFO  c.n.a.controller.ClinicController - Fetching clinics with expiring subscriptions within 30 days
2025-09-22 15:04:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Clinic c 
    WHERE
        c.subscriptionEndDate BETWEEN :startDate AND :endDate */ select
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start 
        from
            clinics c1_0 
        where
            c1_0.subscription_end_date between ? and ?
2025-09-22 15:05:17 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /clinics/12/statistics
2025-09-22 15:05:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 15:05:17 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /clinics/12/statistics
2025-09-22 15:05:17 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:05:17 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:05:17 [http-nio-8080-exec-10] INFO  c.n.a.controller.ClinicController - Fetching statistics for clinic 12 by user: 2
2025-09-22 15:05:17 [http-nio-8080-exec-10] INFO  c.n.amancare.service.ClinicService - Fetching statistics for clinic: 12 by user: 2
2025-09-22 15:05:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 15:05:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(u1_0.id) 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-09-22 15:05:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-22 15:05:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-22 15:05:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(a1_0.id) 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=?
2025-09-22 15:05:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(a) 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND DATE(a.appointmentDate) = :date 
        AND a.status NOT IN ('CANCELLED', 'NO_SHOW') */ select
            count(a1_0.id) 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and date(a1_0.appointment_date)=? 
            and a1_0.status not in ('CANCELLED', 'NO_SHOW')
2025-09-22 15:05:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-09-22 15:05:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=? 
            and i1_0.status='PAID'
2025-09-22 15:05:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('SENT', 'PARTIALLY_PAID', 'OVERDUE') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('SENT', 'PARTIALLY_PAID', 'OVERDUE')
2025-09-22 15:05:23 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /clinics/9/statistics
2025-09-22 15:05:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 15:05:23 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /clinics/9/statistics
2025-09-22 15:05:23 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:05:23 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:05:23 [http-nio-8080-exec-2] INFO  c.n.a.controller.ClinicController - Fetching statistics for clinic 9 by user: 2
2025-09-22 15:05:23 [http-nio-8080-exec-2] INFO  c.n.amancare.service.ClinicService - Fetching statistics for clinic: 9 by user: 2
2025-09-22 15:05:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 15:05:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(u1_0.id) 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-09-22 15:05:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-22 15:05:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-22 15:05:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(a1_0.id) 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=?
2025-09-22 15:05:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(a) 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND DATE(a.appointmentDate) = :date 
        AND a.status NOT IN ('CANCELLED', 'NO_SHOW') */ select
            count(a1_0.id) 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and date(a1_0.appointment_date)=? 
            and a1_0.status not in ('CANCELLED', 'NO_SHOW')
2025-09-22 15:05:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-09-22 15:05:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=? 
            and i1_0.status='PAID'
2025-09-22 15:05:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('SENT', 'PARTIALLY_PAID', 'OVERDUE') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('SENT', 'PARTIALLY_PAID', 'OVERDUE')
2025-09-22 15:05:43 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /clinics?search=%D8%A7%D9%84%D8%A3%D9%85%D9%84&page=0&size=10&sortBy=name&sortDirection=ASC
2025-09-22 15:05:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 15:05:44 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /clinics?search=%D8%A7%D9%84%D8%A3%D9%85%D9%84&page=0&size=10&sortBy=name&sortDirection=ASC
2025-09-22 15:05:44 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getAllClinics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.String,java.lang.Boolean,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:05:44 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getAllClinics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.String,java.lang.Boolean,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:05:44 [http-nio-8080-exec-4] INFO  c.n.amancare.service.ClinicService - Fetching all clinics - User: 2, Role: SYSTEM_ADMIN
2025-09-22 15:05:44 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Clinic c 
    WHERE
        LOWER(c.name) LIKE LOWER(CONCAT('%', :name, '%')) 
    order by
        c.name asc */ select
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start 
        from
            clinics c1_0 
        where
            lower(c1_0.name) like lower(concat('%', ?, '%')) escape '' 
        order by
            c1_0.name 
        limit
            ?
2025-09-22 15:05:44 [http-nio-8080-exec-4] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-09-22 15:06:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /clinics/12
2025-09-22 15:06:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 15:06:03 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /clinics/12
2025-09-22 15:06:03 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:06:03 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:06:03 [http-nio-8080-exec-6] INFO  c.n.a.controller.ClinicController - Fetching clinic 12 by user: 2
2025-09-22 15:06:03 [http-nio-8080-exec-6] INFO  c.n.amancare.service.ClinicService - Fetching clinic with ID: 12 by user: 2
2025-09-22 15:06:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 15:18:58 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 15:18:58 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 15:18:58 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 15:18:58 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 15:18:58 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 15:19:00 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 68626 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 15:19:00 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 15:19:01 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 15:19:01 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 15:19:01 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 15:19:01 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 15 JPA repository interfaces.
2025-09-22 15:19:01 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 15:19:01 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 15:19:01 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 15:19:01 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 15:19:01 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 988 ms
2025-09-22 15:19:02 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 15:19:02 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 15:19:02 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 15:19:02 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 15:19:02 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 15:19:02 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5b1c233d
2025-09-22 15:19:02 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 15:19:02 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 15:19:02 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 15:19:03 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 15:19:03 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 15:19:03 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 15:19:03 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 15:19:03 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 15:19:04 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 15:19:04 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 15:19:04 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 15:19:05 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 15:19:05 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 15:19:05 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 15:19:05 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 15:19:06 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 15:19:06 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 15:19:06 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 15:19:06 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.718 seconds (process running for 5.964)
2025-09-22 15:19:06 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 15:19:06 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 15:19:06 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 15:19:06 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 15:19:39 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 15:19:39 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 15:19:39 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 15:19:39 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 15:19:39 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 15:19:41 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 68812 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 15:19:41 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 15:19:41 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 15:19:41 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 15:19:42 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 15:19:42 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 15 JPA repository interfaces.
2025-09-22 15:19:42 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 15:19:42 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 15:19:42 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 15:19:42 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 15:19:42 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 964 ms
2025-09-22 15:19:42 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 15:19:42 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 15:19:42 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 15:19:43 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 15:19:43 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 15:19:43 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@647c9c02
2025-09-22 15:19:43 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 15:19:43 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 15:19:43 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 15:19:43 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 15:19:43 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 15:19:43 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 15:19:44 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 15:19:44 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 15:19:45 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 15:19:45 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 15:19:45 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 15:19:45 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 15:19:45 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 15:19:46 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 15:19:46 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 15:19:46 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 15:19:46 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 15:19:46 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 15:19:46 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.172 seconds (process running for 5.419)
2025-09-22 15:19:46 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 15:19:46 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 15:19:46 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 15:19:46 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 15:19:49 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 15:19:49 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 15:19:49 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2025-09-22 15:19:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /clinics/12
2025-09-22 15:19:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 15:19:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /clinics/12
2025-09-22 15:19:50 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:19:50 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:19:50 [http-nio-8080-exec-1] INFO  c.n.a.controller.ClinicController - SYSTEM_ADMIN reading a patient from clinic: ALL
2025-09-22 15:19:50 [http-nio-8080-exec-1] INFO  c.n.a.controller.ClinicController - Fetching clinic null by user: 2
2025-09-22 15:19:53 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /clinics/12
2025-09-22 15:19:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 15:19:53 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /clinics/12
2025-09-22 15:19:53 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:19:53 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:19:53 [http-nio-8080-exec-2] INFO  c.n.a.controller.ClinicController - SYSTEM_ADMIN reading a patient from clinic: ALL
2025-09-22 15:19:53 [http-nio-8080-exec-2] INFO  c.n.a.controller.ClinicController - Fetching clinic null by user: 2
2025-09-22 15:20:09 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-09-22 15:20:09 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 15:20:09 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 15:20:09 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-09-22 15:20:09 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-09-22 15:20:09 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-09-22 15:20:09 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 15:20:09 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-22 15:20:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-09-22 15:20:09 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 15:20:09 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-09-22 15:20:09 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 15:20:09 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-22 15:20:09 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 15:20:09 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 15:20:09 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 15:20:09 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 15:20:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-09-22 15:20:09 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-09-22 15:20:09 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 15:20:09 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-09-22 15:20:09 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 15:20:09 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 15:20:09 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-09-22 15:20:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs/swagger-config
2025-09-22 15:20:09 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 15:20:09 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-22 15:20:09 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 15:20:09 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 15:20:09 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 15:20:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs/swagger-config
2025-09-22 15:20:09 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-22 15:20:09 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs
2025-09-22 15:20:09 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 15:20:09 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 15:20:09 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs
2025-09-22 15:20:10 [http-nio-8080-exec-2] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 876 ms
2025-09-22 15:20:20 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /clinics/{id}
2025-09-22 15:20:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 15:20:21 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /clinics/{id}
2025-09-22 15:20:21 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:20:21 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:20:21 [http-nio-8080-exec-8] INFO  c.n.a.controller.ClinicController - SYSTEM_ADMIN reading a patient from clinic: ALL
2025-09-22 15:20:21 [http-nio-8080-exec-8] INFO  c.n.a.controller.ClinicController - Fetching clinic null by user: 2
2025-09-22 15:20:29 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /clinics/{id}?clinicId=12
2025-09-22 15:20:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 15:20:29 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /clinics/{id}?clinicId=12
2025-09-22 15:20:29 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:20:29 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:20:29 [http-nio-8080-exec-1] INFO  c.n.a.controller.ClinicController - SYSTEM_ADMIN reading a patient from clinic: 12
2025-09-22 15:20:29 [http-nio-8080-exec-1] INFO  c.n.a.controller.ClinicController - Fetching clinic 12 by user: 2
2025-09-22 15:20:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 15:32:34 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=11m50s969ms).
2025-09-22 15:39:37 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=6m33s421ms).
2025-09-22 15:40:53 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 15:40:53 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 15:40:53 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 15:40:53 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 15:40:53 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 15:40:56 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 69949 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 15:40:56 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 15:40:56 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 15:40:56 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 15:40:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 15:40:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 15 JPA repository interfaces.
2025-09-22 15:40:57 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 15:40:57 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 15:40:57 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 15:40:57 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 15:40:57 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1105 ms
2025-09-22 15:40:57 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 15:40:57 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 15:40:57 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 15:40:57 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 15:40:57 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 15:40:57 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2a6211ed
2025-09-22 15:40:57 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 15:40:57 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 15:40:57 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 15:40:58 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 15:40:58 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 15:40:58 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 15:40:58 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 15:40:59 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 15:40:59 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 15:40:59 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 15:40:59 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 15:41:00 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 15:41:00 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 15:41:00 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 15:41:00 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 15:41:01 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 15:41:01 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 15:41:01 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 15:41:01 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.281 seconds (process running for 5.566)
2025-09-22 15:41:01 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 15:41:01 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 15:41:01 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 15:41:01 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 15:42:25 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 15:42:25 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 15:42:25 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2025-09-22 15:42:25 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-09-22 15:42:25 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 15:42:25 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 15:42:25 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-09-22 15:42:25 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-09-22 15:42:25 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 15:42:25 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 15:42:25 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-09-22 15:42:25 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-22 15:42:25 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 15:42:25 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 15:42:25 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-22 15:42:25 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-09-22 15:42:25 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-09-22 15:42:25 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 15:42:25 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 15:42:25 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-09-22 15:42:25 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-09-22 15:42:25 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 15:42:25 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 15:42:25 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-09-22 15:42:25 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 15:42:25 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 15:42:25 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-09-22 15:42:25 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-22 15:42:25 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs/swagger-config
2025-09-22 15:42:25 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 15:42:25 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 15:42:25 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 15:42:25 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 15:42:25 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-22 15:42:25 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs/swagger-config
2025-09-22 15:42:25 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs
2025-09-22 15:42:25 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 15:42:25 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 15:42:25 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs
2025-09-22 15:42:26 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 850 ms
2025-09-22 15:42:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-09-22 15:42:50 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 15:42:50 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 15:42:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-09-22 15:42:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.username = :usernameOrEmail 
        OR u.email = :usernameOrEmail */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.username=? 
            or u1_0.email=?
2025-09-22 15:42:51 [http-nio-8080-exec-4] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-22 15:43:29 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /clinics/3
2025-09-22 15:43:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 15:43:29 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /clinics/3
2025-09-22 15:43:29 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:43:29 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:43:29 [http-nio-8080-exec-8] INFO  c.n.a.controller.ClinicController - Fetching clinic 3 by user: 14
2025-09-22 15:43:29 [http-nio-8080-exec-8] INFO  c.n.amancare.service.ClinicService - Fetching clinic with ID: 3 by user: 14
2025-09-22 15:43:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 15:43:29 [http-nio-8080-exec-8] ERROR c.n.a.controller.ClinicController - Error fetching clinic 3: 
com.nakqeeb.amancare.exception.ForbiddenOperationException: You don't have permission to view this clinic
	at com.nakqeeb.amancare.service.ClinicService.getClinicById(ClinicService.java:172)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.service.ClinicService$$SpringCGLIB$$0.getClinicById(<generated>)
	at com.nakqeeb.amancare.controller.ClinicController.getClinicById(ClinicController.java:196)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.ClinicController$$SpringCGLIB$$0.getClinicById(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-09-22 15:44:13 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /clinics/2
2025-09-22 15:44:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 15:44:13 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /clinics/2
2025-09-22 15:44:13 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:44:13 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:44:13 [http-nio-8080-exec-9] INFO  c.n.a.controller.ClinicController - Fetching clinic 2 by user: 14
2025-09-22 15:44:13 [http-nio-8080-exec-9] INFO  c.n.amancare.service.ClinicService - Fetching clinic with ID: 2 by user: 14
2025-09-22 15:44:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 15:44:13 [http-nio-8080-exec-9] ERROR c.n.a.controller.ClinicController - Error fetching clinic 2: 
com.nakqeeb.amancare.exception.ForbiddenOperationException: You don't have permission to view this clinic
	at com.nakqeeb.amancare.service.ClinicService.getClinicById(ClinicService.java:172)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.service.ClinicService$$SpringCGLIB$$0.getClinicById(<generated>)
	at com.nakqeeb.amancare.controller.ClinicController.getClinicById(ClinicController.java:196)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.ClinicController$$SpringCGLIB$$0.getClinicById(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-09-22 15:44:21 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /clinics/9
2025-09-22 15:44:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 15:44:21 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /clinics/9
2025-09-22 15:44:21 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:44:21 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ClinicController.getClinicById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.ClinicController]
2025-09-22 15:44:21 [http-nio-8080-exec-3] INFO  c.n.a.controller.ClinicController - Fetching clinic 9 by user: 14
2025-09-22 15:44:21 [http-nio-8080-exec-3] INFO  c.n.amancare.service.ClinicService - Fetching clinic with ID: 9 by user: 14
2025-09-22 15:44:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 16:11:07 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-09-22 16:11:07 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 16:11:07 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 16:11:07 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-09-22 16:11:08 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-09-22 16:11:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 16:11:08 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 16:11:08 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-09-22 16:11:08 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-09-22 16:11:08 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-09-22 16:11:08 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 16:11:08 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-22 16:11:08 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 16:11:08 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-09-22 16:11:08 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 16:11:08 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 16:11:08 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-22 16:11:08 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 16:11:08 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-09-22 16:11:08 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 16:11:08 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 16:11:08 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-09-22 16:11:08 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 16:11:08 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-09-22 16:11:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs/swagger-config
2025-09-22 16:11:08 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 16:11:08 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 16:11:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs/swagger-config
2025-09-22 16:11:08 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-22 16:11:08 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 16:11:08 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 16:11:08 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-22 16:11:08 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs
2025-09-22 16:11:08 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 16:11:08 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 16:11:08 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs
2025-09-22 16:12:57 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Retrograde clock change detected (housekeeper delta=29s427ms), soft-evicting connections from pool.
2025-09-22 16:28:57 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Retrograde clock change detected (housekeeper delta=29s581ms), soft-evicting connections from pool.
2025-09-22 16:41:00 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 16:41:00 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 16:41:00 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 16:41:00 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 16:44:57 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Retrograde clock change detected (housekeeper delta=29s749ms), soft-evicting connections from pool.
2025-09-22 17:00:42 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 17:00:42 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 17:00:42 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 17:00:42 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 17:00:42 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 17:00:46 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 89612 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 17:00:46 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 17:00:46 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 17:00:46 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 17:00:46 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 17:00:46 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 15 JPA repository interfaces.
2025-09-22 17:00:47 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 17:00:47 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 17:00:47 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 17:00:47 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 17:00:47 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1086 ms
2025-09-22 17:00:47 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 17:00:47 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 17:00:47 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 17:00:47 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 17:00:47 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 17:00:47 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@687dd2cc
2025-09-22 17:00:47 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 17:00:47 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 17:00:47 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 17:00:48 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    create table medical_record_allergies (
        medical_record_id bigint not null,
        allergy varchar(255)
    ) engine=InnoDB
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    create table medical_record_diagnoses (
        id bigint not null auto_increment,
        created_at datetime(6) not null,
        description varchar(500) not null,
        icd_code varchar(20),
        is_primary bit not null,
        notes varchar(500),
        type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null,
        medical_record_id bigint not null,
        primary key (id)
    ) engine=InnoDB
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    create table medical_record_lab_tests (
        id bigint not null auto_increment,
        category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null,
        created_at datetime(6) not null,
        instructions varchar(500),
        interpretation TEXT,
        normal_range varchar(200),
        ordered_date date not null,
        performed_by varchar(100),
        result_date date,
        results TEXT,
        specimen_type varchar(100),
        status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null,
        test_code varchar(50),
        test_name varchar(200) not null,
        updated_at datetime(6),
        urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null,
        medical_record_id bigint not null,
        primary key (id)
    ) engine=InnoDB
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    create table medical_record_medications (
        medical_record_id bigint not null,
        medication varchar(255)
    ) engine=InnoDB
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    create table medical_record_prescriptions (
        id bigint not null auto_increment,
        created_at datetime(6) not null,
        dosage varchar(100) not null,
        duration varchar(100) not null,
        end_date date,
        frequency varchar(100) not null,
        generic_name varchar(200),
        instructions varchar(500),
        is_prn bit not null,
        medication_name varchar(200) not null,
        quantity integer check (quantity>=1),
        refills integer check ((refills<=12) and (refills>=0)),
        route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null,
        start_date date,
        medical_record_id bigint not null,
        primary key (id)
    ) engine=InnoDB
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    create table medical_record_procedures (
        id bigint not null auto_increment,
        category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null,
        complications TEXT,
        created_at datetime(6) not null,
        description TEXT,
        notes TEXT,
        outcome TEXT,
        performed_by varchar(100),
        performed_date date not null,
        procedure_code varchar(50),
        procedure_name varchar(200) not null,
        medical_record_id bigint not null,
        primary key (id)
    ) engine=InnoDB
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    create table medical_record_radiology_tests (
        id bigint not null auto_increment,
        body_part varchar(100),
        created_at datetime(6) not null,
        findings TEXT,
        impression TEXT,
        instructions varchar(500),
        ordered_date date not null,
        performed_date date,
        radiologist_name varchar(100),
        status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null,
        test_name varchar(200) not null,
        test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null,
        updated_at datetime(6),
        urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null,
        medical_record_id bigint not null,
        primary key (id)
    ) engine=InnoDB
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    create table medical_record_referrals (
        id bigint not null auto_increment,
        appointment_date date,
        created_at datetime(6) not null,
        is_completed bit not null,
        notes TEXT,
        priority enum ('EMERGENCY','ROUTINE','URGENT') not null,
        reason TEXT not null,
        referral_date date not null,
        referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null,
        referred_to varchar(200) not null,
        specialty varchar(100),
        updated_at datetime(6),
        medical_record_id bigint not null,
        primary key (id)
    ) engine=InnoDB
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column created_by varchar(100)
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column family_history TEXT
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column follow_up_date date
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column is_confidential bit not null
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column notes TEXT
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column past_medical_history TEXT
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column physical_examination TEXT not null
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column present_illness TEXT
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column social_history TEXT
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column systemic_examination TEXT
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column updated_by varchar(100)
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column blood_pressure_diastolic integer
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column blood_pressure_systolic integer
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column blood_sugar decimal(38,2)
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column bmi decimal(38,2)
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column heart_rate integer
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column height decimal(38,2)
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column oxygen_saturation integer
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column pain_scale integer
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column respiratory_rate integer
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column temperature decimal(38,2)
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       add column weight decimal(38,2)
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_allergies 
       add constraint FKpt6ule35rji8jgu7n74wbpo7j 
       foreign key (medical_record_id) 
       references medical_records (id)
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       add constraint FKq2qyk5akvoag10lpp6n6xj1pf 
       foreign key (medical_record_id) 
       references medical_records (id)
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       add constraint FK7vyt4bwh4vmnbkpnf0x53w47r 
       foreign key (medical_record_id) 
       references medical_records (id)
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_medications 
       add constraint FKnv8vpn77eu35ujqhywksm6ull 
       foreign key (medical_record_id) 
       references medical_records (id)
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       add constraint FK3wksjoml5mf7ej19aolg9qpj3 
       foreign key (medical_record_id) 
       references medical_records (id)
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       add constraint FKa4gfqjf5f6ufetda3370ammd1 
       foreign key (medical_record_id) 
       references medical_records (id)
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       add constraint FKb0k6sdsa159ranjbiremgoeii 
       foreign key (medical_record_id) 
       references medical_records (id)
2025-09-22 17:00:48 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       add constraint FKt42i4y8cejnc0h2vkqcw2rrcj 
       foreign key (medical_record_id) 
       references medical_records (id)
2025-09-22 17:00:48 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 17:00:48 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 17:00:49 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 17:00:49 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 17:00:49 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 17:00:50 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 17:00:50 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 17:00:50 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'patientController': Unsatisfied dependency expressed through field 'patientService': Error creating bean with name 'patientService': Unsatisfied dependency expressed through field 'medicalRecordRepository': Error creating bean with name 'medicalRecordRepository' defined in com.nakqeeb.amancare.repository.MedicalRecordRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.nakqeeb.amancare.repository.MedicalRecordRepository.findRecordsNeedingFollowUp(com.nakqeeb.amancare.entity.Clinic,java.time.LocalDate); Reason: Validation failed for query for method public abstract java.util.List com.nakqeeb.amancare.repository.MedicalRecordRepository.findRecordsNeedingFollowUp(com.nakqeeb.amancare.entity.Clinic,java.time.LocalDate)
2025-09-22 17:00:50 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 17:00:50 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 17:00:50 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 17:00:50 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-09-22 17:00:50 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-09-22 17:00:50 [restartedMain] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'patientController': Unsatisfied dependency expressed through field 'patientService': Error creating bean with name 'patientService': Unsatisfied dependency expressed through field 'medicalRecordRepository': Error creating bean with name 'medicalRecordRepository' defined in com.nakqeeb.amancare.repository.MedicalRecordRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.nakqeeb.amancare.repository.MedicalRecordRepository.findRecordsNeedingFollowUp(com.nakqeeb.amancare.entity.Clinic,java.time.LocalDate); Reason: Validation failed for query for method public abstract java.util.List com.nakqeeb.amancare.repository.MedicalRecordRepository.findRecordsNeedingFollowUp(com.nakqeeb.amancare.entity.Clinic,java.time.LocalDate)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.nakqeeb.amancare.AmancareApplication.main(AmancareApplication.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'patientService': Unsatisfied dependency expressed through field 'medicalRecordRepository': Error creating bean with name 'medicalRecordRepository' defined in com.nakqeeb.amancare.repository.MedicalRecordRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.nakqeeb.amancare.repository.MedicalRecordRepository.findRecordsNeedingFollowUp(com.nakqeeb.amancare.entity.Clinic,java.time.LocalDate); Reason: Validation failed for query for method public abstract java.util.List com.nakqeeb.amancare.repository.MedicalRecordRepository.findRecordsNeedingFollowUp(com.nakqeeb.amancare.entity.Clinic,java.time.LocalDate)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1690)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1635)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'medicalRecordRepository' defined in com.nakqeeb.amancare.repository.MedicalRecordRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.nakqeeb.amancare.repository.MedicalRecordRepository.findRecordsNeedingFollowUp(com.nakqeeb.amancare.entity.Clinic,java.time.LocalDate); Reason: Validation failed for query for method public abstract java.util.List com.nakqeeb.amancare.repository.MedicalRecordRepository.findRecordsNeedingFollowUp(com.nakqeeb.amancare.entity.Clinic,java.time.LocalDate)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1690)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1635)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 38 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.nakqeeb.amancare.repository.MedicalRecordRepository.findRecordsNeedingFollowUp(com.nakqeeb.amancare.entity.Clinic,java.time.LocalDate); Reason: Validation failed for query for method public abstract java.util.List com.nakqeeb.amancare.repository.MedicalRecordRepository.findRecordsNeedingFollowUp(com.nakqeeb.amancare.entity.Clinic,java.time.LocalDate)
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:120)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 47 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List com.nakqeeb.amancare.repository.MedicalRecordRepository.findRecordsNeedingFollowUp(com.nakqeeb.amancare.entity.Clinic,java.time.LocalDate)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:97)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:67)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:49)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:174)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	... 59 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'nextVisitDate' of 'com.nakqeeb.amancare.entity.MedicalRecord' [SELECT m FROM MedicalRecord m WHERE m.clinic = :clinic AND m.nextVisitDate IS NOT NULL AND m.nextVisitDate <= :date]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:886)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:796)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy4/jdk.proxy4.$Proxy190.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:91)
	... 65 common frames omitted
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'nextVisitDate' of 'com.nakqeeb.amancare.entity.MedicalRecord' [SELECT m FROM MedicalRecord m WHERE m.clinic = :clinic AND m.nextVisitDate IS NOT NULL AND m.nextVisitDate <= :date]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:88)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:145)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:132)
	at org.hibernate.query.spi.QueryEngine.interpretHql(QueryEngine.java:54)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:832)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:878)
	... 72 common frames omitted
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'nextVisitDate' of 'com.nakqeeb.amancare.entity.MedicalRecord'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmPath.get(AbstractSqmPath.java:199)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmFrom.resolvePathPart(AbstractSqmFrom.java:198)
	at org.hibernate.query.hql.internal.DomainPathPart.resolvePathPart(DomainPathPart.java:42)
	at org.hibernate.query.hql.internal.BasicDotIdentifierConsumer.consumeIdentifier(BasicDotIdentifierConsumer.java:92)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5465)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:5298)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathExpression(SemanticQueryBuilder.java:1891)
	at org.hibernate.grammars.hql.HqlParser$GeneralPathExpressionContext.accept(HqlParser.java:8268)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at org.hibernate.grammars.hql.HqlParserBaseVisitor.visitBarePrimaryExpression(HqlParserBaseVisitor.java:812)
	at org.hibernate.grammars.hql.HqlParser$BarePrimaryExpressionContext.accept(HqlParser.java:7726)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitIsNullPredicate(SemanticQueryBuilder.java:2442)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitIsNullPredicate(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$IsNullPredicateContext.accept(HqlParser.java:6774)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:2379)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$AndPredicateContext.accept(HqlParser.java:6461)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:2378)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$AndPredicateContext.accept(HqlParser.java:6461)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:2361)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$WhereClauseContext.accept(HqlParser.java:6302)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1259)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:1040)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:2134)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:1025)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:2005)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:492)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:451)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:324)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71)
	... 77 common frames omitted
2025-09-22 17:02:37 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 90116 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 17:02:37 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 17:02:37 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 17:02:37 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 17:02:38 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 17:02:38 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 41 ms. Found 15 JPA repository interfaces.
2025-09-22 17:02:38 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 17:02:38 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 17:02:38 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 17:02:38 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 17:02:38 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1075 ms
2025-09-22 17:02:38 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 17:02:38 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 17:02:38 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 17:02:38 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 17:02:39 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 17:02:39 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6c588c46
2025-09-22 17:02:39 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 17:02:39 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 17:02:39 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 17:02:39 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 17:02:40 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 17:02:40 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 17:02:40 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 17:02:40 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 17:02:40 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 17:02:40 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 17:02:40 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 17:02:40 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 17:02:40 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 17:02:40 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 17:02:40 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 17:02:40 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 17:02:40 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 17:02:40 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 17:02:40 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 17:02:40 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 17:02:40 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 17:02:41 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 17:02:41 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 17:02:41 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 17:02:42 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 17:02:42 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 17:02:43 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 17:02:43 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 17:02:43 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 17:02:43 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 17:02:43 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 17:02:43 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 6.655 seconds (process running for 6.981)
2025-09-22 17:02:43 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 17:02:43 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 17:02:43 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 17:02:43 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 17:10:03 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 17:10:03 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 17:10:03 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 17:10:03 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 17:10:03 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 17:10:06 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 92111 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 17:10:06 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 17:10:06 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 17:10:06 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 17:10:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 17:10:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 40 ms. Found 15 JPA repository interfaces.
2025-09-22 17:10:07 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 17:10:07 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 17:10:07 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 17:10:07 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 17:10:07 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 966 ms
2025-09-22 17:10:07 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 17:10:07 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 17:10:07 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 17:10:07 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 17:10:07 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 17:10:07 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1ea52de8
2025-09-22 17:10:07 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 17:10:07 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 17:10:07 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 17:10:08 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 17:10:08 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 17:10:08 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 17:10:08 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 17:10:08 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 17:10:08 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 17:10:08 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 17:10:08 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 17:10:08 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 17:10:08 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 17:10:08 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 17:10:08 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 17:10:08 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 17:10:08 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 17:10:08 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 17:10:08 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 17:10:08 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 17:10:08 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 17:10:09 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 17:10:09 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 17:10:09 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 17:10:10 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 17:10:10 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 17:10:10 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 17:10:10 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 17:10:11 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 17:10:11 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 17:10:11 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 17:10:11 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.133 seconds (process running for 5.387)
2025-09-22 17:10:11 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 17:10:11 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 17:10:11 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 17:10:11 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 18:05:26 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=50m18s107ms).
2025-09-22 18:45:18 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 18:45:18 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 18:45:18 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 18:45:18 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 18:45:18 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 18:45:22 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 3702 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 18:45:22 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 18:45:22 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 18:45:22 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 18:45:22 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 18:45:22 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 41 ms. Found 15 JPA repository interfaces.
2025-09-22 18:45:23 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 18:45:23 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 18:45:23 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 18:45:23 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 18:45:23 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1055 ms
2025-09-22 18:45:23 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 18:45:23 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 18:45:23 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 18:45:23 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 18:45:23 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 18:45:23 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@28b19409
2025-09-22 18:45:23 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 18:45:23 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 18:45:23 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 18:45:24 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 18:45:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 18:45:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 18:45:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 18:45:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 18:45:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 18:45:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 18:45:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 18:45:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 18:45:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 18:45:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 18:45:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 18:45:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 18:45:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 18:45:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 18:45:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 18:45:24 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 18:45:24 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 18:45:25 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 18:45:25 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 18:45:25 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 18:45:26 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 18:45:26 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 18:45:26 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 18:45:26 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 18:45:27 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 18:45:27 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 18:45:27 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 18:45:27 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.473 seconds (process running for 5.735)
2025-09-22 18:45:27 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 18:45:27 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 18:45:27 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 18:45:27 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 19:38:55 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=17m31s154ms).
2025-09-22 20:02:28 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 20:02:28 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 20:02:28 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 20:02:28 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 20:07:14 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 20:07:14 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 20:07:14 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 20:07:14 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 20:07:14 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 20:07:17 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 19747 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 20:07:17 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 20:07:17 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 20:07:17 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 20:07:17 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 20:07:17 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 40 ms. Found 15 JPA repository interfaces.
2025-09-22 20:07:18 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 20:07:18 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 20:07:18 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 20:07:18 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 20:07:18 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1047 ms
2025-09-22 20:07:18 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 20:07:18 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 20:07:18 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 20:07:18 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 20:07:18 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 20:07:18 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2dc02f50
2025-09-22 20:07:18 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 20:07:18 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 20:07:18 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 20:07:19 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 20:07:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 20:07:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 20:07:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 20:07:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 20:07:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 20:07:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 20:07:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 20:07:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 20:07:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 20:07:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 20:07:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 20:07:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 20:07:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 20:07:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 20:07:19 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 20:07:19 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 20:07:19 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 20:07:20 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 20:07:20 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 20:07:20 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 20:07:21 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 20:07:21 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 20:07:21 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 20:07:21 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 20:07:22 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 20:07:22 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 20:07:22 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 20:07:22 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.355 seconds (process running for 5.643)
2025-09-22 20:07:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 20:07:22 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 20:07:22 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 20:07:22 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 20:16:24 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 20:16:24 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 20:16:24 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 20:16:24 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 20:16:24 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 20:22:50 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 23520 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 20:22:50 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 20:22:50 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 20:22:50 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 20:22:50 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 20:22:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 72 ms. Found 15 JPA repository interfaces.
2025-09-22 20:22:51 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 20:22:51 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 20:22:51 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 20:22:51 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 20:22:51 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1496 ms
2025-09-22 20:22:51 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 20:22:51 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 20:22:51 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 20:22:51 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 20:22:51 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 20:22:52 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@59988c36
2025-09-22 20:22:52 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 20:22:52 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 20:22:52 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 20:22:53 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 20:22:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 20:22:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 20:22:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 20:22:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 20:22:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 20:22:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 20:22:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 20:22:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 20:22:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 20:22:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 20:22:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 20:22:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 20:22:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 20:22:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 20:22:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 20:22:53 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 20:22:53 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 20:22:54 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 20:22:54 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 20:22:54 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 20:22:55 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 20:22:55 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 20:22:56 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 20:22:56 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 20:22:56 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 20:22:56 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 20:22:56 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 20:22:56 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 6.857 seconds (process running for 7.121)
2025-09-22 20:22:56 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 20:22:56 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 20:22:56 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 20:22:56 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 20:24:16 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 20:24:16 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 20:24:16 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 20:24:16 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 20:24:16 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 20:24:18 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 23928 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 20:24:18 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 20:24:18 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 20:24:18 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 20:24:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 20:24:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 15 JPA repository interfaces.
2025-09-22 20:24:20 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 20:24:20 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 20:24:20 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 20:24:20 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 20:24:20 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1048 ms
2025-09-22 20:24:20 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 20:24:20 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 20:24:20 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 20:24:20 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 20:24:20 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 20:24:20 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@556116d2
2025-09-22 20:24:20 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 20:24:20 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 20:24:20 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 20:24:21 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 20:24:21 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 20:24:21 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 20:24:21 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 20:24:21 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 20:24:21 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 20:24:21 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 20:24:21 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 20:24:21 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 20:24:21 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 20:24:21 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 20:24:21 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 20:24:21 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 20:24:21 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 20:24:21 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 20:24:21 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 20:24:21 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 20:24:21 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 20:24:22 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 20:24:22 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 20:24:22 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 20:24:23 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 20:24:23 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 20:24:23 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 20:24:23 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 20:24:23 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 20:24:23 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 20:24:24 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 20:24:24 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.484 seconds (process running for 5.73)
2025-09-22 20:24:24 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 20:24:24 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 20:24:24 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 20:24:24 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 20:29:20 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 20:29:20 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 20:29:20 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-09-22 20:29:20 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-09-22 20:29:20 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:29:20 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 20:29:20 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-09-22 20:29:20 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-09-22 20:29:20 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:29:20 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 20:29:20 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-09-22 20:29:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-22 20:29:20 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:29:20 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 20:29:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-22 20:29:20 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-09-22 20:29:20 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-09-22 20:29:20 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:29:20 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:29:20 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 20:29:20 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-09-22 20:29:20 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 20:29:20 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-09-22 20:29:20 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:29:20 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-09-22 20:29:20 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 20:29:20 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-09-22 20:29:20 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs/swagger-config
2025-09-22 20:29:20 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:29:20 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 20:29:20 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-22 20:29:20 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs/swagger-config
2025-09-22 20:29:20 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:29:20 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 20:29:20 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-22 20:29:20 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs
2025-09-22 20:29:20 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:29:20 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 20:29:20 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs
2025-09-22 20:29:22 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 1683 ms
2025-09-22 20:29:29 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-09-22 20:29:29 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:29:29 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 20:29:29 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-09-22 20:29:29 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-09-22 20:29:29 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:29:29 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-09-22 20:29:29 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-09-22 20:29:29 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 20:29:29 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-09-22 20:29:29 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:29:29 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 20:29:29 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-09-22 20:29:29 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-09-22 20:29:29 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:29:29 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:29:29 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-22 20:29:29 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 20:29:29 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-09-22 20:29:29 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 20:29:29 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-09-22 20:29:29 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:29:29 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 20:29:29 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-22 20:29:30 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs/swagger-config
2025-09-22 20:29:30 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:29:30 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 20:29:30 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs/swagger-config
2025-09-22 20:29:30 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-22 20:29:30 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:29:30 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 20:29:30 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-22 20:29:30 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs
2025-09-22 20:29:30 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:29:30 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 20:29:30 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs
2025-09-22 20:29:48 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-09-22 20:29:48 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:29:48 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-22 20:29:48 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-09-22 20:29:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.username = :usernameOrEmail 
        OR u.email = :usernameOrEmail */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.username=? 
            or u1_0.email=?
2025-09-22 20:29:48 [http-nio-8080-exec-5] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-22 20:30:27 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/1/pdf
2025-09-22 20:30:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:30:27 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/1/pdf
2025-09-22 20:30:27 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 20:30:27 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 20:30:27 [http-nio-8080-exec-3] INFO  c.n.a.c.MedicalRecordController - تصدير السجل الطبي 1 كـ PDF بواسطة المستخدم admin
2025-09-22 20:30:27 [http-nio-8080-exec-3] INFO  c.n.a.c.MedicalRecordController - مدير النظام يصدر السجل الطبي 1 من العيادة: جميع العيادات
2025-09-22 20:30:27 [http-nio-8080-exec-3] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 1 بواسطة المستخدم admin
2025-09-22 20:30:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=?
2025-09-22 20:30:27 [http-nio-8080-exec-3] ERROR c.n.a.c.MedicalRecordController - خطأ في تصدير السجل الطبي 1 كـ PDF: 
com.nakqeeb.amancare.exception.ResourceNotFoundException: السجل الطبي غير موجود
	at com.nakqeeb.amancare.service.MedicalRecordService.lambda$getMedicalRecordById$0(MedicalRecordService.java:115)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.nakqeeb.amancare.service.MedicalRecordService.getMedicalRecordById(MedicalRecordService.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.service.MedicalRecordService$$SpringCGLIB$$0.getMedicalRecordById(<generated>)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:780)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-09-22 20:30:34 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/1/pdf?clinicId=4
2025-09-22 20:30:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:30:34 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/1/pdf?clinicId=4
2025-09-22 20:30:34 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 20:30:34 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 20:30:34 [http-nio-8080-exec-6] INFO  c.n.a.c.MedicalRecordController - تصدير السجل الطبي 1 كـ PDF بواسطة المستخدم admin
2025-09-22 20:30:34 [http-nio-8080-exec-6] INFO  c.n.a.c.MedicalRecordController - مدير النظام يصدر السجل الطبي 1 من العيادة: 4
2025-09-22 20:30:34 [http-nio-8080-exec-6] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 1 بواسطة المستخدم admin
2025-09-22 20:30:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=?
2025-09-22 20:30:34 [http-nio-8080-exec-6] ERROR c.n.a.c.MedicalRecordController - خطأ في تصدير السجل الطبي 1 كـ PDF: 
com.nakqeeb.amancare.exception.ResourceNotFoundException: السجل الطبي غير موجود
	at com.nakqeeb.amancare.service.MedicalRecordService.lambda$getMedicalRecordById$0(MedicalRecordService.java:115)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.nakqeeb.amancare.service.MedicalRecordService.getMedicalRecordById(MedicalRecordService.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.service.MedicalRecordService$$SpringCGLIB$$0.getMedicalRecordById(<generated>)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:780)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-09-22 20:30:38 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/1/pdf?clinicId=3
2025-09-22 20:30:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:30:38 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/1/pdf?clinicId=3
2025-09-22 20:30:38 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 20:30:38 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 20:30:38 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - تصدير السجل الطبي 1 كـ PDF بواسطة المستخدم admin
2025-09-22 20:30:38 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - مدير النظام يصدر السجل الطبي 1 من العيادة: 3
2025-09-22 20:30:38 [http-nio-8080-exec-1] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 1 بواسطة المستخدم admin
2025-09-22 20:30:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=?
2025-09-22 20:30:38 [http-nio-8080-exec-1] ERROR c.n.a.c.MedicalRecordController - خطأ في تصدير السجل الطبي 1 كـ PDF: 
com.nakqeeb.amancare.exception.ResourceNotFoundException: السجل الطبي غير موجود
	at com.nakqeeb.amancare.service.MedicalRecordService.lambda$getMedicalRecordById$0(MedicalRecordService.java:115)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.nakqeeb.amancare.service.MedicalRecordService.getMedicalRecordById(MedicalRecordService.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.service.MedicalRecordService$$SpringCGLIB$$0.getMedicalRecordById(<generated>)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:780)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-09-22 20:34:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /medical-records
2025-09-22 20:34:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:34:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /medical-records
2025-09-22 20:34:41 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.healthrecords.CreateMedicalRecordRequest); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 20:34:41 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.healthrecords.CreateMedicalRecordRequest); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 20:34:41 [http-nio-8080-exec-4] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: help
2025-09-22 20:34:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 20:34:41 [http-nio-8080-exec-4] INFO  c.n.a.c.MedicalRecordController - مدير النظام ينشئ سجلاً طبياً في سياق العيادة. معرف العيادة المؤقت: 9, السبب: help
2025-09-22 20:34:41 [http-nio-8080-exec-4] INFO  c.n.a.service.MedicalRecordService - إنشاء سجل طبي جديد للمريض 1 بواسطة الطبيب 2
2025-09-22 20:34:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    left join
        clinics c1_0 
            on c1_0.id=p1_0.clinic_id 
    where
        p1_0.id=? 
        and c1_0.id=?
2025-09-22 20:34:41 [http-nio-8080-exec-4] ERROR c.n.a.c.MedicalRecordController - خطأ في إنشاء السجل الطبي: 
com.nakqeeb.amancare.exception.ResourceNotFoundException: المريض غير موجود
	at com.nakqeeb.amancare.service.MedicalRecordService.lambda$createMedicalRecord$0(MedicalRecordService.java:59)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.nakqeeb.amancare.service.MedicalRecordService.createMedicalRecord(MedicalRecordService.java:59)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.service.MedicalRecordService$$SpringCGLIB$$0.createMedicalRecord(<generated>)
	at com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(MedicalRecordController.java:149)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.createMedicalRecord(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-09-22 20:35:00 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /medical-records
2025-09-22 20:35:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:35:01 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /medical-records
2025-09-22 20:35:01 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.healthrecords.CreateMedicalRecordRequest); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 20:35:01 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.healthrecords.CreateMedicalRecordRequest); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 20:35:01 [http-nio-8080-exec-2] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: help
2025-09-22 20:35:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 20:35:01 [http-nio-8080-exec-2] INFO  c.n.a.c.MedicalRecordController - مدير النظام ينشئ سجلاً طبياً في سياق العيادة. معرف العيادة المؤقت: 9, السبب: help
2025-09-22 20:35:01 [http-nio-8080-exec-2] INFO  c.n.a.service.MedicalRecordService - إنشاء سجل طبي جديد للمريض 14 بواسطة الطبيب 2
2025-09-22 20:35:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    left join
        clinics c1_0 
            on c1_0.id=p1_0.clinic_id 
    where
        p1_0.id=? 
        and c1_0.id=?
2025-09-22 20:35:01 [http-nio-8080-exec-2] ERROR c.n.a.c.MedicalRecordController - خطأ في إنشاء السجل الطبي: 
com.nakqeeb.amancare.exception.ResourceNotFoundException: المريض غير موجود
	at com.nakqeeb.amancare.service.MedicalRecordService.lambda$createMedicalRecord$0(MedicalRecordService.java:59)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.nakqeeb.amancare.service.MedicalRecordService.createMedicalRecord(MedicalRecordService.java:59)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.service.MedicalRecordService$$SpringCGLIB$$0.createMedicalRecord(<generated>)
	at com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(MedicalRecordController.java:149)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.createMedicalRecord(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-09-22 20:35:27 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /medical-records
2025-09-22 20:35:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:35:27 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /medical-records
2025-09-22 20:35:27 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.healthrecords.CreateMedicalRecordRequest); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 20:35:27 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.healthrecords.CreateMedicalRecordRequest); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 20:35:27 [http-nio-8080-exec-10] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: help
2025-09-22 20:35:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 20:35:27 [http-nio-8080-exec-10] INFO  c.n.a.c.MedicalRecordController - مدير النظام ينشئ سجلاً طبياً في سياق العيادة. معرف العيادة المؤقت: 9, السبب: help
2025-09-22 20:35:27 [http-nio-8080-exec-10] INFO  c.n.a.service.MedicalRecordService - إنشاء سجل طبي جديد للمريض 14 بواسطة الطبيب 1
2025-09-22 20:35:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    left join
        clinics c1_0 
            on c1_0.id=p1_0.clinic_id 
    where
        p1_0.id=? 
        and c1_0.id=?
2025-09-22 20:35:27 [http-nio-8080-exec-10] ERROR c.n.a.c.MedicalRecordController - خطأ في إنشاء السجل الطبي: 
com.nakqeeb.amancare.exception.ResourceNotFoundException: المريض غير موجود
	at com.nakqeeb.amancare.service.MedicalRecordService.lambda$createMedicalRecord$0(MedicalRecordService.java:59)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.nakqeeb.amancare.service.MedicalRecordService.createMedicalRecord(MedicalRecordService.java:59)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.service.MedicalRecordService$$SpringCGLIB$$0.createMedicalRecord(<generated>)
	at com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(MedicalRecordController.java:149)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.createMedicalRecord(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-09-22 20:36:17 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/login
2025-09-22 20:36:17 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-09-22 20:36:17 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:36:17 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-09-22 20:36:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.username = :usernameOrEmail 
        OR u.email = :usernameOrEmail */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.username=? 
            or u1_0.email=?
2025-09-22 20:36:17 [http-nio-8080-exec-8] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-22 20:36:17 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/me
2025-09-22 20:36:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/me
2025-09-22 20:36:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:36:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/me
2025-09-22 20:36:17 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-22 20:36:17 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-22 20:36:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-09-22 20:36:18 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-22&clinicId=9
2025-09-22 20:36:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-09-22 20:36:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-22&clinicId=9
2025-09-22 20:36:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:36:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:36:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-09-22 20:36:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-22&clinicId=9
2025-09-22 20:36:18 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 20:36:18 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 20:36:18 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 20:36:18 [http-nio-8080-exec-4] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-09-22 20:36:18 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 20:36:18 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-09-22 20:36:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 20:36:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 20:36:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-09-22 20:36:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-22 20:36:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-22 20:36:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-09-22 20:36:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-22 20:36:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-09-22 20:36:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-09-22 20:36:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-09-22 20:36:24 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-09-22 20:36:24 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 20:36:24 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 20:36:24 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-09-22 20:36:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:36:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:36:24 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-09-22 20:36:24 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 20:36:24 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 20:36:24 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 20:36:24 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-09-22 20:36:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 20:36:24 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 20:36:24 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 20:36:24 [http-nio-8080-exec-5] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-22 20:36:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-09-22 20:36:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-22 20:36:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 20:36:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-09-22 20:36:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-22 20:36:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-09-22 20:36:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-09-22 20:36:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-09-22 20:36:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-22 20:36:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 20:36:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 20:36:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 20:36:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 20:36:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 20:36:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 20:36:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 20:36:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 20:36:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 20:36:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 20:36:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/17?clinicId=9
2025-09-22 20:36:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/17?clinicId=9
2025-09-22 20:36:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:36:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/17?clinicId=9
2025-09-22 20:36:32 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 20:36:32 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 20:36:32 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-22 20:36:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 20:36:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 20:36:35 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/17/upcoming?clinicId=9
2025-09-22 20:36:35 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/17/upcoming?clinicId=9
2025-09-22 20:36:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:36:35 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/17/upcoming?clinicId=9
2025-09-22 20:36:35 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 20:36:35 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 20:36:35 [http-nio-8080-exec-2] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 9
2025-09-22 20:36:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 20:36:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-09-22 20:36:38 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=9
2025-09-22 20:36:38 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 20:36:38 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/17?clinicId=9
2025-09-22 20:36:38 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 20:36:38 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=9
2025-09-22 20:36:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:36:38 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/17?clinicId=9
2025-09-22 20:36:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:36:38 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 20:36:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:36:38 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 20:36:38 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 20:36:38 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-22 20:36:38 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=9
2025-09-22 20:36:38 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/17?clinicId=9
2025-09-22 20:36:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 20:36:38 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 20:36:38 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 20:36:38 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-22 20:36:38 [http-nio-8080-exec-4] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-22 20:36:38 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-22 20:36:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 20:36:38 [http-nio-8080-exec-3] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading all doctors from clinic: 9
2025-09-22 20:36:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-22 20:36:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-22 20:36:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 20:36:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 20:36:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 20:36:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 20:36:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 20:36:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 20:36:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 20:36:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 20:36:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 20:36:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 20:36:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 20:36:52 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 20:36:52 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=9
2025-09-22 20:36:52 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=9
2025-09-22 20:36:52 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 20:36:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:36:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:36:52 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 20:36:52 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=9
2025-09-22 20:36:52 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-22 20:36:52 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-22 20:36:52 [http-nio-8080-exec-7] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading all doctors from clinic: 9
2025-09-22 20:36:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-22 20:36:52 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 20:36:52 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 20:36:52 [http-nio-8080-exec-5] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading appointments from clinic: 9
2025-09-22 20:36:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 20:36:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-22 20:36:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 20:36:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 20:36:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 20:36:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 20:36:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 20:36:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 20:36:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 20:36:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 20:36:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:36:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 20:36:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 20:36:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 20:37:00 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/13?clinicId=9
2025-09-22 20:37:00 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/13?clinicId=9
2025-09-22 20:37:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:37:00 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/13?clinicId=9
2025-09-22 20:37:00 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAppointmentById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 20:37:00 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAppointmentById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 20:37:00 [http-nio-8080-exec-3] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading a specific appointment from clinic: 9
2025-09-22 20:37:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-09-22 20:37:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 20:37:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 20:37:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:37:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:37:00 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/17/upcoming?clinicId=9
2025-09-22 20:37:00 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/17/upcoming?clinicId=9
2025-09-22 20:37:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:37:00 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/17/upcoming?clinicId=9
2025-09-22 20:37:00 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 20:37:00 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 20:37:00 [http-nio-8080-exec-10] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 9
2025-09-22 20:37:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 20:37:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-09-22 20:37:28 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /medical-records
2025-09-22 20:37:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:37:28 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /medical-records
2025-09-22 20:37:28 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.healthrecords.CreateMedicalRecordRequest); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 20:37:28 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.healthrecords.CreateMedicalRecordRequest); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 20:37:28 [http-nio-8080-exec-1] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: help
2025-09-22 20:37:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 20:37:28 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - مدير النظام ينشئ سجلاً طبياً في سياق العيادة. معرف العيادة المؤقت: 9, السبب: help
2025-09-22 20:37:28 [http-nio-8080-exec-1] INFO  c.n.a.service.MedicalRecordService - إنشاء سجل طبي جديد للمريض 17 بواسطة الطبيب 1
2025-09-22 20:37:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    left join
        clinics c1_0 
            on c1_0.id=p1_0.clinic_id 
    where
        p1_0.id=? 
        and c1_0.id=?
2025-09-22 20:37:28 [http-nio-8080-exec-1] ERROR c.n.a.c.MedicalRecordController - خطأ في إنشاء السجل الطبي: 
com.nakqeeb.amancare.exception.ResourceNotFoundException: المريض غير موجود
	at com.nakqeeb.amancare.service.MedicalRecordService.lambda$createMedicalRecord$0(MedicalRecordService.java:59)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.nakqeeb.amancare.service.MedicalRecordService.createMedicalRecord(MedicalRecordService.java:59)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.service.MedicalRecordService$$SpringCGLIB$$0.createMedicalRecord(<generated>)
	at com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(MedicalRecordController.java:149)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.createMedicalRecord(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-09-22 20:38:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /medical-records
2025-09-22 20:38:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:38:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /medical-records
2025-09-22 20:38:08 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.healthrecords.CreateMedicalRecordRequest); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 20:38:08 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.healthrecords.CreateMedicalRecordRequest); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 20:38:08 [http-nio-8080-exec-9] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: help
2025-09-22 20:38:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 20:38:08 [http-nio-8080-exec-9] INFO  c.n.a.c.MedicalRecordController - مدير النظام ينشئ سجلاً طبياً في سياق العيادة. معرف العيادة المؤقت: 9, السبب: help
2025-09-22 20:38:08 [http-nio-8080-exec-9] INFO  c.n.a.service.MedicalRecordService - إنشاء سجل طبي جديد للمريض 17 بواسطة الطبيب 18
2025-09-22 20:38:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    left join
        clinics c1_0 
            on c1_0.id=p1_0.clinic_id 
    where
        p1_0.id=? 
        and c1_0.id=?
2025-09-22 20:38:08 [http-nio-8080-exec-9] ERROR c.n.a.c.MedicalRecordController - خطأ في إنشاء السجل الطبي: 
com.nakqeeb.amancare.exception.ResourceNotFoundException: المريض غير موجود
	at com.nakqeeb.amancare.service.MedicalRecordService.lambda$createMedicalRecord$0(MedicalRecordService.java:59)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.nakqeeb.amancare.service.MedicalRecordService.createMedicalRecord(MedicalRecordService.java:59)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.service.MedicalRecordService$$SpringCGLIB$$0.createMedicalRecord(<generated>)
	at com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(MedicalRecordController.java:149)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.createMedicalRecord(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-09-22 20:46:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-09-22 20:46:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:46:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-09-22 20:46:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.username = :usernameOrEmail 
        OR u.email = :usernameOrEmail */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.username=? 
            or u1_0.email=?
2025-09-22 20:46:50 [http-nio-8080-exec-7] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-22 20:47:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /medical-records
2025-09-22 20:47:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:47:15 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AccessDeniedHandlerImpl - Responding with 403 status code
2025-09-22 20:47:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2025-09-22 20:47:15 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:53:37 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 20:53:37 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 20:53:37 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 20:53:37 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 20:53:37 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 20:53:40 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 31143 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 20:53:40 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 20:53:40 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 20:53:40 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 20:53:40 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 20:53:40 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 15 JPA repository interfaces.
2025-09-22 20:53:41 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 20:53:41 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 20:53:41 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 20:53:41 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 20:53:41 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1064 ms
2025-09-22 20:53:41 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 20:53:41 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 20:53:41 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 20:53:41 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 20:53:41 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 20:53:41 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@186a4069
2025-09-22 20:53:41 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 20:53:41 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 20:53:41 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 20:53:42 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 20:53:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 20:53:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 20:53:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 20:53:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 20:53:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 20:53:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 20:53:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 20:53:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 20:53:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 20:53:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 20:53:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 20:53:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 20:53:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 20:53:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 20:53:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 20:53:42 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 20:53:42 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 20:53:43 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 20:53:43 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 20:53:43 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 20:53:44 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 20:53:44 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 20:53:44 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 20:53:44 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 20:53:44 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 20:53:45 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 20:53:45 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 20:53:45 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.198 seconds (process running for 5.463)
2025-09-22 20:53:45 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 20:53:45 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 20:53:45 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 20:53:45 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 20:53:50 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 20:53:50 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 20:53:50 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-09-22 20:53:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /medical-records
2025-09-22 20:53:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:53:50 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AccessDeniedHandlerImpl - Responding with 403 status code
2025-09-22 20:53:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2025-09-22 20:53:50 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:58:05 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 20:58:05 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 20:58:05 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 20:58:05 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 20:58:05 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 20:58:08 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 32234 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 20:58:08 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 20:58:08 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 20:58:08 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 20:58:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 20:58:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 15 JPA repository interfaces.
2025-09-22 20:58:09 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 20:58:09 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 20:58:09 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 20:58:09 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 20:58:09 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 947 ms
2025-09-22 20:58:09 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 20:58:09 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 20:58:09 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 20:58:09 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 20:58:09 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 20:58:09 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2e27a49c
2025-09-22 20:58:09 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 20:58:09 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 20:58:09 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 20:58:10 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 20:58:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 20:58:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 20:58:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 20:58:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 20:58:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 20:58:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 20:58:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 20:58:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 20:58:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 20:58:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 20:58:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 20:58:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 20:58:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 20:58:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 20:58:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 20:58:10 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 20:58:10 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 20:58:11 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 20:58:11 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 20:58:11 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 20:58:12 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 20:58:12 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 20:58:12 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 20:58:12 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 20:58:12 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 20:58:12 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 20:58:12 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 20:58:12 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.034 seconds (process running for 5.272)
2025-09-22 20:58:12 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 20:58:12 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 20:58:12 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 20:58:12 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 20:58:17 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 20:58:17 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 20:58:17 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-09-22 20:58:17 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /medical-records
2025-09-22 20:58:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:58:17 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AccessDeniedHandlerImpl - Responding with 403 status code
2025-09-22 20:58:17 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2025-09-22 20:58:17 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:58:49 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /medical-records
2025-09-22 20:58:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:58:49 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AccessDeniedHandlerImpl - Responding with 403 status code
2025-09-22 20:58:49 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2025-09-22 20:58:49 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-22 20:59:31 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-09-22 20:59:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:59:31 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-09-22 20:59:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.username = :usernameOrEmail 
        OR u.email = :usernameOrEmail */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.username=? 
            or u1_0.email=?
2025-09-22 20:59:32 [http-nio-8080-exec-5] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-22 20:59:53 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /medical-records
2025-09-22 20:59:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 20:59:53 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /medical-records
2025-09-22 20:59:53 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.healthrecords.CreateMedicalRecordRequest); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 20:59:53 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.healthrecords.CreateMedicalRecordRequest); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 20:59:53 [http-nio-8080-exec-7] INFO  c.n.a.c.MedicalRecordController - مدير النظام ينشئ سجلاً طبياً في سياق العيادة. معرف العيادة المؤقت: null, السبب: null
2025-09-22 20:59:53 [http-nio-8080-exec-7] INFO  c.n.a.service.MedicalRecordService - إنشاء سجل طبي جديد للمريض 17 بواسطة الطبيب 18
2025-09-22 20:59:53 [http-nio-8080-exec-7] ERROR c.n.a.c.MedicalRecordController - خطأ في إنشاء السجل الطبي: 
com.nakqeeb.amancare.exception.ForbiddenOperationException: SYSTEM_ADMIN يجب أن يحدد سياق العيادة للقيام بعمليات الكتابة. استخدم header 'X-Acting-Clinic-Id' لتحديد العيادة المستهدفة
	at com.nakqeeb.amancare.service.ClinicContextService.getEffectiveClinicId(ClinicContextService.java:69)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.service.ClinicContextService$$SpringCGLIB$$0.getEffectiveClinicId(<generated>)
	at com.nakqeeb.amancare.service.MedicalRecordService.createMedicalRecord(MedicalRecordService.java:70)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.service.MedicalRecordService$$SpringCGLIB$$0.createMedicalRecord(<generated>)
	at com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(MedicalRecordController.java:149)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.createMedicalRecord(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-09-22 21:00:07 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /medical-records
2025-09-22 21:00:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:00:07 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /medical-records
2025-09-22 21:00:07 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.healthrecords.CreateMedicalRecordRequest); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:00:07 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.healthrecords.CreateMedicalRecordRequest); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:00:07 [http-nio-8080-exec-8] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: dfgfgdfd
2025-09-22 21:00:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:00:07 [http-nio-8080-exec-8] INFO  c.n.a.c.MedicalRecordController - مدير النظام ينشئ سجلاً طبياً في سياق العيادة. معرف العيادة المؤقت: 9, السبب: dfgfgdfd
2025-09-22 21:00:07 [http-nio-8080-exec-8] INFO  c.n.a.service.MedicalRecordService - إنشاء سجل طبي جديد للمريض 17 بواسطة الطبيب 18
2025-09-22 21:00:07 [http-nio-8080-exec-8] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: dfgfgdfd
2025-09-22 21:00:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Clinic x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            clinics c1_0 
        where
            c1_0.id=?
2025-09-22 21:00:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-22 21:00:07 [http-nio-8080-exec-8] INFO  c.n.a.service.ClinicContextService - System Admin Action Logged: User 2 performed CONTEXT_SWITCH on clinic 9 - dfgfgdfd
2025-09-22 21:00:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:00:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=? 
        and p1_0.clinic_id=?
2025-09-22 21:00:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.id = :id 
        AND u.clinic.id = :clinicId 
        AND u.role = :role */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.id=? 
            and u1_0.clinic_id=? 
            and u1_0.role=?
2025-09-22 21:00:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.id = :id 
        AND a.clinic.id = :clinicId */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.id=? 
            and a1_0.clinic_id=?
2025-09-22 21:00:07 [http-nio-8080-exec-8] ERROR c.n.a.c.MedicalRecordController - خطأ في إنشاء السجل الطبي: 
com.nakqeeb.amancare.exception.ResourceNotFoundException: الموعد غير موجود
	at com.nakqeeb.amancare.service.MedicalRecordService.lambda$createMedicalRecord$3(MedicalRecordService.java:88)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.nakqeeb.amancare.service.MedicalRecordService.createMedicalRecord(MedicalRecordService.java:88)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.service.MedicalRecordService$$SpringCGLIB$$0.createMedicalRecord(<generated>)
	at com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(MedicalRecordController.java:149)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.createMedicalRecord(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-09-22 21:00:30 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/13/status?status=CONFIRMED
2025-09-22 21:00:30 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing PATCH /appointments/13/status?status=CONFIRMED
2025-09-22 21:00:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:00:30 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured PATCH /appointments/13/status?status=CONFIRMED
2025-09-22 21:00:30 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.updateAppointmentStatus(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:00:30 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.updateAppointmentStatus(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:00:30 [http-nio-8080-exec-10] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:00:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:00:30 [http-nio-8080-exec-10] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN is updating an appointment status with clinic context. ActingClinicId: 9, Reason: %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:00:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-09-22 21:00:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:00:35 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing PATCH /appointments/13/status?status=CONFIRMED
2025-09-22 21:00:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:00:35 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured PATCH /appointments/13/status?status=CONFIRMED
2025-09-22 21:00:35 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.updateAppointmentStatus(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:00:35 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.updateAppointmentStatus(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:00:35 [http-nio-8080-exec-1] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:00:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:00:35 [http-nio-8080-exec-1] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN is updating an appointment status with clinic context. ActingClinicId: 9, Reason: %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:00:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-09-22 21:00:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:00:38 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 21:00:38 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=9
2025-09-22 21:00:38 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 21:00:38 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=9
2025-09-22 21:00:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:00:38 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:00:38 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=9
2025-09-22 21:00:38 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 21:00:38 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-22 21:00:38 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-22 21:00:38 [http-nio-8080-exec-5] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading all doctors from clinic: 9
2025-09-22 21:00:38 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:00:38 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-22 21:00:38 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:00:38 [http-nio-8080-exec-4] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading appointments from clinic: 9
2025-09-22 21:00:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:00:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-22 21:00:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:00:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:00:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:00:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:00:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:00:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:00:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:00:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:00:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:00:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:00:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:00:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:00:43 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/14?clinicId=9
2025-09-22 21:00:43 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/14?clinicId=9
2025-09-22 21:00:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:00:43 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/14?clinicId=9
2025-09-22 21:00:43 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAppointmentById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:00:43 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAppointmentById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:00:43 [http-nio-8080-exec-9] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading a specific appointment from clinic: 9
2025-09-22 21:00:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-09-22 21:00:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:00:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:00:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:00:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:00:43 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/17/upcoming?clinicId=9
2025-09-22 21:00:43 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/17/upcoming?clinicId=9
2025-09-22 21:00:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:00:43 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/17/upcoming?clinicId=9
2025-09-22 21:00:43 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:00:43 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:00:43 [http-nio-8080-exec-1] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 9
2025-09-22 21:00:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:00:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-09-22 21:00:45 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/14/status?status=CONFIRMED
2025-09-22 21:00:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing PATCH /appointments/14/status?status=CONFIRMED
2025-09-22 21:00:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:00:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured PATCH /appointments/14/status?status=CONFIRMED
2025-09-22 21:00:46 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.updateAppointmentStatus(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:00:46 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.updateAppointmentStatus(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:00:46 [http-nio-8080-exec-3] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:00:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:00:46 [http-nio-8080-exec-3] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN is updating an appointment status with clinic context. ActingClinicId: 9, Reason: %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:00:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-09-22 21:00:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:00:52 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 21:00:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-09-22 21:00:52 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 21:00:52 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-09-22 21:00:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:00:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:00:52 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 21:00:52 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-09-22 21:00:52 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:00:52 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:00:52 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-09-22 21:00:52 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:00:52 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:00:52 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-22 21:00:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:00:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:00:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-09-22 21:00:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-22 21:00:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-22 21:00:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-09-22 21:00:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:00:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-22 21:00:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:00:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:00:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-09-22 21:00:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:00:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-09-22 21:00:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:00:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:00:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:00:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:00:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:00:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:00:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-09-22 21:00:58 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/17?clinicId=9
2025-09-22 21:00:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/17?clinicId=9
2025-09-22 21:00:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:00:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/17?clinicId=9
2025-09-22 21:00:58 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:00:58 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:00:58 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-22 21:00:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:00:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:01:01 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/17/upcoming?clinicId=9
2025-09-22 21:01:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/17/upcoming?clinicId=9
2025-09-22 21:01:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:01:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/17/upcoming?clinicId=9
2025-09-22 21:01:01 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:01:01 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:01:01 [http-nio-8080-exec-5] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 9
2025-09-22 21:01:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:01:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-09-22 21:01:03 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 21:01:03 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=9
2025-09-22 21:01:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=9
2025-09-22 21:01:03 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/17?clinicId=9
2025-09-22 21:01:03 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 21:01:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:01:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:01:03 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/17?clinicId=9
2025-09-22 21:01:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=9
2025-09-22 21:01:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:01:03 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-22 21:01:03 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:01:03 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-22 21:01:03 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:01:03 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-22 21:01:03 [http-nio-8080-exec-8] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading all doctors from clinic: 9
2025-09-22 21:01:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:01:03 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 21:01:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-22 21:01:03 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:01:03 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:01:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:01:03 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-22 21:01:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:01:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-22 21:01:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:01:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:01:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:01:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:01:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:01:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:01:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:01:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:01:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:01:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:01:53 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-22 21:01:53 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-22
2025-09-22 21:01:53 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-22
2025-09-22 21:01:53 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-22 21:01:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:01:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:01:53 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-22
2025-09-22 21:01:53 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-22 21:01:53 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:01:53 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:01:53 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:01:53 [http-nio-8080-exec-4] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-22 21:01:53 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:01:53 [http-nio-8080-exec-7] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: ALL
2025-09-22 21:01:54 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/clinics
2025-09-22 21:01:54 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/clinics
2025-09-22 21:01:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:01:54 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/clinics
2025-09-22 21:01:54 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getAllClinics(); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-22 21:01:54 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getAllClinics(); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-22 21:01:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        DISTINCT u.clinic 
    FROM
        User u 
    WHERE
        u.role = 'ADMIN' 
        AND u.isActive = true */ select
            distinct c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            u1_0.role='ADMIN' 
            and u1_0.is_active=1
2025-09-22 21:02:00 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-09-22 21:02:00 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-22&clinicId=9
2025-09-22 21:02:00 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-22&clinicId=9
2025-09-22 21:02:00 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-09-22 21:02:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:02:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:02:00 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-09-22 21:02:00 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-22&clinicId=9
2025-09-22 21:02:00 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:02:00 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:02:00 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:02:00 [http-nio-8080-exec-5] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-09-22 21:02:00 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:02:00 [http-nio-8080-exec-10] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-09-22 21:02:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:02:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:02:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-09-22 21:02:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-22 21:02:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-09-22 21:02:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-22 21:02:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-09-22 21:02:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-09-22 21:02:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-22 21:02:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-09-22 21:02:04 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-09-22 21:02:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 21:02:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 21:02:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:02:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:02:04 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-09-22 21:02:04 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:02:04 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:02:04 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-09-22 21:02:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 21:02:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:02:04 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:02:04 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:02:04 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-22 21:02:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-09-22 21:02:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:02:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-22 21:02:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-09-22 21:02:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-22 21:02:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-22 21:02:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:02:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-09-22 21:02:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:02:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-09-22 21:02:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-09-22 21:02:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:02:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:02:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:09 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/17?clinicId=9
2025-09-22 21:02:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/17?clinicId=9
2025-09-22 21:02:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:02:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/17?clinicId=9
2025-09-22 21:02:09 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:02:09 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:02:09 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-22 21:02:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:02:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:02:12 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/17/upcoming?clinicId=9
2025-09-22 21:02:12 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/17/upcoming?clinicId=9
2025-09-22 21:02:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:02:12 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/17/upcoming?clinicId=9
2025-09-22 21:02:12 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:02:12 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:02:12 [http-nio-8080-exec-3] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 9
2025-09-22 21:02:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:02:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-09-22 21:02:13 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 21:02:13 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=9
2025-09-22 21:02:13 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/17?clinicId=9
2025-09-22 21:02:13 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 21:02:13 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=9
2025-09-22 21:02:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:02:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:02:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:02:13 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 21:02:13 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/17?clinicId=9
2025-09-22 21:02:13 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=9
2025-09-22 21:02:13 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:02:13 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:02:13 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:02:13 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-22 21:02:13 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:02:13 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-22 21:02:13 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-22 21:02:13 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-22 21:02:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:02:13 [http-nio-8080-exec-1] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading all doctors from clinic: 9
2025-09-22 21:02:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:02:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:02:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-22 21:02:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-22 21:02:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:02:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:02:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:02:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:02:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:49 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 21:02:49 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=9
2025-09-22 21:02:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=9
2025-09-22 21:02:49 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 21:02:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:02:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:02:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=9
2025-09-22 21:02:49 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 21:02:49 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-22 21:02:49 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:02:49 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-22 21:02:49 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:02:49 [http-nio-8080-exec-7] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading appointments from clinic: 9
2025-09-22 21:02:49 [http-nio-8080-exec-6] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading all doctors from clinic: 9
2025-09-22 21:02:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:02:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-22 21:02:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-22 21:02:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:02:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:02:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:02:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:02:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:02:58 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-09-22 21:02:58 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 21:02:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 21:02:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-09-22 21:02:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:02:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:02:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-09-22 21:02:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 21:02:58 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:02:58 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:02:58 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:02:58 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:02:58 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-22 21:02:58 [http-nio-8080-exec-5] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-09-22 21:02:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:02:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:02:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-09-22 21:02:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-22 21:02:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-22 21:02:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-09-22 21:02:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:02:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-22 21:02:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:02:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-09-22 21:02:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-09-22 21:02:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-09-22 21:02:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:02:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:02:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:02:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:03:04 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/17?clinicId=9
2025-09-22 21:03:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/17?clinicId=9
2025-09-22 21:03:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:03:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/17?clinicId=9
2025-09-22 21:03:04 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:03:04 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:03:04 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-22 21:03:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:03:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:03:05 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/17/upcoming?clinicId=9
2025-09-22 21:03:05 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/17/upcoming?clinicId=9
2025-09-22 21:03:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:03:05 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/17/upcoming?clinicId=9
2025-09-22 21:03:05 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:03:05 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:03:05 [http-nio-8080-exec-1] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 9
2025-09-22 21:03:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:03:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-09-22 21:03:06 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=9
2025-09-22 21:03:06 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 21:03:06 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/17?clinicId=9
2025-09-22 21:03:06 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 21:03:06 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=9
2025-09-22 21:03:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:03:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:03:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:03:06 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/17?clinicId=9
2025-09-22 21:03:06 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=9
2025-09-22 21:03:06 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-22 21:03:06 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-22 21:03:06 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:03:06 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:03:06 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-22 21:03:06 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-22 21:03:06 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:03:06 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 21:03:06 [http-nio-8080-exec-4] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading all doctors from clinic: 9
2025-09-22 21:03:06 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-22 21:03:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:03:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:03:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-22 21:03:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:03:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-22 21:03:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:03:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:03:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:03:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:03:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:03:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:03:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:03:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:03:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-22 21:03:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:03:51 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments
2025-09-22 21:03:51 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-22 21:03:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:03:51 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-22 21:03:51 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:03:51 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:03:51 [http-nio-8080-exec-9] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:03:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:03:51 [http-nio-8080-exec-9] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN is creating an appointment with clinic context. ActingClinicId: 9, Reason: %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:03:51 [http-nio-8080-exec-9] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:03:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Clinic x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            clinics c1_0 
        where
            c1_0.id=?
2025-09-22 21:03:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-22 21:03:51 [http-nio-8080-exec-9] INFO  c.n.a.service.ClinicContextService - System Admin Action Logged: User 2 performed CONTEXT_SWITCH on clinic 9 - %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:03:51 [http-nio-8080-exec-9] INFO  c.n.a.service.AppointmentService - Creating patient in clinic 9 by user admin
2025-09-22 21:03:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:03:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:03:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:03:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:03:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.doctor = :doctor 
        AND a.appointmentDate = :date 
        AND a.status NOT IN ('CANCELLED', 'NO_SHOW') 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.doctor_id=? 
            and a1_0.appointment_date=? 
            and a1_0.status not in ('CANCELLED', 'NO_SHOW') 
        order by
            a1_0.appointment_time
2025-09-22 21:03:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.Appointment */insert 
    into
        appointments (appointment_date, appointment_time, appointment_type, chief_complaint, clinic_id, created_at, created_by, doctor_id, duration_minutes, notes, patient_id, status, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-22 21:03:51 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 21:03:51 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=9
2025-09-22 21:03:51 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 21:03:51 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=9
2025-09-22 21:03:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:03:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:03:51 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=9
2025-09-22 21:03:51 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 21:03:51 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-22 21:03:51 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-22 21:03:51 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:03:51 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:03:51 [http-nio-8080-exec-4] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading appointments from clinic: 9
2025-09-22 21:03:51 [http-nio-8080-exec-2] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading all doctors from clinic: 9
2025-09-22 21:03:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:03:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-22 21:03:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-22 21:03:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:03:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:03:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:03:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:03:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:03:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:03:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:03:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:03:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:03:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:03:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:03:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:03:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:04:05 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/17/status?status=CONFIRMED
2025-09-22 21:04:05 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing PATCH /appointments/17/status?status=CONFIRMED
2025-09-22 21:04:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:04:05 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured PATCH /appointments/17/status?status=CONFIRMED
2025-09-22 21:04:05 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.updateAppointmentStatus(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:04:05 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.updateAppointmentStatus(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:04:05 [http-nio-8080-exec-8] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:04:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:04:05 [http-nio-8080-exec-8] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN is updating an appointment status with clinic context. ActingClinicId: 9, Reason: %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:04:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-09-22 21:04:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:04:25 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=9
2025-09-22 21:04:25 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 21:04:25 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=9
2025-09-22 21:04:25 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 21:04:25 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:04:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:04:25 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 21:04:25 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=9
2025-09-22 21:04:25 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-22 21:04:25 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:04:25 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-22 21:04:25 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:04:25 [http-nio-8080-exec-5] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading appointments from clinic: 9
2025-09-22 21:04:25 [http-nio-8080-exec-10] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading all doctors from clinic: 9
2025-09-22 21:04:25 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:04:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-22 21:04:25 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-22 21:04:25 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:04:25 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:04:25 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:04:25 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:04:25 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:04:25 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:04:25 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:04:25 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:04:25 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:04:25 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:04:25 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:04:25 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:04:25 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:04:39 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Retrograde clock change detected (housekeeper delta=29s856ms), soft-evicting connections from pool.
2025-09-22 21:18:14 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=13m34s963ms).
2025-09-22 21:18:34 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=9
2025-09-22 21:18:34 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 21:18:34 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 21:18:34 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=9
2025-09-22 21:18:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:18:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:18:34 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=9
2025-09-22 21:18:34 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 21:18:34 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-22 21:18:34 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:18:34 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:18:34 [http-nio-8080-exec-7] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading appointments from clinic: 9
2025-09-22 21:18:34 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-22 21:18:34 [http-nio-8080-exec-8] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading all doctors from clinic: 9
2025-09-22 21:18:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:18:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-22 21:18:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-22 21:18:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:18:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:18:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:18:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:18:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:18:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:18:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:18:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:18:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:18:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:18:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:18:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:18:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:18:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/17/status?status=CONFIRMED
2025-09-22 21:18:47 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing PATCH /appointments/17/status?status=CONFIRMED
2025-09-22 21:18:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:18:47 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured PATCH /appointments/17/status?status=CONFIRMED
2025-09-22 21:18:47 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.updateAppointmentStatus(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:18:47 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.updateAppointmentStatus(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:18:47 [http-nio-8080-exec-5] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:18:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:18:47 [http-nio-8080-exec-5] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN is updating an appointment status with clinic context. ActingClinicId: 9, Reason: %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:18:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-09-22 21:18:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:24:59 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 21:24:59 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 21:24:59 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:24:59 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 21:24:59 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 21:25:02 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 35664 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 21:25:02 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 21:25:02 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 21:25:02 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 21:25:02 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 21:25:02 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 40 ms. Found 15 JPA repository interfaces.
2025-09-22 21:25:03 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 21:25:03 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 21:25:03 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 21:25:03 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 21:25:03 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1027 ms
2025-09-22 21:25:03 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 21:25:03 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 21:25:03 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 21:25:03 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 21:25:03 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 21:25:03 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4461fdc2
2025-09-22 21:25:03 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 21:25:03 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 21:25:03 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 21:25:04 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 21:25:04 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 21:25:04 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 21:25:04 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 21:25:04 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 21:25:04 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:25:04 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:25:04 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 21:25:04 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 21:25:04 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:25:04 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 21:25:04 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:25:04 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 21:25:04 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 21:25:04 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 21:25:04 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 21:25:04 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:25:04 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 21:25:05 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 21:25:05 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 21:25:05 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 21:25:06 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 21:25:06 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 21:25:06 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 21:25:06 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 21:25:07 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 21:25:07 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 21:25:07 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 21:25:07 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.265 seconds (process running for 5.5)
2025-09-22 21:25:07 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 21:25:07 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 21:25:07 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 21:25:07 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 21:25:15 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 21:25:15 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 21:25:15 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-09-22 21:25:15 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/17/status?status=CONFIRMED
2025-09-22 21:25:15 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing PATCH /appointments/17/status?status=CONFIRMED
2025-09-22 21:25:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:25:15 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured PATCH /appointments/17/status?status=CONFIRMED
2025-09-22 21:25:15 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.updateAppointmentStatus(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:25:15 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.updateAppointmentStatus(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:25:15 [http-nio-8080-exec-2] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:25:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:25:15 [http-nio-8080-exec-2] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN is updating an appointment status with clinic context. ActingClinicId: 9, Reason: %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:25:15 [http-nio-8080-exec-2] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:25:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Clinic x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            clinics c1_0 
        where
            c1_0.id=?
2025-09-22 21:25:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-22 21:25:15 [http-nio-8080-exec-2] INFO  c.n.a.service.ClinicContextService - System Admin Action Logged: User 2 performed CONTEXT_SWITCH on clinic 9 - %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:25:15 [http-nio-8080-exec-2] INFO  c.n.a.service.AppointmentService - Updating appointment's status in clinic 9 by user admin
2025-09-22 21:25:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-09-22 21:25:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:25:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:25:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:25:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* update
        for com.nakqeeb.amancare.entity.Appointment */update appointments 
    set
        appointment_date=?,
        appointment_time=?,
        appointment_type=?,
        chief_complaint=?,
        clinic_id=?,
        created_by=?,
        doctor_id=?,
        duration_minutes=?,
        notes=?,
        patient_id=?,
        status=?,
        updated_at=? 
    where
        id=?
2025-09-22 21:25:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 21:25:15 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 21:25:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:25:15 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 21:25:15 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:25:15 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:25:15 [http-nio-8080-exec-4] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading appointments from clinic: 9
2025-09-22 21:25:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:25:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-22 21:25:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:25:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:25:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:25:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:25:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:25:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/17/status?status=IN_PROGRESS
2025-09-22 21:25:20 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing PATCH /appointments/17/status?status=IN_PROGRESS
2025-09-22 21:25:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:25:20 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured PATCH /appointments/17/status?status=IN_PROGRESS
2025-09-22 21:25:20 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.updateAppointmentStatus(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:25:20 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.updateAppointmentStatus(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:25:20 [http-nio-8080-exec-7] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:25:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:25:20 [http-nio-8080-exec-7] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN is updating an appointment status with clinic context. ActingClinicId: 9, Reason: %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:25:20 [http-nio-8080-exec-7] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:25:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Clinic x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            clinics c1_0 
        where
            c1_0.id=?
2025-09-22 21:25:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-22 21:25:20 [http-nio-8080-exec-7] INFO  c.n.a.service.ClinicContextService - System Admin Action Logged: User 2 performed CONTEXT_SWITCH on clinic 9 - %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:25:20 [http-nio-8080-exec-7] INFO  c.n.a.service.AppointmentService - Updating appointment's status in clinic 9 by user admin
2025-09-22 21:25:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-09-22 21:25:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:25:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:25:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:25:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* update
        for com.nakqeeb.amancare.entity.Appointment */update appointments 
    set
        appointment_date=?,
        appointment_time=?,
        appointment_type=?,
        chief_complaint=?,
        clinic_id=?,
        created_by=?,
        doctor_id=?,
        duration_minutes=?,
        notes=?,
        patient_id=?,
        status=?,
        updated_at=? 
    where
        id=?
2025-09-22 21:25:20 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 21:25:20 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 21:25:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:25:20 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 21:25:20 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:25:20 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:25:20 [http-nio-8080-exec-9] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading appointments from clinic: 9
2025-09-22 21:25:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:25:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-22 21:25:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:25:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:25:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:25:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:25:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:25:24 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/17/status?status=COMPLETED
2025-09-22 21:25:24 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing PATCH /appointments/17/status?status=COMPLETED
2025-09-22 21:25:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:25:24 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured PATCH /appointments/17/status?status=COMPLETED
2025-09-22 21:25:24 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.updateAppointmentStatus(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:25:24 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.updateAppointmentStatus(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:25:24 [http-nio-8080-exec-2] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:25:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:25:24 [http-nio-8080-exec-2] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN is updating an appointment status with clinic context. ActingClinicId: 9, Reason: %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:25:24 [http-nio-8080-exec-2] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:25:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Clinic x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            clinics c1_0 
        where
            c1_0.id=?
2025-09-22 21:25:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-22 21:25:24 [http-nio-8080-exec-2] INFO  c.n.a.service.ClinicContextService - System Admin Action Logged: User 2 performed CONTEXT_SWITCH on clinic 9 - %D8%AD%D9%84%20%D9%85%D8%B4%D9%83%D9%84%D8%A9%20%D9%81%D9%8A%20%D8%A7%D9%84%D9%86%D8%B8%D8%A7%D9%85%2C%20%D8%AA%D8%AF%D8%B1%D9%8A%D8%A8%20%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%AE%D8%AF%D9%85%D9%8A%D9%86
2025-09-22 21:25:24 [http-nio-8080-exec-2] INFO  c.n.a.service.AppointmentService - Updating appointment's status in clinic 9 by user admin
2025-09-22 21:25:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-09-22 21:25:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:25:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:25:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:25:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* update
        for com.nakqeeb.amancare.entity.Appointment */update appointments 
    set
        appointment_date=?,
        appointment_time=?,
        appointment_type=?,
        chief_complaint=?,
        clinic_id=?,
        created_by=?,
        doctor_id=?,
        duration_minutes=?,
        notes=?,
        patient_id=?,
        status=?,
        updated_at=? 
    where
        id=?
2025-09-22 21:25:24 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 21:25:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:25:24 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-22 21:25:24 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:25:24 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:25:24 [http-nio-8080-exec-3] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading appointments from clinic: 9
2025-09-22 21:25:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:25:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-22 21:25:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:25:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:25:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:25:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:25:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:25:28 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/17?clinicId=9
2025-09-22 21:25:28 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/17?clinicId=9
2025-09-22 21:25:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:25:28 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/17?clinicId=9
2025-09-22 21:25:28 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAppointmentById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:25:28 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAppointmentById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:25:28 [http-nio-8080-exec-6] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading a specific appointment from clinic: 9
2025-09-22 21:25:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-09-22 21:25:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:25:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:25:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:25:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:25:28 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/17/upcoming?clinicId=9
2025-09-22 21:25:28 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/17/upcoming?clinicId=9
2025-09-22 21:25:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:25:28 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/17/upcoming?clinicId=9
2025-09-22 21:25:28 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:25:28 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-22 21:25:28 [http-nio-8080-exec-7] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 9
2025-09-22 21:25:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:25:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-09-22 21:25:57 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /medical-records
2025-09-22 21:25:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:25:57 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /medical-records
2025-09-22 21:25:57 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.healthrecords.CreateMedicalRecordRequest); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:25:57 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.healthrecords.CreateMedicalRecordRequest); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:25:57 [http-nio-8080-exec-9] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: dfgfgdfd
2025-09-22 21:25:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:25:57 [http-nio-8080-exec-9] INFO  c.n.a.c.MedicalRecordController - مدير النظام ينشئ سجلاً طبياً في سياق العيادة. معرف العيادة المؤقت: 9, السبب: dfgfgdfd
2025-09-22 21:25:57 [http-nio-8080-exec-9] INFO  c.n.a.service.MedicalRecordService - إنشاء سجل طبي جديد للمريض 17 بواسطة الطبيب 18
2025-09-22 21:25:57 [http-nio-8080-exec-9] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: dfgfgdfd
2025-09-22 21:25:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Clinic x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            clinics c1_0 
        where
            c1_0.id=?
2025-09-22 21:25:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-22 21:25:57 [http-nio-8080-exec-9] INFO  c.n.a.service.ClinicContextService - System Admin Action Logged: User 2 performed CONTEXT_SWITCH on clinic 9 - dfgfgdfd
2025-09-22 21:25:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:25:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=? 
        and p1_0.clinic_id=?
2025-09-22 21:25:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.id = :id 
        AND u.clinic.id = :clinicId 
        AND u.role = :role */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.id=? 
            and u1_0.clinic_id=? 
            and u1_0.role=?
2025-09-22 21:25:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.id = :id 
        AND a.clinic.id = :clinicId */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.id=? 
            and a1_0.clinic_id=?
2025-09-22 21:25:57 [http-nio-8080-exec-9] ERROR c.n.a.c.MedicalRecordController - خطأ في إنشاء السجل الطبي: 
com.nakqeeb.amancare.exception.ResourceNotFoundException: الموعد غير موجود
	at com.nakqeeb.amancare.service.MedicalRecordService.lambda$createMedicalRecord$3(MedicalRecordService.java:88)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.nakqeeb.amancare.service.MedicalRecordService.createMedicalRecord(MedicalRecordService.java:88)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.service.MedicalRecordService$$SpringCGLIB$$0.createMedicalRecord(<generated>)
	at com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(MedicalRecordController.java:149)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.createMedicalRecord(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-09-22 21:27:05 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /medical-records
2025-09-22 21:27:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:27:05 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /medical-records
2025-09-22 21:27:05 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.healthrecords.CreateMedicalRecordRequest); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:27:05 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.healthrecords.CreateMedicalRecordRequest); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:27:05 [http-nio-8080-exec-10] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: dfgfgdfd
2025-09-22 21:27:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:27:05 [http-nio-8080-exec-10] INFO  c.n.a.c.MedicalRecordController - مدير النظام ينشئ سجلاً طبياً في سياق العيادة. معرف العيادة المؤقت: 9, السبب: dfgfgdfd
2025-09-22 21:27:05 [http-nio-8080-exec-10] INFO  c.n.a.service.MedicalRecordService - إنشاء سجل طبي جديد للمريض 17 بواسطة الطبيب 18
2025-09-22 21:27:05 [http-nio-8080-exec-10] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: dfgfgdfd
2025-09-22 21:27:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Clinic x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            clinics c1_0 
        where
            c1_0.id=?
2025-09-22 21:27:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-22 21:27:05 [http-nio-8080-exec-10] INFO  c.n.a.service.ClinicContextService - System Admin Action Logged: User 2 performed CONTEXT_SWITCH on clinic 9 - dfgfgdfd
2025-09-22 21:27:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:27:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=? 
        and p1_0.clinic_id=?
2025-09-22 21:27:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.id = :id 
        AND u.clinic.id = :clinicId 
        AND u.role = :role */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.id=? 
            and u1_0.clinic_id=? 
            and u1_0.role=?
2025-09-22 21:27:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.id = :id 
        AND a.clinic.id = :clinicId */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.id=? 
            and a1_0.clinic_id=?
2025-09-22 21:27:05 [http-nio-8080-exec-10] ERROR c.n.a.c.MedicalRecordController - خطأ في إنشاء السجل الطبي: 
com.nakqeeb.amancare.exception.ResourceNotFoundException: الموعد غير موجود
	at com.nakqeeb.amancare.service.MedicalRecordService.lambda$createMedicalRecord$3(MedicalRecordService.java:88)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.nakqeeb.amancare.service.MedicalRecordService.createMedicalRecord(MedicalRecordService.java:88)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.service.MedicalRecordService$$SpringCGLIB$$0.createMedicalRecord(<generated>)
	at com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(MedicalRecordController.java:149)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.createMedicalRecord(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-09-22 21:29:52 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 21:29:52 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 21:29:52 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:29:52 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 21:29:52 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 21:29:54 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 36856 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 21:29:54 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 21:29:54 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 21:29:54 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 21:29:55 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 21:29:55 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 45 ms. Found 15 JPA repository interfaces.
2025-09-22 21:29:55 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 21:29:55 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 21:29:55 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 21:29:55 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 21:29:55 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1093 ms
2025-09-22 21:29:55 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 21:29:55 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 21:29:55 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 21:29:56 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 21:29:56 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 21:29:56 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2cc86d13
2025-09-22 21:29:56 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 21:29:56 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 21:29:56 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 21:29:56 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 21:29:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 21:29:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 21:29:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 21:29:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 21:29:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:29:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:29:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 21:29:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 21:29:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:29:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 21:29:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:29:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 21:29:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 21:29:57 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 21:29:57 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 21:29:57 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:29:57 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 21:29:58 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 21:29:58 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 21:29:58 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 21:29:58 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 21:29:58 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 21:29:59 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 21:29:59 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 21:29:59 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 21:29:59 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 21:29:59 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 21:29:59 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.105 seconds (process running for 5.356)
2025-09-22 21:29:59 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 21:29:59 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 21:29:59 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 21:29:59 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 21:30:05 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 21:30:05 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 21:30:05 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-22 21:30:05 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /medical-records
2025-09-22 21:30:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:30:05 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /medical-records
2025-09-22 21:30:05 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.healthrecords.CreateMedicalRecordRequest); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:30:05 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.createMedicalRecord(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.healthrecords.CreateMedicalRecordRequest); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:30:05 [http-nio-8080-exec-1] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: dfgfgdfd
2025-09-22 21:30:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:30:05 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - مدير النظام ينشئ سجلاً طبياً في سياق العيادة. معرف العيادة المؤقت: 9, السبب: dfgfgdfd
2025-09-22 21:30:05 [http-nio-8080-exec-1] INFO  c.n.a.service.MedicalRecordService - إنشاء سجل طبي جديد للمريض 17 بواسطة الطبيب 18
2025-09-22 21:30:05 [http-nio-8080-exec-1] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: dfgfgdfd
2025-09-22 21:30:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Clinic x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            clinics c1_0 
        where
            c1_0.id=?
2025-09-22 21:30:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-22 21:30:05 [http-nio-8080-exec-1] INFO  c.n.a.service.ClinicContextService - System Admin Action Logged: User 2 performed CONTEXT_SWITCH on clinic 9 - dfgfgdfd
2025-09-22 21:30:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:30:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=? 
        and p1_0.clinic_id=?
2025-09-22 21:30:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.id = :id 
        AND u.clinic.id = :clinicId 
        AND u.role = :role */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.id=? 
            and u1_0.clinic_id=? 
            and u1_0.role=?
2025-09-22 21:30:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.id=? 
        and a1_0.clinic_id=?
2025-09-22 21:30:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-22 21:30:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=? 
        and mr1_0.clinic_id=?
2025-09-22 21:30:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.MedicalRecord */insert 
    into
        medical_records (appointment_id, chief_complaint, clinic_id, created_at, created_by, doctor_id, family_history, follow_up_date, follow_up_instructions, is_confidential, notes, past_medical_history, patient_id, physical_examination, present_illness, social_history, status, systemic_examination, treatment_plan, updated_at, updated_by, visit_date, visit_type, blood_pressure_diastolic, blood_pressure_systolic, blood_sugar, bmi, heart_rate, height, oxygen_saturation, pain_scale, respiratory_rate, temperature, weight) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-22 21:30:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.healthrecords.Diagnosis */insert 
    into
        medical_record_diagnoses (created_at, description, icd_code, is_primary, medical_record_id, notes, type) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-09-22 21:30:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.healthrecords.Prescription */insert 
    into
        medical_record_prescriptions (created_at, dosage, duration, end_date, frequency, generic_name, instructions, is_prn, medical_record_id, medication_name, quantity, refills, route, start_date) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-22 21:30:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-22 21:30:05 [http-nio-8080-exec-1] INFO  c.n.amancare.service.AuditLogService - Audit Log: User 2 performed CREATE on MEDICAL_RECORD #1 in clinic 1
2025-09-22 21:30:05 [http-nio-8080-exec-1] INFO  c.n.a.service.MedicalRecordService - تم إنشاء السجل الطبي 1 بنجاح
2025-09-22 21:30:30 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:30:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:30:30 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:30:30 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:30:30 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:30:30 [http-nio-8080-exec-3] INFO  c.n.a.c.MedicalRecordController - تصدير السجل الطبي 1 كـ PDF بواسطة المستخدم admin
2025-09-22 21:30:30 [http-nio-8080-exec-3] INFO  c.n.a.c.MedicalRecordController - مدير النظام يصدر السجل الطبي 1 من العيادة: 9
2025-09-22 21:30:30 [http-nio-8080-exec-3] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 1 بواسطة المستخدم admin
2025-09-22 21:30:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=?
2025-09-22 21:30:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:30:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:30:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:30:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-09-22 21:30:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:30:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-09-22 21:30:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-09-22 21:30:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:30:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-09-22 21:30:30 [http-nio-8080-exec-3] INFO  c.n.amancare.service.PdfService - إنشاء ملف PDF للسجل الطبي: 1
2025-09-22 21:30:30 [http-nio-8080-exec-3] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-3] Exception processing template "pdf/medical-record-template": An error happened during template parsing (template: "class path resource [templates/pdf/medical-record-template.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/pdf/medical-record-template.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1064)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1053)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:458)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "visitTypeStats.size()" (template: "pdf/medical-record-template" - line 980, col 42)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 129 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "visitTypeStats.size()" (template: "pdf/medical-record-template" - line 980, col 42)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 131 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1011E: Method call: Attempted to call method size() on null context object
	at org.springframework.expression.spel.ast.MethodReference.throwIfNotNullSafe(MethodReference.java:167)
	at org.springframework.expression.spel.ast.MethodReference.getValueRef(MethodReference.java:96)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:75)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:116)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:338)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 150 common frames omitted
2025-09-22 21:30:30 [http-nio-8080-exec-3] ERROR c.n.amancare.service.PdfService - خطأ في إنشاء ملف PDF للسجل الطبي 1: 
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/pdf/medical-record-template.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1064)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1053)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:458)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "visitTypeStats.size()" (template: "pdf/medical-record-template" - line 980, col 42)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 129 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "visitTypeStats.size()" (template: "pdf/medical-record-template" - line 980, col 42)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 131 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1011E: Method call: Attempted to call method size() on null context object
	at org.springframework.expression.spel.ast.MethodReference.throwIfNotNullSafe(MethodReference.java:167)
	at org.springframework.expression.spel.ast.MethodReference.getValueRef(MethodReference.java:96)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:75)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:116)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:338)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 150 common frames omitted
2025-09-22 21:30:30 [http-nio-8080-exec-3] ERROR c.n.a.c.MedicalRecordController - خطأ في تصدير السجل الطبي 1 كـ PDF: 
java.io.IOException: فشل في إنشاء ملف PDF للسجل الطبي
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:474)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/pdf/medical-record-template.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1064)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1053)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:458)
	... 123 common frames omitted
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "visitTypeStats.size()" (template: "pdf/medical-record-template" - line 980, col 42)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 129 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "visitTypeStats.size()" (template: "pdf/medical-record-template" - line 980, col 42)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 131 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1011E: Method call: Attempted to call method size() on null context object
	at org.springframework.expression.spel.ast.MethodReference.throwIfNotNullSafe(MethodReference.java:167)
	at org.springframework.expression.spel.ast.MethodReference.getValueRef(MethodReference.java:96)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:75)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:116)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:338)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 150 common frames omitted
2025-09-22 21:31:19 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:31:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:31:19 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:31:19 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:31:19 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:31:19 [http-nio-8080-exec-4] INFO  c.n.a.c.MedicalRecordController - تصدير السجل الطبي 1 كـ PDF بواسطة المستخدم admin
2025-09-22 21:31:19 [http-nio-8080-exec-4] INFO  c.n.a.c.MedicalRecordController - مدير النظام يصدر السجل الطبي 1 من العيادة: 9
2025-09-22 21:31:19 [http-nio-8080-exec-4] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 1 بواسطة المستخدم admin
2025-09-22 21:31:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=?
2025-09-22 21:31:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:31:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:31:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:31:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-09-22 21:31:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:31:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-09-22 21:31:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-09-22 21:31:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:31:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-09-22 21:31:19 [http-nio-8080-exec-4] INFO  c.n.amancare.service.PdfService - إنشاء ملف PDF للسجل الطبي: 1
2025-09-22 21:31:19 [http-nio-8080-exec-4] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-4] Exception processing template "pdf/medical-record-template": An error happened during template parsing (template: "class path resource [templates/pdf/medical-record-template.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/pdf/medical-record-template.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1064)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1053)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:458)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "visitTypeStats.size()" (template: "pdf/medical-record-template" - line 980, col 42)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 129 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "visitTypeStats.size()" (template: "pdf/medical-record-template" - line 980, col 42)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 131 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1011E: Method call: Attempted to call method size() on null context object
	at org.springframework.expression.spel.ast.MethodReference.throwIfNotNullSafe(MethodReference.java:167)
	at org.springframework.expression.spel.ast.MethodReference.getValueRef(MethodReference.java:96)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:75)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:116)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:338)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 150 common frames omitted
2025-09-22 21:31:19 [http-nio-8080-exec-4] ERROR c.n.amancare.service.PdfService - خطأ في إنشاء ملف PDF للسجل الطبي 1: 
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/pdf/medical-record-template.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1064)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1053)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:458)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "visitTypeStats.size()" (template: "pdf/medical-record-template" - line 980, col 42)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 129 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "visitTypeStats.size()" (template: "pdf/medical-record-template" - line 980, col 42)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 131 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1011E: Method call: Attempted to call method size() on null context object
	at org.springframework.expression.spel.ast.MethodReference.throwIfNotNullSafe(MethodReference.java:167)
	at org.springframework.expression.spel.ast.MethodReference.getValueRef(MethodReference.java:96)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:75)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:116)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:338)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 150 common frames omitted
2025-09-22 21:31:19 [http-nio-8080-exec-4] ERROR c.n.a.c.MedicalRecordController - خطأ في تصدير السجل الطبي 1 كـ PDF: 
java.io.IOException: فشل في إنشاء ملف PDF للسجل الطبي
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:474)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/pdf/medical-record-template.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1064)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1053)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:458)
	... 123 common frames omitted
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "visitTypeStats.size()" (template: "pdf/medical-record-template" - line 980, col 42)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 129 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "visitTypeStats.size()" (template: "pdf/medical-record-template" - line 980, col 42)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 131 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1011E: Method call: Attempted to call method size() on null context object
	at org.springframework.expression.spel.ast.MethodReference.throwIfNotNullSafe(MethodReference.java:167)
	at org.springframework.expression.spel.ast.MethodReference.getValueRef(MethodReference.java:96)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:75)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:116)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:338)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 150 common frames omitted
2025-09-22 21:38:01 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 21:38:01 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 21:38:01 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:38:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 21:38:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 21:38:03 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 38875 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 21:38:03 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 21:38:03 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 21:38:03 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 21:38:04 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 21:38:04 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52 ms. Found 15 JPA repository interfaces.
2025-09-22 21:38:04 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 21:38:04 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 21:38:04 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 21:38:04 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 21:38:04 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1215 ms
2025-09-22 21:38:04 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 21:38:04 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 21:38:04 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 21:38:05 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 21:38:05 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 21:38:05 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@c1bb21e
2025-09-22 21:38:05 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 21:38:05 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 21:38:05 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 21:38:06 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 21:38:06 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 21:38:06 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 21:38:06 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 21:38:06 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 21:38:06 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:38:06 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:38:06 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 21:38:06 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 21:38:06 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:38:06 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 21:38:06 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:38:06 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 21:38:06 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 21:38:06 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 21:38:06 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 21:38:06 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:38:06 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 21:38:07 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 21:38:07 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 21:38:07 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 21:38:08 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 21:38:08 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 21:38:08 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 21:38:08 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 21:38:08 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 21:38:08 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 21:38:08 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 21:38:08 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 6.171 seconds (process running for 6.461)
2025-09-22 21:38:08 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 21:38:08 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 21:38:08 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 21:38:08 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 21:38:14 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 21:38:14 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 21:38:14 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-22 21:38:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:38:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:38:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:38:14 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:38:14 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:38:14 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - تصدير السجل الطبي 1 كـ PDF بواسطة المستخدم admin
2025-09-22 21:38:14 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - مدير النظام يصدر السجل الطبي 1 من العيادة: 9
2025-09-22 21:38:14 [http-nio-8080-exec-1] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 1 بواسطة المستخدم admin
2025-09-22 21:38:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=?
2025-09-22 21:38:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:38:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:38:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:38:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-09-22 21:38:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:38:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-09-22 21:38:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-09-22 21:38:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:38:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-09-22 21:38:14 [http-nio-8080-exec-1] INFO  c.n.amancare.service.PdfService - إنشاء ملف PDF للسجل الطبي: 1
2025-09-22 21:38:14 [http-nio-8080-exec-1] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-1] Exception processing template "pdf/medical-record-template": An error happened during template parsing (template: "class path resource [templates/pdf/medical-record-template.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/pdf/medical-record-template.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1064)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1053)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:458)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "${visitTypeStats != null ? visitTypeStats.size() : 0}" (template: "pdf/medical-record-template" - line 980, col 42)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 129 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "${visitTypeStats != null ? visitTypeStats.size() : 0}" (template: "pdf/medical-record-template" - line 980, col 42)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 131 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: Expression [${visitTypeStats != null ? visitTypeStats.size() : 0}] @1: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:146)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:63)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:34)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:59)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:48)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.getExpression(SPELVariableExpressionEvaluator.java:373)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.obtainComputedSpelExpression(SPELVariableExpressionEvaluator.java:321)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:182)
	... 150 common frames omitted
2025-09-22 21:38:14 [http-nio-8080-exec-1] ERROR c.n.amancare.service.PdfService - خطأ في إنشاء ملف PDF للسجل الطبي 1: 
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/pdf/medical-record-template.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1064)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1053)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:458)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "${visitTypeStats != null ? visitTypeStats.size() : 0}" (template: "pdf/medical-record-template" - line 980, col 42)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 129 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "${visitTypeStats != null ? visitTypeStats.size() : 0}" (template: "pdf/medical-record-template" - line 980, col 42)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 131 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: Expression [${visitTypeStats != null ? visitTypeStats.size() : 0}] @1: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:146)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:63)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:34)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:59)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:48)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.getExpression(SPELVariableExpressionEvaluator.java:373)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.obtainComputedSpelExpression(SPELVariableExpressionEvaluator.java:321)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:182)
	... 150 common frames omitted
2025-09-22 21:38:14 [http-nio-8080-exec-1] ERROR c.n.a.c.MedicalRecordController - خطأ في تصدير السجل الطبي 1 كـ PDF: 
java.io.IOException: فشل في إنشاء ملف PDF للسجل الطبي
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:474)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/pdf/medical-record-template.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1064)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1053)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:458)
	... 123 common frames omitted
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "${visitTypeStats != null ? visitTypeStats.size() : 0}" (template: "pdf/medical-record-template" - line 980, col 42)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 129 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "${visitTypeStats != null ? visitTypeStats.size() : 0}" (template: "pdf/medical-record-template" - line 980, col 42)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 131 common frames omitted
Caused by: org.springframework.expression.spel.SpelParseException: Expression [${visitTypeStats != null ? visitTypeStats.size() : 0}] @1: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:146)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:63)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:34)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:59)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:48)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.getExpression(SPELVariableExpressionEvaluator.java:373)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.obtainComputedSpelExpression(SPELVariableExpressionEvaluator.java:321)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:182)
	... 150 common frames omitted
2025-09-22 21:41:49 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 21:41:49 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 21:41:49 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:41:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 21:41:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 21:41:50 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 39808 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 21:41:50 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 21:41:50 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 21:41:50 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 21:41:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 21:41:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58 ms. Found 15 JPA repository interfaces.
2025-09-22 21:41:51 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 21:41:51 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 21:41:51 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 21:41:51 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 21:41:51 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1338 ms
2025-09-22 21:41:51 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 21:41:52 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 21:41:52 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 21:41:52 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 21:41:52 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 21:41:52 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5b7ba9b
2025-09-22 21:41:52 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 21:41:52 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 21:41:52 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 21:41:53 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 21:41:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 21:41:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 21:41:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 21:41:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 21:41:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:41:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:41:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 21:41:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 21:41:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:41:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 21:41:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:41:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 21:41:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 21:41:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 21:41:53 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 21:41:53 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:41:53 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 21:41:54 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 21:41:54 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 21:41:54 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 21:41:55 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 21:41:55 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 21:41:55 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 21:41:55 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 21:41:55 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 21:41:55 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 21:41:55 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 21:41:55 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.895 seconds (process running for 6.158)
2025-09-22 21:41:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 21:41:55 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 21:41:55 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 21:41:55 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 21:42:03 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 21:42:03 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 21:42:03 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-22 21:42:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:42:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:42:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:42:03 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:42:03 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:42:03 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - تصدير السجل الطبي 1 كـ PDF بواسطة المستخدم admin
2025-09-22 21:42:03 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - مدير النظام يصدر السجل الطبي 1 من العيادة: 9
2025-09-22 21:42:03 [http-nio-8080-exec-1] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 1 بواسطة المستخدم admin
2025-09-22 21:42:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=?
2025-09-22 21:42:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:42:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:42:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:42:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-09-22 21:42:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:42:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-09-22 21:42:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-09-22 21:42:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:42:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-09-22 21:42:03 [http-nio-8080-exec-1] INFO  c.n.amancare.service.PdfService - إنشاء ملف PDF للسجل الطبي: 1
2025-09-22 21:42:03 [http-nio-8080-exec-1] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-1] Exception processing template "pdf/medical-record-template": An error happened during template parsing (template: "class path resource [templates/pdf/medical-record-template.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/pdf/medical-record-template.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1064)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1053)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:458)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "doctorStats.size()" (template: "pdf/medical-record-template" - line 984, col 42)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 129 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "doctorStats.size()" (template: "pdf/medical-record-template" - line 984, col 42)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 131 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1011E: Method call: Attempted to call method size() on null context object
	at org.springframework.expression.spel.ast.MethodReference.throwIfNotNullSafe(MethodReference.java:167)
	at org.springframework.expression.spel.ast.MethodReference.getValueRef(MethodReference.java:96)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:75)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:116)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:338)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 150 common frames omitted
2025-09-22 21:42:03 [http-nio-8080-exec-1] ERROR c.n.amancare.service.PdfService - خطأ في إنشاء ملف PDF للسجل الطبي 1: 
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/pdf/medical-record-template.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1064)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1053)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:458)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "doctorStats.size()" (template: "pdf/medical-record-template" - line 984, col 42)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 129 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "doctorStats.size()" (template: "pdf/medical-record-template" - line 984, col 42)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 131 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1011E: Method call: Attempted to call method size() on null context object
	at org.springframework.expression.spel.ast.MethodReference.throwIfNotNullSafe(MethodReference.java:167)
	at org.springframework.expression.spel.ast.MethodReference.getValueRef(MethodReference.java:96)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:75)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:116)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:338)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 150 common frames omitted
2025-09-22 21:42:03 [http-nio-8080-exec-1] ERROR c.n.a.c.MedicalRecordController - خطأ في تصدير السجل الطبي 1 كـ PDF: 
java.io.IOException: فشل في إنشاء ملف PDF للسجل الطبي
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:474)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/pdf/medical-record-template.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1064)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1053)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:458)
	... 123 common frames omitted
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "doctorStats.size()" (template: "pdf/medical-record-template" - line 984, col 42)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 129 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "doctorStats.size()" (template: "pdf/medical-record-template" - line 984, col 42)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 131 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1011E: Method call: Attempted to call method size() on null context object
	at org.springframework.expression.spel.ast.MethodReference.throwIfNotNullSafe(MethodReference.java:167)
	at org.springframework.expression.spel.ast.MethodReference.getValueRef(MethodReference.java:96)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:75)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:116)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:338)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 150 common frames omitted
2025-09-22 21:44:18 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 21:44:18 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 21:44:18 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:44:18 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 21:44:18 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 21:44:20 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 40411 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 21:44:20 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 21:44:20 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 21:44:20 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 21:44:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 21:44:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 53 ms. Found 15 JPA repository interfaces.
2025-09-22 21:44:21 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 21:44:21 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 21:44:21 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 21:44:21 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 21:44:21 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1245 ms
2025-09-22 21:44:21 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 21:44:21 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 21:44:21 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 21:44:21 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 21:44:21 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 21:44:22 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4388f305
2025-09-22 21:44:22 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 21:44:22 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 21:44:22 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 21:44:22 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 21:44:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 21:44:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 21:44:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 21:44:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 21:44:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:44:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:44:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 21:44:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 21:44:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:44:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 21:44:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:44:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 21:44:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 21:44:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 21:44:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 21:44:23 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:44:23 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 21:44:24 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 21:44:24 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 21:44:24 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 21:44:24 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 21:44:24 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 21:44:25 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 21:44:25 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 21:44:25 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 21:44:25 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 21:44:25 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 21:44:25 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.759 seconds (process running for 6.041)
2025-09-22 21:44:25 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 21:44:25 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 21:44:25 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 21:44:25 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 21:44:51 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 21:44:51 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 21:44:51 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:44:51 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 21:44:51 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 21:44:52 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 40559 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 21:44:52 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 21:44:52 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 21:44:52 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 21:44:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 21:44:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 15 JPA repository interfaces.
2025-09-22 21:44:54 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 21:44:54 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 21:44:54 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 21:44:54 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 21:44:54 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1186 ms
2025-09-22 21:44:54 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 21:44:54 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 21:44:54 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 21:44:54 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 21:44:54 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 21:44:54 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@31ca8030
2025-09-22 21:44:54 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 21:44:54 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 21:44:54 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 21:44:55 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 21:44:55 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 21:44:55 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 21:44:55 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 21:44:55 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 21:44:55 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:44:55 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:44:55 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 21:44:55 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 21:44:55 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:44:55 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 21:44:55 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:44:55 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 21:44:55 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 21:44:55 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 21:44:55 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 21:44:55 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:44:55 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 21:44:56 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 21:44:56 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 21:44:56 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 21:44:57 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 21:44:57 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 21:44:58 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 21:44:58 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 21:44:58 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 21:44:58 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 21:44:58 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 21:44:58 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.978 seconds (process running for 6.24)
2025-09-22 21:44:58 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 21:44:58 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 21:44:58 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 21:44:58 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 21:45:05 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 21:45:05 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 21:45:05 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-22 21:45:05 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:45:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:45:05 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:45:05 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:45:05 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:45:05 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - تصدير السجل الطبي 1 كـ PDF بواسطة المستخدم admin
2025-09-22 21:45:05 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - مدير النظام يصدر السجل الطبي 1 من العيادة: 9
2025-09-22 21:45:05 [http-nio-8080-exec-1] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 1 بواسطة المستخدم admin
2025-09-22 21:45:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=?
2025-09-22 21:45:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:45:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:45:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:45:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-09-22 21:45:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:45:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-09-22 21:45:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-09-22 21:45:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:45:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-09-22 21:45:05 [http-nio-8080-exec-1] INFO  c.n.amancare.service.PdfService - إنشاء ملف PDF للسجل الطبي: 1
2025-09-22 21:45:06 [http-nio-8080-exec-1] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-1] Exception processing template "pdf/medical-record-template": An error happened during template parsing (template: "class path resource [templates/pdf/medical-record-template.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/pdf/medical-record-template.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1064)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1053)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:458)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "doctorStats.size() ?: 0" (template: "pdf/medical-record-template" - line 984, col 42)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 129 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "doctorStats.size() ?: 0" (template: "pdf/medical-record-template" - line 984, col 42)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 131 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1011E: Method call: Attempted to call method size() on null context object
	at org.springframework.expression.spel.ast.MethodReference.throwIfNotNullSafe(MethodReference.java:167)
	at org.springframework.expression.spel.ast.MethodReference.getValueRef(MethodReference.java:96)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:75)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.Elvis.getValueInternal(Elvis.java:54)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:116)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:338)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 150 common frames omitted
2025-09-22 21:45:06 [http-nio-8080-exec-1] ERROR c.n.amancare.service.PdfService - خطأ في إنشاء ملف PDF للسجل الطبي 1: 
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/pdf/medical-record-template.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1064)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1053)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:458)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "doctorStats.size() ?: 0" (template: "pdf/medical-record-template" - line 984, col 42)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 129 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "doctorStats.size() ?: 0" (template: "pdf/medical-record-template" - line 984, col 42)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 131 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1011E: Method call: Attempted to call method size() on null context object
	at org.springframework.expression.spel.ast.MethodReference.throwIfNotNullSafe(MethodReference.java:167)
	at org.springframework.expression.spel.ast.MethodReference.getValueRef(MethodReference.java:96)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:75)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.Elvis.getValueInternal(Elvis.java:54)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:116)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:338)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 150 common frames omitted
2025-09-22 21:45:06 [http-nio-8080-exec-1] ERROR c.n.a.c.MedicalRecordController - خطأ في تصدير السجل الطبي 1 كـ PDF: 
java.io.IOException: فشل في إنشاء ملف PDF للسجل الطبي
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:474)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/pdf/medical-record-template.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1064)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1053)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:458)
	... 123 common frames omitted
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "doctorStats.size() ?: 0" (template: "pdf/medical-record-template" - line 984, col 42)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 129 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "doctorStats.size() ?: 0" (template: "pdf/medical-record-template" - line 984, col 42)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 131 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1011E: Method call: Attempted to call method size() on null context object
	at org.springframework.expression.spel.ast.MethodReference.throwIfNotNullSafe(MethodReference.java:167)
	at org.springframework.expression.spel.ast.MethodReference.getValueRef(MethodReference.java:96)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:75)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.Elvis.getValueInternal(Elvis.java:54)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:116)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:338)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 150 common frames omitted
2025-09-22 21:47:05 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 21:47:05 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 21:47:05 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:47:05 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 21:47:05 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 21:47:07 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 41135 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 21:47:07 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 21:47:07 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 21:47:07 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 21:47:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 21:47:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 53 ms. Found 15 JPA repository interfaces.
2025-09-22 21:47:08 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 21:47:08 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 21:47:08 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 21:47:08 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 21:47:08 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1379 ms
2025-09-22 21:47:08 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 21:47:08 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 21:47:08 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 21:47:08 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 21:47:08 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 21:47:08 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45f2f752
2025-09-22 21:47:08 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 21:47:08 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 21:47:08 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 21:47:09 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 21:47:09 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 21:47:09 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 21:47:09 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 21:47:09 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 21:47:09 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:47:09 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:47:09 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 21:47:09 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 21:47:09 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:47:09 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 21:47:09 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:47:09 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 21:47:09 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 21:47:09 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 21:47:09 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 21:47:09 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:47:10 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 21:47:11 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 21:47:11 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 21:47:11 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 21:47:11 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 21:47:11 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 21:47:12 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 21:47:12 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 21:47:12 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 21:47:12 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 21:47:12 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 21:47:12 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 6.165 seconds (process running for 6.439)
2025-09-22 21:47:12 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 21:47:12 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 21:47:12 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 21:47:12 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 21:47:18 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 21:47:18 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 21:47:18 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-22 21:47:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:47:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:47:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:47:18 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:47:18 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:47:18 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - تصدير السجل الطبي 1 كـ PDF بواسطة المستخدم admin
2025-09-22 21:47:18 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - مدير النظام يصدر السجل الطبي 1 من العيادة: 9
2025-09-22 21:47:18 [http-nio-8080-exec-1] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 1 بواسطة المستخدم admin
2025-09-22 21:47:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=?
2025-09-22 21:47:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:47:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:47:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:47:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-09-22 21:47:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:47:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-09-22 21:47:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-09-22 21:47:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:47:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-09-22 21:47:18 [http-nio-8080-exec-1] INFO  c.n.amancare.service.PdfService - إنشاء ملف PDF للسجل الطبي: 1
2025-09-22 21:47:18 [http-nio-8080-exec-1] ERROR c.n.amancare.service.PdfService - خطأ في إنشاء ملف PDF للسجل الطبي 1: 
com.openhtmltopdf.util.XRRuntimeException: Can't load the XML resource (using TRaX transformer). org.xml.sax.SAXParseException; lineNumber: 266; columnNumber: 3; The element type "meta" must be terminated by the matching end-tag "</meta>".
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:254)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.access$100(XMLResource.java:145)
	at com.openhtmltopdf.resource.XMLResource.load(XMLResource.java:71)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.setDocumentFromStringP(PdfBoxRenderer.java:316)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.<init>(PdfBoxRenderer.java:256)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.buildPdfRenderer(PdfRendererBuilder.java:69)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.run(PdfRendererBuilder.java:44)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:467)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: javax.xml.transform.TransformerException: org.xml.sax.SAXParseException; lineNumber: 266; columnNumber: 3; The element type "meta" must be terminated by the matching end-tag "</meta>".
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:793)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:395)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:251)
	... 130 common frames omitted
Caused by: org.xml.sax.SAXParseException: The element type "meta" must be terminated by the matching end-tag "</meta>".
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1252)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:694)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:781)
	... 132 common frames omitted
2025-09-22 21:47:18 [http-nio-8080-exec-1] ERROR c.n.a.c.MedicalRecordController - خطأ في تصدير السجل الطبي 1 كـ PDF: 
java.io.IOException: فشل في إنشاء ملف PDF للسجل الطبي
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:474)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: com.openhtmltopdf.util.XRRuntimeException: Can't load the XML resource (using TRaX transformer). org.xml.sax.SAXParseException; lineNumber: 266; columnNumber: 3; The element type "meta" must be terminated by the matching end-tag "</meta>".
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:254)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.access$100(XMLResource.java:145)
	at com.openhtmltopdf.resource.XMLResource.load(XMLResource.java:71)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.setDocumentFromStringP(PdfBoxRenderer.java:316)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.<init>(PdfBoxRenderer.java:256)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.buildPdfRenderer(PdfRendererBuilder.java:69)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.run(PdfRendererBuilder.java:44)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:467)
	... 123 common frames omitted
Caused by: javax.xml.transform.TransformerException: org.xml.sax.SAXParseException; lineNumber: 266; columnNumber: 3; The element type "meta" must be terminated by the matching end-tag "</meta>".
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:793)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:395)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:251)
	... 130 common frames omitted
Caused by: org.xml.sax.SAXParseException: The element type "meta" must be terminated by the matching end-tag "</meta>".
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1252)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:694)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:781)
	... 132 common frames omitted
2025-09-22 21:48:12 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 21:48:12 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 21:48:12 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:48:12 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 21:48:12 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 21:48:13 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 41426 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 21:48:13 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 21:48:13 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 21:48:13 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 21:48:14 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 21:48:14 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52 ms. Found 15 JPA repository interfaces.
2025-09-22 21:48:14 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 21:48:14 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 21:48:14 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 21:48:14 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 21:48:14 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1286 ms
2025-09-22 21:48:14 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 21:48:14 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 21:48:14 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 21:48:15 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 21:48:15 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 21:48:15 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5b7ba9b
2025-09-22 21:48:15 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 21:48:15 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 21:48:15 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 21:48:16 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 21:48:16 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 21:48:16 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 21:48:16 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 21:48:16 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 21:48:16 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:48:16 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:48:16 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 21:48:16 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 21:48:16 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:48:16 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 21:48:16 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:48:16 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 21:48:16 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 21:48:16 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 21:48:16 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 21:48:16 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:48:16 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 21:48:17 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 21:48:17 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 21:48:17 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 21:48:18 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 21:48:18 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 21:48:18 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 21:48:18 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 21:48:18 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 21:48:18 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 21:48:18 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 21:48:18 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.779 seconds (process running for 6.073)
2025-09-22 21:48:18 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 21:48:18 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 21:48:18 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 21:48:18 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 21:48:19 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 21:48:19 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 21:48:19 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-22 21:48:19 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:48:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:48:19 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:48:19 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:48:19 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:48:19 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - تصدير السجل الطبي 1 كـ PDF بواسطة المستخدم admin
2025-09-22 21:48:19 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - مدير النظام يصدر السجل الطبي 1 من العيادة: 9
2025-09-22 21:48:19 [http-nio-8080-exec-1] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 1 بواسطة المستخدم admin
2025-09-22 21:48:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=?
2025-09-22 21:48:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:48:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:48:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:48:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-09-22 21:48:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:48:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-09-22 21:48:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-09-22 21:48:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:48:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-09-22 21:48:19 [http-nio-8080-exec-1] INFO  c.n.amancare.service.PdfService - إنشاء ملف PDF للسجل الطبي: 1
2025-09-22 21:48:20 [http-nio-8080-exec-1] ERROR c.n.amancare.service.PdfService - خطأ في إنشاء ملف PDF للسجل الطبي 1: 
com.openhtmltopdf.util.XRRuntimeException: Can't load the XML resource (using TRaX transformer). org.xml.sax.SAXParseException; lineNumber: 419; columnNumber: 7; The element type "br" must be terminated by the matching end-tag "</br>".
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:254)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.access$100(XMLResource.java:145)
	at com.openhtmltopdf.resource.XMLResource.load(XMLResource.java:71)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.setDocumentFromStringP(PdfBoxRenderer.java:316)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.<init>(PdfBoxRenderer.java:256)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.buildPdfRenderer(PdfRendererBuilder.java:69)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.run(PdfRendererBuilder.java:44)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:467)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: javax.xml.transform.TransformerException: org.xml.sax.SAXParseException; lineNumber: 419; columnNumber: 7; The element type "br" must be terminated by the matching end-tag "</br>".
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:793)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:395)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:251)
	... 130 common frames omitted
Caused by: org.xml.sax.SAXParseException: The element type "br" must be terminated by the matching end-tag "</br>".
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1252)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:694)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:781)
	... 132 common frames omitted
2025-09-22 21:48:20 [http-nio-8080-exec-1] ERROR c.n.a.c.MedicalRecordController - خطأ في تصدير السجل الطبي 1 كـ PDF: 
java.io.IOException: فشل في إنشاء ملف PDF للسجل الطبي
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:474)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: com.openhtmltopdf.util.XRRuntimeException: Can't load the XML resource (using TRaX transformer). org.xml.sax.SAXParseException; lineNumber: 419; columnNumber: 7; The element type "br" must be terminated by the matching end-tag "</br>".
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:254)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.access$100(XMLResource.java:145)
	at com.openhtmltopdf.resource.XMLResource.load(XMLResource.java:71)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.setDocumentFromStringP(PdfBoxRenderer.java:316)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.<init>(PdfBoxRenderer.java:256)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.buildPdfRenderer(PdfRendererBuilder.java:69)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.run(PdfRendererBuilder.java:44)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:467)
	... 123 common frames omitted
Caused by: javax.xml.transform.TransformerException: org.xml.sax.SAXParseException; lineNumber: 419; columnNumber: 7; The element type "br" must be terminated by the matching end-tag "</br>".
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:793)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:395)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:251)
	... 130 common frames omitted
Caused by: org.xml.sax.SAXParseException: The element type "br" must be terminated by the matching end-tag "</br>".
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1252)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:694)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:781)
	... 132 common frames omitted
2025-09-22 21:49:08 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 21:49:08 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 21:49:08 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:49:08 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 21:49:08 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 21:49:09 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 41664 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 21:49:09 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 21:49:09 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 21:49:09 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 21:49:10 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 21:49:10 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 15 JPA repository interfaces.
2025-09-22 21:49:10 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 21:49:10 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 21:49:10 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 21:49:10 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 21:49:10 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1196 ms
2025-09-22 21:49:10 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 21:49:10 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 21:49:10 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 21:49:11 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 21:49:11 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 21:49:11 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@556116d2
2025-09-22 21:49:11 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 21:49:11 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 21:49:11 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 21:49:12 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 21:49:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 21:49:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 21:49:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 21:49:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 21:49:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:49:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:49:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 21:49:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 21:49:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:49:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 21:49:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:49:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 21:49:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 21:49:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 21:49:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 21:49:12 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:49:12 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 21:49:13 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 21:49:13 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 21:49:13 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 21:49:13 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 21:49:13 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 21:49:14 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 21:49:14 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 21:49:14 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 21:49:14 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 21:49:14 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 21:49:14 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.477 seconds (process running for 5.727)
2025-09-22 21:49:14 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 21:49:14 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 21:49:14 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 21:49:14 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 21:49:33 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 21:49:33 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 21:49:33 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-09-22 21:49:33 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:49:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:49:33 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:49:33 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:49:33 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:49:33 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - تصدير السجل الطبي 1 كـ PDF بواسطة المستخدم admin
2025-09-22 21:49:33 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - مدير النظام يصدر السجل الطبي 1 من العيادة: 9
2025-09-22 21:49:33 [http-nio-8080-exec-1] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 1 بواسطة المستخدم admin
2025-09-22 21:49:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=?
2025-09-22 21:49:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:49:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:49:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:49:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-09-22 21:49:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:49:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-09-22 21:49:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-09-22 21:49:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:49:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-09-22 21:49:33 [http-nio-8080-exec-1] INFO  c.n.amancare.service.PdfService - إنشاء ملف PDF للسجل الطبي: 1
2025-09-22 21:49:34 [http-nio-8080-exec-1] ERROR c.n.amancare.service.PdfService - خطأ في إنشاء ملف PDF للسجل الطبي 1: 
com.openhtmltopdf.util.XRRuntimeException: Can't load the XML resource (using TRaX transformer). org.xml.sax.SAXParseException; lineNumber: 439; columnNumber: 3; Comment must start with "<!--".
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:254)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.access$100(XMLResource.java:145)
	at com.openhtmltopdf.resource.XMLResource.load(XMLResource.java:71)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.setDocumentFromStringP(PdfBoxRenderer.java:316)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.<init>(PdfBoxRenderer.java:256)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.buildPdfRenderer(PdfRendererBuilder.java:69)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.run(PdfRendererBuilder.java:44)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:467)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: javax.xml.transform.TransformerException: org.xml.sax.SAXParseException; lineNumber: 439; columnNumber: 3; Comment must start with "<!--".
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:793)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:395)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:251)
	... 130 common frames omitted
Caused by: org.xml.sax.SAXParseException: Comment must start with "<!--".
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1252)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:694)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:781)
	... 132 common frames omitted
2025-09-22 21:49:34 [http-nio-8080-exec-1] ERROR c.n.a.c.MedicalRecordController - خطأ في تصدير السجل الطبي 1 كـ PDF: 
java.io.IOException: فشل في إنشاء ملف PDF للسجل الطبي
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:474)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: com.openhtmltopdf.util.XRRuntimeException: Can't load the XML resource (using TRaX transformer). org.xml.sax.SAXParseException; lineNumber: 439; columnNumber: 3; Comment must start with "<!--".
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:254)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.access$100(XMLResource.java:145)
	at com.openhtmltopdf.resource.XMLResource.load(XMLResource.java:71)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.setDocumentFromStringP(PdfBoxRenderer.java:316)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.<init>(PdfBoxRenderer.java:256)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.buildPdfRenderer(PdfRendererBuilder.java:69)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.run(PdfRendererBuilder.java:44)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:467)
	... 123 common frames omitted
Caused by: javax.xml.transform.TransformerException: org.xml.sax.SAXParseException; lineNumber: 439; columnNumber: 3; Comment must start with "<!--".
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:793)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:395)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:251)
	... 130 common frames omitted
Caused by: org.xml.sax.SAXParseException: Comment must start with "<!--".
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1252)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:694)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:781)
	... 132 common frames omitted
2025-09-22 21:51:20 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 21:51:20 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 21:51:20 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:51:20 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 21:51:20 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 21:51:22 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 42212 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 21:51:22 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 21:51:22 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 21:51:22 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 21:51:22 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 21:51:22 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 15 JPA repository interfaces.
2025-09-22 21:51:23 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 21:51:23 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 21:51:23 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 21:51:23 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 21:51:23 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1178 ms
2025-09-22 21:51:23 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 21:51:23 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 21:51:23 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 21:51:23 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 21:51:23 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 21:51:23 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@58dba5ab
2025-09-22 21:51:23 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 21:51:23 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 21:51:23 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 21:51:24 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 21:51:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 21:51:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 21:51:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 21:51:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 21:51:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:51:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:51:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 21:51:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 21:51:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:51:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 21:51:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:51:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 21:51:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 21:51:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 21:51:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 21:51:24 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:51:24 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 21:51:25 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 21:51:25 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 21:51:25 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 21:51:26 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 21:51:26 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 21:51:26 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 21:51:26 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 21:51:27 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 21:51:27 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 21:51:27 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 21:51:27 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.784 seconds (process running for 6.051)
2025-09-22 21:51:27 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 21:51:27 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 21:51:27 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 21:51:27 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 21:51:34 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 21:51:34 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 21:51:34 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-22 21:51:34 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:51:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:51:34 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:51:34 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:51:34 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:51:34 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - تصدير السجل الطبي 1 كـ PDF بواسطة المستخدم admin
2025-09-22 21:51:34 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - مدير النظام يصدر السجل الطبي 1 من العيادة: 9
2025-09-22 21:51:34 [http-nio-8080-exec-1] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 1 بواسطة المستخدم admin
2025-09-22 21:51:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=?
2025-09-22 21:51:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:51:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:51:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:51:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-09-22 21:51:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:51:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-09-22 21:51:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-09-22 21:51:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:51:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-09-22 21:51:34 [http-nio-8080-exec-1] INFO  c.n.amancare.service.PdfService - إنشاء ملف PDF للسجل الطبي: 1
2025-09-22 21:51:35 [http-nio-8080-exec-1] ERROR c.n.amancare.service.PdfService - خطأ في إنشاء ملف PDF للسجل الطبي 1: 
com.openhtmltopdf.util.XRRuntimeException: Can't load the XML resource (using TRaX transformer). org.xml.sax.SAXParseException; lineNumber: 439; columnNumber: 3; Comment must start with "<!--".
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:254)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.access$100(XMLResource.java:145)
	at com.openhtmltopdf.resource.XMLResource.load(XMLResource.java:71)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.setDocumentFromStringP(PdfBoxRenderer.java:316)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.<init>(PdfBoxRenderer.java:256)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.buildPdfRenderer(PdfRendererBuilder.java:69)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.run(PdfRendererBuilder.java:44)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:467)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: javax.xml.transform.TransformerException: org.xml.sax.SAXParseException; lineNumber: 439; columnNumber: 3; Comment must start with "<!--".
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:793)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:395)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:251)
	... 130 common frames omitted
Caused by: org.xml.sax.SAXParseException: Comment must start with "<!--".
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1252)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:694)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:781)
	... 132 common frames omitted
2025-09-22 21:51:35 [http-nio-8080-exec-1] ERROR c.n.a.c.MedicalRecordController - خطأ في تصدير السجل الطبي 1 كـ PDF: 
java.io.IOException: فشل في إنشاء ملف PDF للسجل الطبي
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:474)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: com.openhtmltopdf.util.XRRuntimeException: Can't load the XML resource (using TRaX transformer). org.xml.sax.SAXParseException; lineNumber: 439; columnNumber: 3; Comment must start with "<!--".
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:254)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.access$100(XMLResource.java:145)
	at com.openhtmltopdf.resource.XMLResource.load(XMLResource.java:71)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.setDocumentFromStringP(PdfBoxRenderer.java:316)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.<init>(PdfBoxRenderer.java:256)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.buildPdfRenderer(PdfRendererBuilder.java:69)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.run(PdfRendererBuilder.java:44)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:467)
	... 123 common frames omitted
Caused by: javax.xml.transform.TransformerException: org.xml.sax.SAXParseException; lineNumber: 439; columnNumber: 3; Comment must start with "<!--".
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:793)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:395)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:251)
	... 130 common frames omitted
Caused by: org.xml.sax.SAXParseException: Comment must start with "<!--".
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1252)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:694)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:781)
	... 132 common frames omitted
2025-09-22 21:54:18 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 21:54:18 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 21:54:18 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:54:18 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 21:54:18 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 21:54:19 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 42970 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 21:54:19 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 21:54:20 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 21:54:20 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 21:54:20 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 21:54:20 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49 ms. Found 15 JPA repository interfaces.
2025-09-22 21:54:21 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 21:54:21 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 21:54:21 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 21:54:21 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 21:54:21 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1214 ms
2025-09-22 21:54:21 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 21:54:21 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 21:54:21 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 21:54:21 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 21:54:21 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 21:54:21 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@38a648eb
2025-09-22 21:54:21 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 21:54:21 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 21:54:21 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 21:54:22 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 21:54:22 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 21:54:22 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 21:54:22 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 21:54:22 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 21:54:22 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:54:22 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:54:22 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 21:54:22 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 21:54:22 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:54:22 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 21:54:22 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:54:22 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 21:54:22 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 21:54:22 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 21:54:22 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 21:54:22 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:54:22 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 21:54:23 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 21:54:23 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 21:54:23 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 21:54:24 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 21:54:24 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 21:54:25 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 21:54:25 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 21:54:25 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 21:54:25 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 21:54:25 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 21:54:25 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.926 seconds (process running for 6.193)
2025-09-22 21:54:25 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 21:54:25 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 21:54:25 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 21:54:25 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 21:54:27 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 21:54:27 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 21:54:27 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-22 21:54:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:54:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:54:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:54:27 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:54:27 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:54:27 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - تصدير السجل الطبي 1 كـ PDF بواسطة المستخدم admin
2025-09-22 21:54:27 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - مدير النظام يصدر السجل الطبي 1 من العيادة: 9
2025-09-22 21:54:27 [http-nio-8080-exec-1] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 1 بواسطة المستخدم admin
2025-09-22 21:54:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=?
2025-09-22 21:54:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:54:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:54:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:54:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-09-22 21:54:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:54:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-09-22 21:54:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-09-22 21:54:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:54:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-09-22 21:54:27 [http-nio-8080-exec-1] INFO  c.n.amancare.service.PdfService - إنشاء ملف PDF للسجل الطبي: 1
2025-09-22 21:54:28 [http-nio-8080-exec-1] INFO  c.n.amancare.service.PdfService - تم إنشاء ملف PDF للسجل الطبي 1 بنجاح
2025-09-22 21:58:27 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 21:58:27 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 21:58:27 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:58:27 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 21:58:27 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 21:58:28 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 44025 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 21:58:28 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 21:58:28 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 21:58:28 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 21:58:29 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 21:58:29 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 15 JPA repository interfaces.
2025-09-22 21:58:29 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 21:58:29 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 21:58:29 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 21:58:29 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 21:58:29 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1177 ms
2025-09-22 21:58:30 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 21:58:30 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 21:58:30 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 21:58:30 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 21:58:30 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 21:58:30 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@75d528a
2025-09-22 21:58:30 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 21:58:30 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 21:58:30 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 21:58:31 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 21:58:31 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 21:58:31 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 21:58:31 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 21:58:31 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 21:58:31 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:58:31 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:58:31 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 21:58:31 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 21:58:31 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 21:58:31 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 21:58:31 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 21:58:31 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 21:58:31 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 21:58:31 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 21:58:31 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 21:58:31 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 21:58:31 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 21:58:32 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 21:58:32 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 21:58:32 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 21:58:33 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 21:58:33 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 21:58:33 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 21:58:33 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 21:58:33 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 21:58:33 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 21:58:33 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 21:58:33 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.45 seconds (process running for 5.729)
2025-09-22 21:58:33 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 21:58:33 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 21:58:33 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 21:58:33 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 21:58:36 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 21:58:36 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 21:58:36 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-09-22 21:58:36 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:58:36 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:58:36 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:58:36 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:58:36 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - تصدير السجل الطبي 1 كـ PDF بواسطة المستخدم admin
2025-09-22 21:58:36 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - مدير النظام يصدر السجل الطبي 1 من العيادة: 9
2025-09-22 21:58:36 [http-nio-8080-exec-1] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 1 بواسطة المستخدم admin
2025-09-22 21:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=?
2025-09-22 21:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-09-22 21:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-09-22 21:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-09-22 21:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-09-22 21:58:36 [http-nio-8080-exec-1] INFO  c.n.amancare.service.PdfService - إنشاء ملف PDF للسجل الطبي: 1
2025-09-22 21:58:36 [http-nio-8080-exec-1] ERROR c.n.amancare.service.PdfService - خطأ في إنشاء ملف PDF للسجل الطبي 1: 
com.openhtmltopdf.util.XRRuntimeException: Can't load the XML resource (using TRaX transformer). org.xml.sax.SAXParseException; lineNumber: 266; columnNumber: 3; The element type "meta" must be terminated by the matching end-tag "</meta>".
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:254)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.access$100(XMLResource.java:145)
	at com.openhtmltopdf.resource.XMLResource.load(XMLResource.java:71)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.setDocumentFromStringP(PdfBoxRenderer.java:316)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.<init>(PdfBoxRenderer.java:256)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.buildPdfRenderer(PdfRendererBuilder.java:69)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.run(PdfRendererBuilder.java:44)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:467)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: javax.xml.transform.TransformerException: org.xml.sax.SAXParseException; lineNumber: 266; columnNumber: 3; The element type "meta" must be terminated by the matching end-tag "</meta>".
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:793)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:395)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:251)
	... 130 common frames omitted
Caused by: org.xml.sax.SAXParseException: The element type "meta" must be terminated by the matching end-tag "</meta>".
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1252)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:694)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:781)
	... 132 common frames omitted
2025-09-22 21:58:36 [http-nio-8080-exec-1] ERROR c.n.a.c.MedicalRecordController - خطأ في تصدير السجل الطبي 1 كـ PDF: 
java.io.IOException: فشل في إنشاء ملف PDF للسجل الطبي
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:474)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: com.openhtmltopdf.util.XRRuntimeException: Can't load the XML resource (using TRaX transformer). org.xml.sax.SAXParseException; lineNumber: 266; columnNumber: 3; The element type "meta" must be terminated by the matching end-tag "</meta>".
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:254)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.access$100(XMLResource.java:145)
	at com.openhtmltopdf.resource.XMLResource.load(XMLResource.java:71)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.setDocumentFromStringP(PdfBoxRenderer.java:316)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.<init>(PdfBoxRenderer.java:256)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.buildPdfRenderer(PdfRendererBuilder.java:69)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.run(PdfRendererBuilder.java:44)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:467)
	... 123 common frames omitted
Caused by: javax.xml.transform.TransformerException: org.xml.sax.SAXParseException; lineNumber: 266; columnNumber: 3; The element type "meta" must be terminated by the matching end-tag "</meta>".
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:793)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:395)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:251)
	... 130 common frames omitted
Caused by: org.xml.sax.SAXParseException: The element type "meta" must be terminated by the matching end-tag "</meta>".
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1252)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:694)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:781)
	... 132 common frames omitted
2025-09-22 21:58:38 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:58:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:58:38 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:58:38 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:58:38 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:58:38 [http-nio-8080-exec-2] INFO  c.n.a.c.MedicalRecordController - تصدير السجل الطبي 1 كـ PDF بواسطة المستخدم admin
2025-09-22 21:58:38 [http-nio-8080-exec-2] INFO  c.n.a.c.MedicalRecordController - مدير النظام يصدر السجل الطبي 1 من العيادة: 9
2025-09-22 21:58:38 [http-nio-8080-exec-2] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 1 بواسطة المستخدم admin
2025-09-22 21:58:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=?
2025-09-22 21:58:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:58:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:58:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:58:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-09-22 21:58:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:58:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-09-22 21:58:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-09-22 21:58:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:58:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-09-22 21:58:38 [http-nio-8080-exec-2] INFO  c.n.amancare.service.PdfService - إنشاء ملف PDF للسجل الطبي: 1
2025-09-22 21:58:38 [http-nio-8080-exec-2] ERROR c.n.amancare.service.PdfService - خطأ في إنشاء ملف PDF للسجل الطبي 1: 
com.openhtmltopdf.util.XRRuntimeException: Can't load the XML resource (using TRaX transformer). org.xml.sax.SAXParseException; lineNumber: 266; columnNumber: 3; The element type "meta" must be terminated by the matching end-tag "</meta>".
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:254)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.access$100(XMLResource.java:145)
	at com.openhtmltopdf.resource.XMLResource.load(XMLResource.java:71)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.setDocumentFromStringP(PdfBoxRenderer.java:316)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.<init>(PdfBoxRenderer.java:256)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.buildPdfRenderer(PdfRendererBuilder.java:69)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.run(PdfRendererBuilder.java:44)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:467)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: javax.xml.transform.TransformerException: org.xml.sax.SAXParseException; lineNumber: 266; columnNumber: 3; The element type "meta" must be terminated by the matching end-tag "</meta>".
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:793)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:395)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:251)
	... 130 common frames omitted
Caused by: org.xml.sax.SAXParseException: The element type "meta" must be terminated by the matching end-tag "</meta>".
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1252)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:694)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:781)
	... 132 common frames omitted
2025-09-22 21:58:38 [http-nio-8080-exec-2] ERROR c.n.a.c.MedicalRecordController - خطأ في تصدير السجل الطبي 1 كـ PDF: 
java.io.IOException: فشل في إنشاء ملف PDF للسجل الطبي
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:474)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: com.openhtmltopdf.util.XRRuntimeException: Can't load the XML resource (using TRaX transformer). org.xml.sax.SAXParseException; lineNumber: 266; columnNumber: 3; The element type "meta" must be terminated by the matching end-tag "</meta>".
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:254)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.access$100(XMLResource.java:145)
	at com.openhtmltopdf.resource.XMLResource.load(XMLResource.java:71)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.setDocumentFromStringP(PdfBoxRenderer.java:316)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.<init>(PdfBoxRenderer.java:256)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.buildPdfRenderer(PdfRendererBuilder.java:69)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.run(PdfRendererBuilder.java:44)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:467)
	... 123 common frames omitted
Caused by: javax.xml.transform.TransformerException: org.xml.sax.SAXParseException; lineNumber: 266; columnNumber: 3; The element type "meta" must be terminated by the matching end-tag "</meta>".
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:793)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:395)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:251)
	... 130 common frames omitted
Caused by: org.xml.sax.SAXParseException: The element type "meta" must be terminated by the matching end-tag "</meta>".
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1252)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:694)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:781)
	... 132 common frames omitted
2025-09-22 21:58:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:58:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:58:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/1/pdf?clinicId=9
2025-09-22 21:58:39 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:58:39 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 21:58:39 [http-nio-8080-exec-3] INFO  c.n.a.c.MedicalRecordController - تصدير السجل الطبي 1 كـ PDF بواسطة المستخدم admin
2025-09-22 21:58:39 [http-nio-8080-exec-3] INFO  c.n.a.c.MedicalRecordController - مدير النظام يصدر السجل الطبي 1 من العيادة: 9
2025-09-22 21:58:39 [http-nio-8080-exec-3] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 1 بواسطة المستخدم admin
2025-09-22 21:58:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=?
2025-09-22 21:58:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 21:58:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 21:58:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 21:58:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-09-22 21:58:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:58:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-09-22 21:58:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-09-22 21:58:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 21:58:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-09-22 21:58:39 [http-nio-8080-exec-3] INFO  c.n.amancare.service.PdfService - إنشاء ملف PDF للسجل الطبي: 1
2025-09-22 21:58:39 [http-nio-8080-exec-3] ERROR c.n.amancare.service.PdfService - خطأ في إنشاء ملف PDF للسجل الطبي 1: 
com.openhtmltopdf.util.XRRuntimeException: Can't load the XML resource (using TRaX transformer). org.xml.sax.SAXParseException; lineNumber: 266; columnNumber: 3; The element type "meta" must be terminated by the matching end-tag "</meta>".
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:254)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.access$100(XMLResource.java:145)
	at com.openhtmltopdf.resource.XMLResource.load(XMLResource.java:71)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.setDocumentFromStringP(PdfBoxRenderer.java:316)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.<init>(PdfBoxRenderer.java:256)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.buildPdfRenderer(PdfRendererBuilder.java:69)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.run(PdfRendererBuilder.java:44)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:467)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: javax.xml.transform.TransformerException: org.xml.sax.SAXParseException; lineNumber: 266; columnNumber: 3; The element type "meta" must be terminated by the matching end-tag "</meta>".
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:793)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:395)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:251)
	... 130 common frames omitted
Caused by: org.xml.sax.SAXParseException: The element type "meta" must be terminated by the matching end-tag "</meta>".
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1252)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:694)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:781)
	... 132 common frames omitted
2025-09-22 21:58:39 [http-nio-8080-exec-3] ERROR c.n.a.c.MedicalRecordController - خطأ في تصدير السجل الطبي 1 كـ PDF: 
java.io.IOException: فشل في إنشاء ملف PDF للسجل الطبي
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:474)
	at com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(MedicalRecordController.java:783)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.proceed(AuthorizationManagerBeforeMethodInterceptor.java:268)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.attemptAuthorization(AuthorizationManagerBeforeMethodInterceptor.java:263)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:196)
	at org.springframework.security.config.annotation.method.configuration.DeferringMethodInterceptor.invoke(DeferringMethodInterceptor.java:44)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.nakqeeb.amancare.controller.MedicalRecordController$$SpringCGLIB$$0.exportMedicalRecordPdf(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.nakqeeb.amancare.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: com.openhtmltopdf.util.XRRuntimeException: Can't load the XML resource (using TRaX transformer). org.xml.sax.SAXParseException; lineNumber: 266; columnNumber: 3; The element type "meta" must be terminated by the matching end-tag "</meta>".
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:254)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.access$100(XMLResource.java:145)
	at com.openhtmltopdf.resource.XMLResource.load(XMLResource.java:71)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.setDocumentFromStringP(PdfBoxRenderer.java:316)
	at com.openhtmltopdf.pdfboxout.PdfBoxRenderer.<init>(PdfBoxRenderer.java:256)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.buildPdfRenderer(PdfRendererBuilder.java:69)
	at com.openhtmltopdf.pdfboxout.PdfRendererBuilder.run(PdfRendererBuilder.java:44)
	at com.nakqeeb.amancare.service.pdf.PdfService.generateMedicalRecordPdf(PdfService.java:467)
	... 123 common frames omitted
Caused by: javax.xml.transform.TransformerException: org.xml.sax.SAXParseException; lineNumber: 266; columnNumber: 3; The element type "meta" must be terminated by the matching end-tag "</meta>".
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:793)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:395)
	at com.openhtmltopdf.resource.XMLResource$XMLResourceBuilder.createXMLResource(XMLResource.java:251)
	... 130 common frames omitted
Caused by: org.xml.sax.SAXParseException: The element type "meta" must be terminated by the matching end-tag "</meta>".
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1252)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:694)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:781)
	... 132 common frames omitted
2025-09-22 22:00:14 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 22:00:14 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 22:00:14 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 22:00:14 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 22:00:14 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 22:00:15 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 44479 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 22:00:15 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 22:00:15 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 22:00:15 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 22:00:16 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 22:00:16 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 15 JPA repository interfaces.
2025-09-22 22:00:16 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 22:00:16 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 22:00:16 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 22:00:16 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 22:00:16 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1085 ms
2025-09-22 22:00:16 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 22:00:16 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 22:00:16 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 22:00:16 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 22:00:16 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 22:00:17 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@c1bb21e
2025-09-22 22:00:17 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 22:00:17 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 22:00:17 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 22:00:17 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 22:00:17 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 22:00:17 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 22:00:17 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 22:00:17 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 22:00:17 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 22:00:17 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 22:00:17 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 22:00:17 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 22:00:17 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 22:00:17 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 22:00:17 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 22:00:17 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 22:00:17 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 22:00:17 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 22:00:17 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 22:00:18 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 22:00:18 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 22:00:19 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 22:00:19 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 22:00:19 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 22:00:19 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 22:00:19 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 22:00:20 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 22:00:20 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 22:00:20 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 22:00:20 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 22:00:20 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 22:00:20 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.385 seconds (process running for 5.653)
2025-09-22 22:00:20 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 22:00:20 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 22:00:20 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 22:00:20 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 22:00:21 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 22:00:21 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 22:00:21 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-22 22:00:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/1/pdf?clinicId=9
2025-09-22 22:00:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 22:00:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/1/pdf?clinicId=9
2025-09-22 22:00:21 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 22:00:21 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 22:00:21 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - تصدير السجل الطبي 1 كـ PDF بواسطة المستخدم admin
2025-09-22 22:00:21 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - مدير النظام يصدر السجل الطبي 1 من العيادة: 9
2025-09-22 22:00:21 [http-nio-8080-exec-1] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 1 بواسطة المستخدم admin
2025-09-22 22:00:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=?
2025-09-22 22:00:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 22:00:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 22:00:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 22:00:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-09-22 22:00:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 22:00:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-09-22 22:00:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-09-22 22:00:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 22:00:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-09-22 22:00:21 [http-nio-8080-exec-1] INFO  c.n.amancare.service.PdfService - إنشاء ملف PDF للسجل الطبي: 1
2025-09-22 22:00:21 [http-nio-8080-exec-1] INFO  c.n.amancare.service.PdfService - تم إنشاء ملف PDF للسجل الطبي 1 بنجاح
2025-09-22 22:02:44 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 22:02:44 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 22:02:44 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 22:02:44 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 22:02:44 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 22:02:46 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 45122 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 22:02:46 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 22:02:46 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 22:02:46 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 22:02:47 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 22:02:47 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 78 ms. Found 15 JPA repository interfaces.
2025-09-22 22:02:48 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 22:02:48 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 22:02:48 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 22:02:48 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 22:02:48 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1336 ms
2025-09-22 22:02:48 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 22:02:48 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 22:02:48 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 22:02:48 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 22:02:48 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 22:02:48 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@22ca0c1c
2025-09-22 22:02:48 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 22:02:48 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 22:02:48 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 22:02:49 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 22:02:49 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 22:02:49 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 22:02:49 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 22:02:49 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 22:02:49 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 22:02:49 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 22:02:49 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 22:02:49 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 22:02:49 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 22:02:49 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 22:02:49 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 22:02:49 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 22:02:49 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 22:02:49 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 22:02:49 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 22:02:49 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 22:02:49 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 22:02:50 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 22:02:50 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 22:02:50 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 22:02:51 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 22:02:51 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 22:02:52 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 22:02:52 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 22:02:52 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 22:02:52 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 22:02:52 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 22:02:52 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 6.414 seconds (process running for 6.661)
2025-09-22 22:02:52 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 22:02:52 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 22:02:52 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 22:02:52 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 22:02:54 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 22:02:54 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 22:02:54 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-22 22:02:54 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/1/pdf?clinicId=9
2025-09-22 22:02:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 22:02:54 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/1/pdf?clinicId=9
2025-09-22 22:02:54 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 22:02:54 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 22:02:54 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - تصدير السجل الطبي 1 كـ PDF بواسطة المستخدم admin
2025-09-22 22:02:54 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - مدير النظام يصدر السجل الطبي 1 من العيادة: 9
2025-09-22 22:02:54 [http-nio-8080-exec-1] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 1 بواسطة المستخدم admin
2025-09-22 22:02:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=?
2025-09-22 22:02:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 22:02:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 22:02:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 22:02:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-09-22 22:02:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 22:02:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-09-22 22:02:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-09-22 22:02:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 22:02:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-09-22 22:02:54 [http-nio-8080-exec-1] INFO  c.n.amancare.service.PdfService - إنشاء ملف PDF للسجل الطبي: 1
2025-09-22 22:02:55 [http-nio-8080-exec-1] INFO  c.n.amancare.service.PdfService - تم إنشاء ملف PDF للسجل الطبي 1 بنجاح
2025-09-22 22:04:00 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 22:04:00 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 22:04:00 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 22:04:00 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 22:04:00 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 22:04:03 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 45480 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 22:04:03 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 22:04:03 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 22:04:03 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 22:04:03 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 22:04:03 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 15 JPA repository interfaces.
2025-09-22 22:04:04 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 22:04:04 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 22:04:04 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 22:04:04 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 22:04:04 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1093 ms
2025-09-22 22:04:04 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 22:04:04 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 22:04:04 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 22:04:04 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 22:04:04 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 22:04:04 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@37058b8d
2025-09-22 22:04:04 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 22:04:04 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 22:04:04 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 22:04:05 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 22:04:05 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 22:04:05 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 22:04:05 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 22:04:05 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 22:04:05 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 22:04:05 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 22:04:05 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 22:04:05 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 22:04:05 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 22:04:05 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 22:04:05 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 22:04:05 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 22:04:05 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 22:04:05 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 22:04:05 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 22:04:05 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 22:04:06 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 22:04:07 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 22:04:07 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 22:04:07 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 22:04:08 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 22:04:08 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 22:04:09 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 22:04:09 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 22:04:09 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 22:04:09 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 22:04:09 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 22:04:09 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 7.119 seconds (process running for 7.292)
2025-09-22 22:04:09 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 22:04:09 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 22:04:09 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 22:04:09 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 22:04:10 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 22:04:10 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 22:04:10 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-22 22:04:10 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/1/pdf?clinicId=9
2025-09-22 22:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 22:04:10 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/1/pdf?clinicId=9
2025-09-22 22:04:10 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 22:04:10 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 22:04:10 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - تصدير السجل الطبي 1 كـ PDF بواسطة المستخدم admin
2025-09-22 22:04:10 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - مدير النظام يصدر السجل الطبي 1 من العيادة: 9
2025-09-22 22:04:10 [http-nio-8080-exec-1] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 1 بواسطة المستخدم admin
2025-09-22 22:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=?
2025-09-22 22:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 22:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 22:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 22:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-09-22 22:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 22:04:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-09-22 22:04:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-09-22 22:04:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 22:04:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-09-22 22:04:11 [http-nio-8080-exec-1] INFO  c.n.amancare.service.PdfService - إنشاء ملف PDF للسجل الطبي: 1
2025-09-22 22:04:11 [http-nio-8080-exec-1] INFO  c.n.amancare.service.PdfService - تم إنشاء ملف PDF للسجل الطبي 1 بنجاح
2025-09-22 22:05:19 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 22:05:19 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 22:05:19 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 22:05:19 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 22:05:19 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 22:05:22 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 45862 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 22:05:22 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 22:05:22 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 22:05:22 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 22:05:22 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 22:05:22 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 15 JPA repository interfaces.
2025-09-22 22:05:23 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 22:05:23 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 22:05:23 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 22:05:23 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 22:05:23 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1063 ms
2025-09-22 22:05:23 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 22:05:23 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 22:05:23 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 22:05:23 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 22:05:23 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 22:05:23 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6e131a63
2025-09-22 22:05:23 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 22:05:23 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 22:05:23 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 22:05:24 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 22:05:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 22:05:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 22:05:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 22:05:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 22:05:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 22:05:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 22:05:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 22:05:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 22:05:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 22:05:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 22:05:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 22:05:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 22:05:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 22:05:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 22:05:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 22:05:24 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 22:05:24 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 22:05:25 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 22:05:25 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 22:05:25 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 22:05:26 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 22:05:26 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 22:05:26 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 22:05:26 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 22:05:26 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 22:05:26 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 22:05:26 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 22:05:26 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.155 seconds (process running for 5.418)
2025-09-22 22:05:26 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 22:05:26 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 22:05:26 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 22:05:26 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 22:05:30 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 22:05:30 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 22:05:30 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-09-22 22:05:30 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/1/pdf?clinicId=9
2025-09-22 22:05:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 22:05:30 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/1/pdf?clinicId=9
2025-09-22 22:05:30 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 22:05:30 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 22:05:30 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - تصدير السجل الطبي 1 كـ PDF بواسطة المستخدم admin
2025-09-22 22:05:30 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - مدير النظام يصدر السجل الطبي 1 من العيادة: 9
2025-09-22 22:05:30 [http-nio-8080-exec-1] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 1 بواسطة المستخدم admin
2025-09-22 22:05:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=?
2025-09-22 22:05:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 22:05:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 22:05:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 22:05:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-09-22 22:05:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 22:05:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-09-22 22:05:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-09-22 22:05:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 22:05:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-09-22 22:05:30 [http-nio-8080-exec-1] INFO  c.n.amancare.service.PdfService - إنشاء ملف PDF للسجل الطبي: 1
2025-09-22 22:05:30 [http-nio-8080-exec-1] INFO  c.n.amancare.service.PdfService - تم إنشاء ملف PDF للسجل الطبي 1 بنجاح
2025-09-22 22:11:38 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 47412 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 22:11:38 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 22:11:38 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 22:11:38 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 22:11:39 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 22:11:39 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 39 ms. Found 15 JPA repository interfaces.
2025-09-22 22:11:39 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 22:11:39 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 22:11:39 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 22:11:39 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 22:11:39 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1114 ms
2025-09-22 22:11:39 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 22:11:39 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 22:11:39 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 22:11:40 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 22:11:40 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 22:11:40 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@37058b8d
2025-09-22 22:11:40 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 22:11:40 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 22:11:40 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 22:11:40 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 22:11:40 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 22:11:41 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 22:11:41 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 22:11:41 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 22:11:41 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 22:11:41 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 22:11:41 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 22:11:41 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 22:11:41 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 22:11:41 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 22:11:41 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 22:11:41 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 22:11:41 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 22:11:41 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 22:11:41 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 22:11:41 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 22:11:41 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 22:11:42 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 22:11:42 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 22:11:42 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 22:11:43 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 22:11:43 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 22:11:43 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 22:11:43 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 22:11:43 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 22:11:44 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 22:11:44 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 22:11:44 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.662 seconds (process running for 5.974)
2025-09-22 22:11:44 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 22:11:44 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 22:11:44 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 22:11:44 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 22:12:04 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 22:12:04 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 22:12:04 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 14 ms
2025-09-22 22:12:04 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/14/export/pdf?clinicId=9
2025-09-22 22:12:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 22:12:04 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/14/export/pdf?clinicId=9
2025-09-22 22:12:04 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.exportPatientDetailsPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 22:12:04 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.exportPatientDetailsPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 22:12:04 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - Exporting patient 14 details as PDF by user admin
2025-09-22 22:12:04 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN Exporting patient details from clinic: 9
2025-09-22 22:12:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 22:12:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 22:12:04 [http-nio-8080-exec-1] INFO  c.n.amancare.service.pdf.PdfService - Generating PDF for patient: P2025090001
2025-09-22 22:30:05 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 22:30:05 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 22:30:05 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 22:30:05 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 22:30:05 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 22:30:08 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 51945 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 22:30:08 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 22:30:08 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 22:30:08 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 22:30:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 22:30:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 41 ms. Found 15 JPA repository interfaces.
2025-09-22 22:30:09 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 22:30:09 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 22:30:09 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 22:30:09 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 22:30:09 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1010 ms
2025-09-22 22:30:09 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 22:30:09 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 22:30:09 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 22:30:09 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 22:30:09 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 22:30:10 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5a24f1bc
2025-09-22 22:30:10 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 22:30:10 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 22:30:10 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 22:30:10 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 22:30:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 22:30:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 22:30:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 22:30:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 22:30:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 22:30:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 22:30:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 22:30:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 22:30:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 22:30:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 22:30:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 22:30:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 22:30:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 22:30:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 22:30:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 22:30:10 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 22:30:11 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 22:30:12 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 22:30:12 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 22:30:12 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 22:30:12 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 22:30:12 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 22:30:13 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 22:30:13 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 22:30:13 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 22:30:13 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 22:30:13 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 22:30:13 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.426 seconds (process running for 5.715)
2025-09-22 22:30:13 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 22:30:13 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 22:30:13 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 22:30:13 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 22:30:19 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 22:30:19 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 22:30:19 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-22 22:30:19 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/14/export/pdf?clinicId=9
2025-09-22 22:30:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 22:30:19 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/14/export/pdf?clinicId=9
2025-09-22 22:30:19 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.exportPatientDetailsPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 22:30:19 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.exportPatientDetailsPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 22:30:19 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - Exporting patient 14 details as PDF by user admin
2025-09-22 22:30:19 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN Exporting patient details from clinic: 9
2025-09-22 22:30:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 22:30:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 22:30:19 [http-nio-8080-exec-1] INFO  c.n.amancare.service.PdfService - Generating PDF for patient: P2025090001
2025-09-22 22:30:44 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/17/export/card?clinicId=9
2025-09-22 22:30:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 22:30:44 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/17/export/card?clinicId=9
2025-09-22 22:30:44 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.exportPatientCardPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 22:30:44 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.exportPatientCardPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-22 22:30:44 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - Exporting patient 17 card as PDF by user admin
2025-09-22 22:30:44 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN Exporting patient card as PDF from clinic: 9
2025-09-22 22:30:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 22:30:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 22:30:44 [http-nio-8080-exec-3] INFO  c.n.amancare.service.PdfService - Generating patient card PDF for: P2025090004
2025-09-22 22:37:18 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-22 22:37:18 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-22 22:37:18 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 22:37:18 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-22 22:37:18 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-22 22:37:20 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 53750 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-22 22:37:20 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-22 22:37:20 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-22 22:37:20 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-22 22:37:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-22 22:37:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56 ms. Found 15 JPA repository interfaces.
2025-09-22 22:37:22 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-22 22:37:22 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-22 22:37:22 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-22 22:37:22 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-22 22:37:22 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1301 ms
2025-09-22 22:37:22 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-22 22:37:22 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-22 22:37:22 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-22 22:37:22 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-22 22:37:22 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-22 22:37:22 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6fa28af6
2025-09-22 22:37:22 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-22 22:37:22 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-22 22:37:22 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-22 22:37:23 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-22 22:37:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-22 22:37:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-09-22 22:37:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-09-22 22:37:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-09-22 22:37:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 22:37:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 22:37:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-09-22 22:37:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-09-22 22:37:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-09-22 22:37:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-09-22 22:37:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-09-22 22:37:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-09-22 22:37:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-09-22 22:37:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-09-22 22:37:23 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-09-22 22:37:23 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-22 22:37:23 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-22 22:37:24 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-22 22:37:24 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-22 22:37:24 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-22 22:37:25 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-22 22:37:25 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-22 22:37:26 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-22 22:37:26 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-22 22:37:26 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-22 22:37:26 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-22 22:37:26 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-22 22:37:26 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 6.137 seconds (process running for 6.387)
2025-09-22 22:37:26 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-22 22:37:26 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-22 22:37:26 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-22 22:37:26 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-22 22:37:40 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-22 22:37:40 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-22 22:37:40 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2025-09-22 22:37:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/1/pdf?clinicId=9
2025-09-22 22:37:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 22:37:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/1/pdf?clinicId=9
2025-09-22 22:37:40 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 22:37:40 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-09-22 22:37:40 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - تصدير السجل الطبي 1 كـ PDF بواسطة المستخدم admin
2025-09-22 22:37:40 [http-nio-8080-exec-1] INFO  c.n.a.c.MedicalRecordController - مدير النظام يصدر السجل الطبي 1 من العيادة: 9
2025-09-22 22:37:40 [http-nio-8080-exec-1] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 1 بواسطة المستخدم admin
2025-09-22 22:37:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=?
2025-09-22 22:37:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-22 22:37:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-22 22:37:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-22 22:37:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-09-22 22:37:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 22:37:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-09-22 22:37:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-09-22 22:37:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-09-22 22:37:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-09-22 22:37:40 [http-nio-8080-exec-1] INFO  c.n.a.s.pdf.PdfMedicalRecordService - إنشاء ملف PDF للسجل الطبي: 1
