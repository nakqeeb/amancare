2025-10-05 00:54:40 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h11m37s537ms).
2025-10-05 02:12:58 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h18m18s543ms).
2025-10-05 03:23:21 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h10m22s450ms).
2025-10-05 04:40:26 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h17m5s453ms).
2025-10-05 05:37:33 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=57m6s542ms).
2025-10-05 05:38:01 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Retrograde clock change detected (housekeeper delta=28s983ms), soft-evicting connections from pool.
2025-10-05 05:43:07 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-10-05 05:43:07 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-10-05 05:43:07 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 05:43:07 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-05 05:43:07 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-05 05:43:09 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 72074 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-10-05 05:43:09 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-05 05:43:09 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-05 05:43:09 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-05 05:43:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-05 05:43:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 16 JPA repository interfaces.
2025-10-05 05:43:10 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-05 05:43:10 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-05 05:43:10 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-10-05 05:43:10 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-10-05 05:43:10 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1230 ms
2025-10-05 05:43:10 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-05 05:43:10 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-10-05 05:43:10 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-05 05:43:10 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-05 05:43:10 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-05 05:43:10 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7cae0437
2025-10-05 05:43:10 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-05 05:43:10 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-05 05:43:10 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-05 05:43:11 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-05 05:43:11 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table activity_logs 
       modify column action_type enum ('CREATE','DELETE','PATCH','UPDATE') not null
2025-10-05 05:43:11 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-10-05 05:43:11 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table clinics 
       modify column working_days varchar(20)
2025-10-05 05:43:11 [restartedMain] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table clinics 
       modify column working_days varchar(20)" via JDBC [Data truncated for column 'working_days' at row 13]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table clinics 
       modify column working_days varchar(20)" via JDBC [Data truncated for column 'working_days' at row 13]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1725)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1690)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1635)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1752)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1635)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:179)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:164)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:148)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:148)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.nakqeeb.amancare.AmancareApplication.main(AmancareApplication.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.sql.SQLException: Data truncated for column 'working_days' at row 13
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:837)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:685)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 125 common frames omitted
2025-10-05 05:43:11 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-10-05 05:43:11 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoices 
       modify column payment_method enum ('BANK_TRANSFER','CASH','CHECK','CREDIT_CARD','DEBIT_CARD','INSTALLMENT','INSURANCE','ONLINE')
2025-10-05 05:43:11 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-10-05 05:43:11 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-10-05 05:43:11 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-10-05 05:43:11 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-10-05 05:43:11 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-10-05 05:43:11 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-10-05 05:43:11 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-10-05 05:43:11 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-10-05 05:43:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-10-05 05:43:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-10-05 05:43:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-10-05 05:43:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-10-05 05:43:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-10-05 05:43:12 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table payments 
       modify column payment_method enum ('BANK_TRANSFER','CASH','CHECK','CREDIT_CARD','DEBIT_CARD','INSTALLMENT','INSURANCE','ONLINE') not null
2025-10-05 05:43:12 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 05:43:12 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-05 05:43:13 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-10-05 05:43:13 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-10-05 05:43:13 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-10-05 05:43:14 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-10-05 05:43:14 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-10-05 05:43:14 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-10-05 05:43:14 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-10-05 05:43:14 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-05 05:43:14 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-05 05:43:14 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-10-05 05:43:14 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 6.194 seconds (process running for 6.542)
2025-10-05 05:43:14 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-10-05 05:43:14 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-10-05 05:43:14 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-10-05 05:43:14 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-10-05 05:43:21 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-05 05:43:21 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-05 05:43:21 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-10-05 05:43:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/export/pdf
2025-10-05 05:43:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:43:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/export/pdf
2025-10-05 05:43:21 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:43:21 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:43:21 [http-nio-8080-exec-1] INFO  c.n.a.controller.InvoiceController - تصدير فاتورة PDF رقم 2 بواسطة المستخدم: admin
2025-10-05 05:43:21 [http-nio-8080-exec-1] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 2 by user: 2
2025-10-05 05:43:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 05:43:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 05:43:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 05:43:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 05:43:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 05:43:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:43:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:43:21 [http-nio-8080-exec-1] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء ملف PDF للفاتورة رقم: INV-9-202510-0002
2025-10-05 05:43:21 [http-nio-8080-exec-1] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 05:43:21 [http-nio-8080-exec-1] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 05:43:22 [http-nio-8080-exec-1] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 05:43:22 [http-nio-8080-exec-1] INFO  c.n.a.controller.InvoiceController - تم إنشاء ملف PDF للفاتورة INV-9-202510-0002 بنجاح
2025-10-05 05:44:20 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-10-05 05:44:20 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-10-05 05:44:20 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 05:44:20 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-05 05:44:20 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-05 05:44:22 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 72387 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-10-05 05:44:22 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-05 05:44:22 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-05 05:44:22 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-05 05:44:22 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-05 05:44:22 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 16 JPA repository interfaces.
2025-10-05 05:44:23 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-05 05:44:23 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-05 05:44:23 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-10-05 05:44:23 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-10-05 05:44:23 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1112 ms
2025-10-05 05:44:23 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-05 05:44:23 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-10-05 05:44:23 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-05 05:44:23 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-05 05:44:23 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-05 05:44:23 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3457a3be
2025-10-05 05:44:23 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-05 05:44:23 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-05 05:44:23 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-05 05:44:24 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-05 05:44:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table activity_logs 
       modify column action_type enum ('CREATE','DELETE','PATCH','UPDATE') not null
2025-10-05 05:44:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-10-05 05:44:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table clinics 
       modify column working_days varchar(20)
2025-10-05 05:44:24 [restartedMain] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table clinics 
       modify column working_days varchar(20)" via JDBC [Data truncated for column 'working_days' at row 13]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table clinics 
       modify column working_days varchar(20)" via JDBC [Data truncated for column 'working_days' at row 13]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1725)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1690)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1635)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1752)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1635)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:179)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:164)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:148)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:148)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.nakqeeb.amancare.AmancareApplication.main(AmancareApplication.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.sql.SQLException: Data truncated for column 'working_days' at row 13
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:837)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:685)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 125 common frames omitted
2025-10-05 05:44:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-10-05 05:44:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoices 
       modify column payment_method enum ('BANK_TRANSFER','CASH','CHECK','CREDIT_CARD','DEBIT_CARD','INSTALLMENT','INSURANCE','ONLINE')
2025-10-05 05:44:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-10-05 05:44:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-10-05 05:44:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-10-05 05:44:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-10-05 05:44:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-10-05 05:44:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-10-05 05:44:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-10-05 05:44:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-10-05 05:44:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-10-05 05:44:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-10-05 05:44:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-10-05 05:44:24 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-10-05 05:44:25 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-10-05 05:44:25 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table payments 
       modify column payment_method enum ('BANK_TRANSFER','CASH','CHECK','CREDIT_CARD','DEBIT_CARD','INSTALLMENT','INSURANCE','ONLINE') not null
2025-10-05 05:44:25 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 05:44:25 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-05 05:44:26 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-10-05 05:44:26 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-10-05 05:44:26 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-10-05 05:44:26 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-10-05 05:44:26 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-10-05 05:44:27 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-10-05 05:44:27 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-10-05 05:44:27 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-05 05:44:27 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-05 05:44:27 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-10-05 05:44:27 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.927 seconds (process running for 6.213)
2025-10-05 05:44:27 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-10-05 05:44:27 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-10-05 05:44:27 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-10-05 05:44:27 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-10-05 05:44:31 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-05 05:44:31 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-05 05:44:31 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-05 05:44:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/export/pdf
2025-10-05 05:44:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:44:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/export/pdf
2025-10-05 05:44:31 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:44:31 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:44:31 [http-nio-8080-exec-1] INFO  c.n.a.controller.InvoiceController - تصدير فاتورة PDF رقم 2 بواسطة المستخدم: admin
2025-10-05 05:44:31 [http-nio-8080-exec-1] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 2 by user: 2
2025-10-05 05:44:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 05:44:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 05:44:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 05:44:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 05:44:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 05:44:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:44:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:44:31 [http-nio-8080-exec-1] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء ملف PDF للفاتورة رقم: INV-9-202510-0002
2025-10-05 05:44:32 [http-nio-8080-exec-1] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 05:44:32 [http-nio-8080-exec-1] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 05:44:33 [http-nio-8080-exec-1] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 05:44:33 [http-nio-8080-exec-1] INFO  c.n.a.controller.InvoiceController - تم إنشاء ملف PDF للفاتورة INV-9-202510-0002 بنجاح
2025-10-05 05:47:38 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-10-05 05:47:38 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-10-05 05:47:38 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 05:47:38 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-05 05:47:38 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-05 05:47:39 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 73196 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-10-05 05:47:39 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-05 05:47:39 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-05 05:47:39 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-05 05:47:40 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-05 05:47:40 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 16 JPA repository interfaces.
2025-10-05 05:47:40 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-05 05:47:40 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-05 05:47:40 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-10-05 05:47:40 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-10-05 05:47:40 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1051 ms
2025-10-05 05:47:40 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-05 05:47:40 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-10-05 05:47:40 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-05 05:47:40 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-05 05:47:40 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-05 05:47:40 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@23973ea1
2025-10-05 05:47:40 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-05 05:47:40 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-05 05:47:40 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-05 05:47:41 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-05 05:47:41 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table activity_logs 
       modify column action_type enum ('CREATE','DELETE','PATCH','UPDATE') not null
2025-10-05 05:47:41 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-10-05 05:47:41 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table clinics 
       modify column working_days varchar(20)
2025-10-05 05:47:42 [restartedMain] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table clinics 
       modify column working_days varchar(20)" via JDBC [Data truncated for column 'working_days' at row 13]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table clinics 
       modify column working_days varchar(20)" via JDBC [Data truncated for column 'working_days' at row 13]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1725)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1690)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1635)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1752)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1635)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:179)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:164)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:148)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:148)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.nakqeeb.amancare.AmancareApplication.main(AmancareApplication.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.sql.SQLException: Data truncated for column 'working_days' at row 13
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:837)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:685)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 125 common frames omitted
2025-10-05 05:47:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-10-05 05:47:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoices 
       modify column payment_method enum ('BANK_TRANSFER','CASH','CHECK','CREDIT_CARD','DEBIT_CARD','INSTALLMENT','INSURANCE','ONLINE')
2025-10-05 05:47:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-10-05 05:47:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-10-05 05:47:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-10-05 05:47:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-10-05 05:47:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-10-05 05:47:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-10-05 05:47:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-10-05 05:47:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-10-05 05:47:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-10-05 05:47:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-10-05 05:47:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-10-05 05:47:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-10-05 05:47:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-10-05 05:47:42 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table payments 
       modify column payment_method enum ('BANK_TRANSFER','CASH','CHECK','CREDIT_CARD','DEBIT_CARD','INSTALLMENT','INSURANCE','ONLINE') not null
2025-10-05 05:47:42 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 05:47:42 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-05 05:47:43 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-10-05 05:47:43 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-10-05 05:47:43 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-10-05 05:47:44 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-10-05 05:47:44 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-10-05 05:47:44 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-10-05 05:47:44 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-10-05 05:47:44 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-05 05:47:44 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-05 05:47:44 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-10-05 05:47:44 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.82 seconds (process running for 6.089)
2025-10-05 05:47:45 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-10-05 05:47:45 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-10-05 05:47:45 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-10-05 05:47:45 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-10-05 05:47:55 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-05 05:47:55 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-05 05:47:55 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-05 05:47:55 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/export/pdf
2025-10-05 05:47:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:47:55 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/export/pdf
2025-10-05 05:47:55 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:47:55 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:47:55 [http-nio-8080-exec-1] INFO  c.n.a.controller.InvoiceController - تصدير فاتورة PDF رقم 2 بواسطة المستخدم: admin
2025-10-05 05:47:55 [http-nio-8080-exec-1] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 2 by user: 2
2025-10-05 05:47:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 05:47:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 05:47:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 05:47:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 05:47:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 05:47:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:47:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:47:55 [http-nio-8080-exec-1] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء ملف PDF للفاتورة رقم: INV-9-202510-0002
2025-10-05 05:47:55 [http-nio-8080-exec-1] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 05:47:55 [http-nio-8080-exec-1] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 05:47:56 [http-nio-8080-exec-1] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 05:47:56 [http-nio-8080-exec-1] INFO  c.n.a.controller.InvoiceController - تم إنشاء ملف PDF للفاتورة INV-9-202510-0002 بنجاح
2025-10-05 05:49:05 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/preview/pdf
2025-10-05 05:49:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:49:05 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/preview/pdf
2025-10-05 05:49:05 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:49:05 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:49:05 [http-nio-8080-exec-3] INFO  c.n.a.controller.InvoiceController - معاينة فاتورة PDF رقم 2 بواسطة المستخدم: admin
2025-10-05 05:49:05 [http-nio-8080-exec-3] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 2 by user: 2
2025-10-05 05:49:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 05:49:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 05:49:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 05:49:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 05:49:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 05:49:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:49:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:49:05 [http-nio-8080-exec-3] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء ملف PDF للفاتورة رقم: INV-9-202510-0002
2025-10-05 05:49:05 [http-nio-8080-exec-3] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 05:49:05 [http-nio-8080-exec-3] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 05:49:06 [http-nio-8080-exec-3] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 05:49:24 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/preview/pdf
2025-10-05 05:49:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:49:24 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/preview/pdf
2025-10-05 05:49:24 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:49:24 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:49:24 [http-nio-8080-exec-5] INFO  c.n.a.controller.InvoiceController - معاينة فاتورة PDF رقم 2 بواسطة المستخدم: admin
2025-10-05 05:49:24 [http-nio-8080-exec-5] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 2 by user: 2
2025-10-05 05:49:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 05:49:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 05:49:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 05:49:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 05:49:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 05:49:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:49:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:49:24 [http-nio-8080-exec-5] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء ملف PDF للفاتورة رقم: INV-9-202510-0002
2025-10-05 05:49:24 [http-nio-8080-exec-5] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 05:49:24 [http-nio-8080-exec-5] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 05:49:25 [http-nio-8080-exec-5] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 05:50:29 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-10-05 05:50:29 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-10-05 05:50:29 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 05:50:29 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-05 05:50:29 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-05 05:50:30 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 73914 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-10-05 05:50:30 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-05 05:50:30 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-05 05:50:30 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-05 05:50:31 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-05 05:50:31 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 16 JPA repository interfaces.
2025-10-05 05:50:31 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-05 05:50:31 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-05 05:50:31 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-10-05 05:50:31 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-10-05 05:50:31 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1067 ms
2025-10-05 05:50:31 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-05 05:50:31 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-10-05 05:50:31 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-05 05:50:31 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-05 05:50:31 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-05 05:50:32 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6ed1a403
2025-10-05 05:50:32 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-05 05:50:32 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-05 05:50:32 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-05 05:50:32 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-05 05:50:32 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table activity_logs 
       modify column action_type enum ('CREATE','DELETE','PATCH','UPDATE') not null
2025-10-05 05:50:32 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-10-05 05:50:32 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table clinics 
       modify column working_days varchar(20)
2025-10-05 05:50:33 [restartedMain] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table clinics 
       modify column working_days varchar(20)" via JDBC [Data truncated for column 'working_days' at row 13]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table clinics 
       modify column working_days varchar(20)" via JDBC [Data truncated for column 'working_days' at row 13]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1725)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1690)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1635)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1752)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1635)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:179)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:164)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:148)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:148)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.nakqeeb.amancare.AmancareApplication.main(AmancareApplication.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.sql.SQLException: Data truncated for column 'working_days' at row 13
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:837)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:685)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 125 common frames omitted
2025-10-05 05:50:33 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-10-05 05:50:33 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoices 
       modify column payment_method enum ('BANK_TRANSFER','CASH','CHECK','CREDIT_CARD','DEBIT_CARD','INSTALLMENT','INSURANCE','ONLINE')
2025-10-05 05:50:33 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-10-05 05:50:33 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-10-05 05:50:33 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-10-05 05:50:33 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-10-05 05:50:33 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-10-05 05:50:33 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-10-05 05:50:33 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-10-05 05:50:33 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-10-05 05:50:33 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-10-05 05:50:33 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-10-05 05:50:33 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-10-05 05:50:33 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-10-05 05:50:33 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-10-05 05:50:33 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table payments 
       modify column payment_method enum ('BANK_TRANSFER','CASH','CHECK','CREDIT_CARD','DEBIT_CARD','INSTALLMENT','INSURANCE','ONLINE') not null
2025-10-05 05:50:33 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 05:50:33 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-05 05:50:34 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-10-05 05:50:34 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-10-05 05:50:34 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-10-05 05:50:35 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-10-05 05:50:35 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-10-05 05:50:35 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-10-05 05:50:35 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-10-05 05:50:35 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-05 05:50:36 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-05 05:50:36 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-10-05 05:50:36 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.867 seconds (process running for 6.166)
2025-10-05 05:50:36 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-10-05 05:50:36 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-10-05 05:50:36 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-10-05 05:50:36 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-10-05 05:50:54 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-05 05:50:54 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-05 05:50:54 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-05 05:50:54 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/preview/pdf
2025-10-05 05:50:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:50:55 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/preview/pdf
2025-10-05 05:50:55 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:50:55 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:50:55 [http-nio-8080-exec-1] INFO  c.n.a.controller.InvoiceController - معاينة فاتورة PDF رقم 2 بواسطة المستخدم: admin
2025-10-05 05:50:55 [http-nio-8080-exec-1] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 2 by user: 2
2025-10-05 05:50:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 05:50:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 05:50:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 05:50:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 05:50:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 05:50:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:50:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:50:55 [http-nio-8080-exec-1] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء ملف PDF للفاتورة رقم: INV-9-202510-0002
2025-10-05 05:50:55 [http-nio-8080-exec-1] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 05:50:55 [http-nio-8080-exec-1] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 05:50:56 [http-nio-8080-exec-1] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 05:51:10 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/export/receipt
2025-10-05 05:51:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:51:10 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/export/receipt
2025-10-05 05:51:10 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoiceReceipt(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:51:10 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoiceReceipt(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:51:10 [http-nio-8080-exec-3] INFO  c.n.a.controller.InvoiceController - تصدير إيصال PDF للفاتورة 2 بواسطة المستخدم: admin
2025-10-05 05:51:10 [http-nio-8080-exec-3] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 2 by user: 2
2025-10-05 05:51:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 05:51:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 05:51:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 05:51:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 05:51:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 05:51:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:51:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:51:10 [http-nio-8080-exec-3] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء إيصال دفع PDF للفاتورة: INV-9-202510-0002
2025-10-05 05:51:10 [http-nio-8080-exec-3] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 05:51:10 [http-nio-8080-exec-3] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 05:51:11 [http-nio-8080-exec-3] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 05:51:11 [http-nio-8080-exec-3] INFO  c.n.a.controller.InvoiceController - تم إنشاء إيصال PDF للفاتورة INV-9-202510-0002 بنجاح
2025-10-05 05:53:59 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108
2025-10-05 05:53:59 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/payments
2025-10-05 05:53:59 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108
2025-10-05 05:53:59 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/payments
2025-10-05 05:53:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:53:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:53:59 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108
2025-10-05 05:53:59 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/payments
2025-10-05 05:53:59 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:53:59 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:53:59 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:53:59 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:53:59 [http-nio-8080-exec-8] INFO  c.n.a.controller.InvoiceController - Fetching invoice 108 by user: 2
2025-10-05 05:53:59 [http-nio-8080-exec-7] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 108 by user: 2
2025-10-05 05:53:59 [http-nio-8080-exec-8] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 05:53:59 [http-nio-8080-exec-7] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 108 by user: 2
2025-10-05 05:53:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 05:53:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 05:53:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 05:53:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 05:53:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 05:53:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 05:53:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:53:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 05:56:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 05:56:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/statistics?clinicId=9
2025-10-05 05:56:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/statistics?clinicId=9
2025-10-05 05:56:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 05:56:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:56:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:56:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/statistics?clinicId=9
2025-10-05 05:56:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 05:56:58 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:56:58 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:56:58 [http-nio-8080-exec-4] INFO  c.n.a.controller.InvoiceController - Fetching invoice statistics for clinic 9 by user: 2
2025-10-05 05:56:58 [http-nio-8080-exec-4] INFO  c.n.amancare.service.InvoiceService - Fetching invoice statistics for clinic: 9 by user: 2
2025-10-05 05:56:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 05:56:58 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:56:58 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:56:58 [http-nio-8080-exec-3] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 05:56:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 05:56:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=?
2025-10-05 05:56:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 05:56:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
    order by
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 05:56:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 05:56:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 05:56:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 05:56:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 05:56:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:56:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 05:56:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 05:56:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 05:56:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:56:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 05:56:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 05:56:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 05:56:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 05:56:58 [http-nio-8080-exec-3] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-10-05 05:56:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 05:56:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-10-05 05:56:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 05:56:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID')
2025-10-05 05:56:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 05:56:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND p.paymentDate = :date */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.payment_date=?
2025-10-05 05:56:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND YEAR(p.paymentDate) = :year 
        AND MONTH(p.paymentDate) = :month */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and year(p1_0.payment_date)=? 
            and month(p1_0.payment_date)=?
2025-10-05 05:56:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.invoice_date=?
2025-10-05 05:56:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=?
2025-10-05 05:57:08 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2
2025-10-05 05:57:08 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2/payments
2025-10-05 05:57:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2
2025-10-05 05:57:08 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/payments
2025-10-05 05:57:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:57:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:57:08 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/payments
2025-10-05 05:57:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2
2025-10-05 05:57:08 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:57:08 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:57:08 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:57:08 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:57:08 [http-nio-8080-exec-9] INFO  c.n.a.controller.InvoiceController - Fetching invoice 2 by user: 2
2025-10-05 05:57:08 [http-nio-8080-exec-10] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 2 by user: 2
2025-10-05 05:57:08 [http-nio-8080-exec-9] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 2 by user: 2
2025-10-05 05:57:08 [http-nio-8080-exec-10] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 2 by user: 2
2025-10-05 05:57:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 05:57:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 05:57:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 05:57:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 05:57:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 05:57:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 05:57:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:57:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 05:57:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:57:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:57:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:57:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2/payments
2025-10-05 05:57:43 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/payments
2025-10-05 05:57:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:57:43 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/payments
2025-10-05 05:57:43 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:57:43 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:57:43 [http-nio-8080-exec-4] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 2 by user: 2
2025-10-05 05:57:43 [http-nio-8080-exec-4] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 2 by user: 2
2025-10-05 05:57:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 05:57:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 05:57:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:57:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:57:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2/payments
2025-10-05 05:57:54 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2
2025-10-05 05:57:54 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/payments
2025-10-05 05:57:54 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2
2025-10-05 05:57:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:57:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:57:54 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2
2025-10-05 05:57:54 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/payments
2025-10-05 05:57:54 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:57:54 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:57:54 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:57:54 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 05:57:54 [http-nio-8080-exec-9] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 2 by user: 2
2025-10-05 05:57:54 [http-nio-8080-exec-8] INFO  c.n.a.controller.InvoiceController - Fetching invoice 2 by user: 2
2025-10-05 05:57:54 [http-nio-8080-exec-9] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 2 by user: 2
2025-10-05 05:57:54 [http-nio-8080-exec-8] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 2 by user: 2
2025-10-05 05:57:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 05:57:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 05:57:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 05:57:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 05:57:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 05:57:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:57:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 05:57:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:57:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 05:57:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 05:57:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 06:09:55 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 06:09:55 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/statistics
2025-10-05 06:09:55 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/statistics
2025-10-05 06:09:55 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 06:09:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 06:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 06:09:55 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/statistics
2025-10-05 06:09:55 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 06:09:55 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 06:09:55 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 06:09:55 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 06:09:55 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 06:09:55 [http-nio-8080-exec-4] INFO  c.n.a.controller.InvoiceController - Fetching invoice statistics for clinic 9 by user: 14
2025-10-05 06:09:55 [http-nio-8080-exec-6] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 14
2025-10-05 06:09:55 [http-nio-8080-exec-4] INFO  c.n.amancare.service.InvoiceService - Fetching invoice statistics for clinic: 9 by user: 14
2025-10-05 06:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 06:09:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 06:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=?
2025-10-05 06:09:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
    order by
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 06:09:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 06:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 06:09:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 06:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 06:09:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 06:09:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 06:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 06:09:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 06:09:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 06:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 06:09:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 06:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-10-05 06:09:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 06:09:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 06:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 06:09:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 06:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID')
2025-10-05 06:09:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 06:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 06:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND p.paymentDate = :date */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.payment_date=?
2025-10-05 06:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND YEAR(p.paymentDate) = :year 
        AND MONTH(p.paymentDate) = :month */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and year(p1_0.payment_date)=? 
            and month(p1_0.payment_date)=?
2025-10-05 06:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.invoice_date=?
2025-10-05 06:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=?
2025-10-05 06:09:55 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2
2025-10-05 06:09:55 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2/payments
2025-10-05 06:09:55 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/payments
2025-10-05 06:09:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 06:09:55 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/17?clinicId=9
2025-10-05 06:09:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2
2025-10-05 06:09:55 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/17?clinicId=9
2025-10-05 06:09:55 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/payments
2025-10-05 06:09:55 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 06:09:55 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 06:09:55 [http-nio-8080-exec-9] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 2 by user: 2
2025-10-05 06:09:55 [http-nio-8080-exec-9] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 2 by user: 2
2025-10-05 06:09:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 06:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 06:09:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 06:09:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2
2025-10-05 06:09:55 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 06:09:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 06:09:55 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 06:09:55 [http-nio-8080-exec-8] INFO  c.n.a.controller.InvoiceController - Fetching invoice 2 by user: 2
2025-10-05 06:09:55 [http-nio-8080-exec-8] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 2 by user: 2
2025-10-05 06:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 06:09:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 06:09:55 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/17?clinicId=9
2025-10-05 06:09:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 06:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 06:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 06:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 06:09:55 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 06:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 06:09:55 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 06:09:55 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-10-05 06:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 06:09:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 06:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 06:09:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 06:45:31 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=35m28s780ms).
2025-10-05 07:51:38 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h6m6s654ms).
2025-10-05 07:54:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/statistics
2025-10-05 07:54:21 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 07:54:21 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/statistics
2025-10-05 07:54:21 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 07:54:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:54:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:54:21 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 07:54:21 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/statistics
2025-10-05 07:54:21 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 07:54:21 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 07:54:21 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 07:54:21 [http-nio-8080-exec-5] INFO  c.n.a.controller.InvoiceController - Fetching invoice statistics for clinic 9 by user: 14
2025-10-05 07:54:21 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 07:54:21 [http-nio-8080-exec-5] INFO  c.n.amancare.service.InvoiceService - Fetching invoice statistics for clinic: 9 by user: 14
2025-10-05 07:54:21 [http-nio-8080-exec-9] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 14
2025-10-05 07:54:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 07:54:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 07:54:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=?
2025-10-05 07:54:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
    order by
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 07:54:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 07:54:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 07:54:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 07:54:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 07:54:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 07:54:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 07:54:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 07:54:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:54:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-10-05 07:54:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 07:54:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 07:54:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 07:54:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID')
2025-10-05 07:54:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 07:54:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 07:54:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:54:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 07:54:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND p.paymentDate = :date */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.payment_date=?
2025-10-05 07:54:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND YEAR(p.paymentDate) = :year 
        AND MONTH(p.paymentDate) = :month */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and year(p1_0.payment_date)=? 
            and month(p1_0.payment_date)=?
2025-10-05 07:54:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 07:54:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 07:54:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.invoice_date=?
2025-10-05 07:54:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=?
2025-10-05 07:54:21 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2
2025-10-05 07:54:21 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2/payments
2025-10-05 07:54:21 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2
2025-10-05 07:54:21 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/payments
2025-10-05 07:54:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:54:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:54:21 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/payments
2025-10-05 07:54:21 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2
2025-10-05 07:54:21 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 07:54:21 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 07:54:21 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/17?clinicId=9
2025-10-05 07:54:21 [http-nio-8080-exec-6] INFO  c.n.a.controller.InvoiceController - Fetching invoice 2 by user: 2
2025-10-05 07:54:21 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 07:54:21 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 07:54:21 [http-nio-8080-exec-7] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 2 by user: 2
2025-10-05 07:54:21 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/17?clinicId=9
2025-10-05 07:54:21 [http-nio-8080-exec-6] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 2 by user: 2
2025-10-05 07:54:21 [http-nio-8080-exec-7] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 2 by user: 2
2025-10-05 07:54:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 07:54:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 07:54:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 07:54:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 07:54:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 07:54:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 07:54:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:54:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 07:54:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:54:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:54:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:54:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:54:21 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/17?clinicId=9
2025-10-05 07:54:21 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 07:54:21 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 07:54:21 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-10-05 07:54:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 07:54:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 07:55:06 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/statistics
2025-10-05 07:55:06 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 07:55:06 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/statistics
2025-10-05 07:55:06 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 07:55:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:55:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:55:06 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/statistics
2025-10-05 07:55:06 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 07:55:06 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 07:55:06 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 07:55:06 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 07:55:06 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 07:55:06 [http-nio-8080-exec-6] INFO  c.n.a.controller.InvoiceController - Fetching invoice statistics for clinic 9 by user: 14
2025-10-05 07:55:06 [http-nio-8080-exec-6] INFO  c.n.amancare.service.InvoiceService - Fetching invoice statistics for clinic: 9 by user: 14
2025-10-05 07:55:06 [http-nio-8080-exec-7] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 14
2025-10-05 07:55:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 07:55:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 07:55:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=?
2025-10-05 07:55:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
    order by
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 07:55:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 07:55:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 07:55:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 07:55:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 07:55:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 07:55:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:55:06 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2/payments
2025-10-05 07:55:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 07:55:06 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2
2025-10-05 07:55:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 07:55:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 07:55:06 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/payments
2025-10-05 07:55:06 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2
2025-10-05 07:55:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 07:55:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 07:55:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-10-05 07:55:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:55:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 07:55:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:55:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:55:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID')
2025-10-05 07:55:06 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2
2025-10-05 07:55:06 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/payments
2025-10-05 07:55:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 07:55:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 07:55:06 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 07:55:06 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 07:55:06 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 07:55:06 [http-nio-8080-exec-9] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 2 by user: 2
2025-10-05 07:55:06 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 07:55:06 [http-nio-8080-exec-2] INFO  c.n.a.controller.InvoiceController - Fetching invoice 2 by user: 2
2025-10-05 07:55:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 07:55:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND p.paymentDate = :date */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.payment_date=?
2025-10-05 07:55:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND YEAR(p.paymentDate) = :year 
        AND MONTH(p.paymentDate) = :month */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and year(p1_0.payment_date)=? 
            and month(p1_0.payment_date)=?
2025-10-05 07:55:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 07:55:06 [http-nio-8080-exec-9] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 2 by user: 2
2025-10-05 07:55:06 [http-nio-8080-exec-2] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 2 by user: 2
2025-10-05 07:55:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 07:55:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 07:55:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 07:55:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.invoice_date=?
2025-10-05 07:55:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 07:55:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 07:55:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=?
2025-10-05 07:55:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 07:55:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:55:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 07:55:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:55:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:55:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:55:07 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/17?clinicId=9
2025-10-05 07:55:07 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/17?clinicId=9
2025-10-05 07:55:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:55:07 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/17?clinicId=9
2025-10-05 07:55:07 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 07:55:07 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 07:55:07 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-10-05 07:55:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 07:55:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 07:59:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/statistics?clinicId=9
2025-10-05 07:59:59 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 07:59:59 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 07:59:59 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/statistics?clinicId=9
2025-10-05 07:59:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:59:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:59:59 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 07:59:59 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/statistics?clinicId=9
2025-10-05 07:59:59 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 07:59:59 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 07:59:59 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 07:59:59 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 07:59:59 [http-nio-8080-exec-2] INFO  c.n.a.controller.InvoiceController - Fetching invoice statistics for clinic 9 by user: 2
2025-10-05 07:59:59 [http-nio-8080-exec-8] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 07:59:59 [http-nio-8080-exec-2] INFO  c.n.amancare.service.InvoiceService - Fetching invoice statistics for clinic: 9 by user: 2
2025-10-05 07:59:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 07:59:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 07:59:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=?
2025-10-05 07:59:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
    order by
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 07:59:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 07:59:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 07:59:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 07:59:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 07:59:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 07:59:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 07:59:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:59:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 07:59:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 07:59:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 07:59:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-10-05 07:59:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 07:59:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 07:59:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 07:59:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID')
2025-10-05 07:59:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 07:59:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 07:59:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 07:59:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND p.paymentDate = :date */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.payment_date=?
2025-10-05 07:59:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 07:59:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND YEAR(p.paymentDate) = :year 
        AND MONTH(p.paymentDate) = :month */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and year(p1_0.payment_date)=? 
            and month(p1_0.payment_date)=?
2025-10-05 07:59:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.invoice_date=?
2025-10-05 07:59:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=?
2025-10-05 08:03:20 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 08:03:20 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/statistics?clinicId=9
2025-10-05 08:03:20 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 08:03:20 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/statistics?clinicId=9
2025-10-05 08:03:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:03:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:03:20 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 08:03:20 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/statistics?clinicId=9
2025-10-05 08:03:20 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:03:20 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:03:20 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:03:20 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:03:20 [http-nio-8080-exec-4] INFO  c.n.a.controller.InvoiceController - Fetching invoice statistics for clinic 9 by user: 2
2025-10-05 08:03:20 [http-nio-8080-exec-5] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 08:03:20 [http-nio-8080-exec-4] INFO  c.n.amancare.service.InvoiceService - Fetching invoice statistics for clinic: 9 by user: 2
2025-10-05 08:03:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:03:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:03:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=?
2025-10-05 08:03:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
    order by
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 08:03:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 08:03:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:03:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:03:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 08:03:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 08:03:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:03:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:03:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 08:03:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:03:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-10-05 08:03:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 08:03:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:03:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID')
2025-10-05 08:03:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:03:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 08:03:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:03:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND p.paymentDate = :date */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.payment_date=?
2025-10-05 08:03:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND YEAR(p.paymentDate) = :year 
        AND MONTH(p.paymentDate) = :month */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and year(p1_0.payment_date)=? 
            and month(p1_0.payment_date)=?
2025-10-05 08:03:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:03:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:03:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.invoice_date=?
2025-10-05 08:03:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:03:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=?
2025-10-05 08:03:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/payments
2025-10-05 08:03:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108
2025-10-05 08:03:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108
2025-10-05 08:03:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/payments
2025-10-05 08:03:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:03:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108
2025-10-05 08:03:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:03:32 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:03:32 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:03:32 [http-nio-8080-exec-8] INFO  c.n.a.controller.InvoiceController - Fetching invoice 108 by user: 2
2025-10-05 08:03:32 [http-nio-8080-exec-8] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 08:03:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:03:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/payments
2025-10-05 08:03:32 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:03:32 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:03:32 [http-nio-8080-exec-2] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 108 by user: 2
2025-10-05 08:03:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:03:32 [http-nio-8080-exec-2] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 108 by user: 2
2025-10-05 08:03:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:03:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:03:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:03:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 08:03:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:03:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:03:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/preview/pdf?clinicId=9
2025-10-05 08:03:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/preview/pdf?clinicId=9
2025-10-05 08:03:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:03:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/preview/pdf?clinicId=9
2025-10-05 08:03:40 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:03:40 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:03:40 [http-nio-8080-exec-5] INFO  c.n.a.controller.InvoiceController - معاينة فاتورة PDF رقم 108 بواسطة المستخدم: admin
2025-10-05 08:03:40 [http-nio-8080-exec-5] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 08:03:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:03:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:03:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:03:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:03:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:03:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:03:40 [http-nio-8080-exec-5] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء ملف PDF للفاتورة رقم: INV-9-202510-0003
2025-10-05 08:03:40 [http-nio-8080-exec-5] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 08:03:40 [http-nio-8080-exec-5] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 08:03:41 [http-nio-8080-exec-5] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 08:03:56 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/export/pdf?clinicId=9
2025-10-05 08:03:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/export/pdf?clinicId=9
2025-10-05 08:03:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:03:57 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/export/pdf?clinicId=9
2025-10-05 08:03:57 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:03:57 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:03:57 [http-nio-8080-exec-9] INFO  c.n.a.controller.InvoiceController - تصدير فاتورة PDF رقم 108 بواسطة المستخدم: admin
2025-10-05 08:03:57 [http-nio-8080-exec-9] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 08:03:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:03:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:03:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:03:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:03:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:03:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:03:57 [http-nio-8080-exec-9] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء ملف PDF للفاتورة رقم: INV-9-202510-0003
2025-10-05 08:03:57 [http-nio-8080-exec-9] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 08:03:57 [http-nio-8080-exec-9] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 08:03:57 [http-nio-8080-exec-9] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 08:03:57 [http-nio-8080-exec-9] INFO  c.n.a.controller.InvoiceController - تم إنشاء ملف PDF للفاتورة INV-9-202510-0003 بنجاح
2025-10-05 08:04:10 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/statistics?clinicId=9
2025-10-05 08:04:10 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 08:04:10 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/statistics?clinicId=9
2025-10-05 08:04:10 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 08:04:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:04:10 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/statistics?clinicId=9
2025-10-05 08:04:10 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 08:04:10 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:04:10 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:04:10 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:04:10 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:04:10 [http-nio-8080-exec-1] INFO  c.n.a.controller.InvoiceController - Fetching invoice statistics for clinic 9 by user: 2
2025-10-05 08:04:10 [http-nio-8080-exec-10] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 08:04:10 [http-nio-8080-exec-1] INFO  c.n.amancare.service.InvoiceService - Fetching invoice statistics for clinic: 9 by user: 2
2025-10-05 08:04:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=?
2025-10-05 08:04:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
    order by
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 08:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 08:04:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 08:04:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:04:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 08:04:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 08:04:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-10-05 08:04:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:04:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 08:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID')
2025-10-05 08:04:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 08:04:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:04:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND p.paymentDate = :date */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.payment_date=?
2025-10-05 08:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND YEAR(p.paymentDate) = :year 
        AND MONTH(p.paymentDate) = :month */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and year(p1_0.payment_date)=? 
            and month(p1_0.payment_date)=?
2025-10-05 08:04:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.invoice_date=?
2025-10-05 08:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=?
2025-10-05 08:04:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2/payments
2025-10-05 08:04:15 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2
2025-10-05 08:04:15 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2
2025-10-05 08:04:15 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/payments
2025-10-05 08:04:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:04:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:04:15 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/payments
2025-10-05 08:04:15 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2
2025-10-05 08:04:15 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:04:15 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:04:15 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:04:15 [http-nio-8080-exec-7] INFO  c.n.a.controller.InvoiceController - Fetching invoice 2 by user: 2
2025-10-05 08:04:15 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:04:15 [http-nio-8080-exec-9] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 2 by user: 2
2025-10-05 08:04:15 [http-nio-8080-exec-7] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 2 by user: 2
2025-10-05 08:04:15 [http-nio-8080-exec-9] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 2 by user: 2
2025-10-05 08:04:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:04:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:04:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:04:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 08:04:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:04:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:04:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:04:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:04:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:04:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:04:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:04:17 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2/export/receipt?clinicId=9
2025-10-05 08:04:17 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/export/receipt?clinicId=9
2025-10-05 08:04:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:04:17 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/export/receipt?clinicId=9
2025-10-05 08:04:17 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoiceReceipt(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:04:17 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoiceReceipt(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:04:17 [http-nio-8080-exec-8] INFO  c.n.a.controller.InvoiceController - تصدير إيصال PDF للفاتورة 2 بواسطة المستخدم: admin
2025-10-05 08:04:17 [http-nio-8080-exec-8] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 2 by user: 2
2025-10-05 08:04:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:04:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:04:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:04:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:04:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:04:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:04:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:04:17 [http-nio-8080-exec-8] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء إيصال دفع PDF للفاتورة: INV-9-202510-0002
2025-10-05 08:04:17 [http-nio-8080-exec-8] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 08:04:17 [http-nio-8080-exec-8] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 08:04:17 [http-nio-8080-exec-8] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 08:04:17 [http-nio-8080-exec-8] INFO  c.n.a.controller.InvoiceController - تم إنشاء إيصال PDF للفاتورة INV-9-202510-0002 بنجاح
2025-10-05 08:31:12 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-10-05 08:31:12 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-10-05 08:31:12 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-10-05 08:31:12 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-10-05 08:47:45 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2/export/pdf?clinicId=9
2025-10-05 08:47:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/export/pdf?clinicId=9
2025-10-05 08:47:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:47:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/export/pdf?clinicId=9
2025-10-05 08:47:45 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:47:45 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:47:45 [http-nio-8080-exec-5] INFO  c.n.a.controller.InvoiceController - تصدير فاتورة PDF رقم 2 بواسطة المستخدم: admin
2025-10-05 08:47:45 [http-nio-8080-exec-5] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 2 by user: 2
2025-10-05 08:47:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:47:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:47:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:47:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:47:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:47:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:47:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:47:45 [http-nio-8080-exec-5] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء ملف PDF للفاتورة رقم: INV-9-202510-0002
2025-10-05 08:47:45 [http-nio-8080-exec-5] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 08:47:45 [http-nio-8080-exec-5] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 08:47:46 [http-nio-8080-exec-5] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 08:47:46 [http-nio-8080-exec-5] INFO  c.n.a.controller.InvoiceController - تم إنشاء ملف PDF للفاتورة INV-9-202510-0002 بنجاح
2025-10-05 08:47:48 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2/preview/pdf?clinicId=9
2025-10-05 08:47:48 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/preview/pdf?clinicId=9
2025-10-05 08:47:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:47:48 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/preview/pdf?clinicId=9
2025-10-05 08:47:48 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:47:48 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:47:48 [http-nio-8080-exec-9] INFO  c.n.a.controller.InvoiceController - معاينة فاتورة PDF رقم 2 بواسطة المستخدم: admin
2025-10-05 08:47:48 [http-nio-8080-exec-9] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 2 by user: 2
2025-10-05 08:47:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:47:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:47:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:47:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:47:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:47:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:47:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:47:48 [http-nio-8080-exec-9] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء ملف PDF للفاتورة رقم: INV-9-202510-0002
2025-10-05 08:47:48 [http-nio-8080-exec-9] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 08:47:48 [http-nio-8080-exec-9] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 08:47:49 [http-nio-8080-exec-9] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 08:50:51 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-10-05 08:50:51 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-10-05 08:50:51 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 08:50:51 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-05 08:50:51 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-05 08:50:53 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 93392 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-10-05 08:50:53 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-05 08:50:53 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-05 08:50:53 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-05 08:50:54 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-05 08:50:54 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 16 JPA repository interfaces.
2025-10-05 08:50:54 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-05 08:50:54 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-05 08:50:54 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-10-05 08:50:54 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-10-05 08:50:54 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1152 ms
2025-10-05 08:50:54 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-05 08:50:54 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-10-05 08:50:54 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-05 08:50:54 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-05 08:50:54 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-05 08:50:54 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7cae0437
2025-10-05 08:50:54 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-05 08:50:54 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-05 08:50:55 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-05 08:50:55 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-05 08:50:55 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table activity_logs 
       modify column action_type enum ('CREATE','DELETE','PATCH','UPDATE') not null
2025-10-05 08:50:55 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-10-05 08:50:55 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table clinics 
       modify column working_days varchar(20)
2025-10-05 08:50:56 [restartedMain] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table clinics 
       modify column working_days varchar(20)" via JDBC [Data truncated for column 'working_days' at row 13]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table clinics 
       modify column working_days varchar(20)" via JDBC [Data truncated for column 'working_days' at row 13]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1725)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1690)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1635)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1752)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1635)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:179)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:164)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:148)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:148)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.nakqeeb.amancare.AmancareApplication.main(AmancareApplication.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.sql.SQLException: Data truncated for column 'working_days' at row 13
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:837)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:685)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 125 common frames omitted
2025-10-05 08:50:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-10-05 08:50:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoices 
       modify column payment_method enum ('BANK_TRANSFER','CASH','CHECK','CREDIT_CARD','DEBIT_CARD','INSTALLMENT','INSURANCE','ONLINE')
2025-10-05 08:50:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-10-05 08:50:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-10-05 08:50:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-10-05 08:50:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-10-05 08:50:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-10-05 08:50:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-10-05 08:50:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-10-05 08:50:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-10-05 08:50:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-10-05 08:50:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-10-05 08:50:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-10-05 08:50:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-10-05 08:50:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-10-05 08:50:56 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table payments 
       modify column payment_method enum ('BANK_TRANSFER','CASH','CHECK','CREDIT_CARD','DEBIT_CARD','INSTALLMENT','INSURANCE','ONLINE') not null
2025-10-05 08:50:56 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 08:50:56 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-05 08:50:57 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-10-05 08:50:57 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-10-05 08:50:57 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-10-05 08:50:58 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-10-05 08:50:58 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-10-05 08:50:58 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-10-05 08:50:58 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-10-05 08:50:58 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-05 08:50:58 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-05 08:50:58 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-10-05 08:50:58 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 6.007 seconds (process running for 6.453)
2025-10-05 08:50:59 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-10-05 08:50:59 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-10-05 08:50:59 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-10-05 08:50:59 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-10-05 08:51:29 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-05 08:51:29 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-05 08:51:29 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2025-10-05 08:51:29 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2/preview/pdf?clinicId=9
2025-10-05 08:51:29 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/preview/pdf?clinicId=9
2025-10-05 08:51:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:51:29 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/preview/pdf?clinicId=9
2025-10-05 08:51:29 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:51:29 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:51:29 [http-nio-8080-exec-2] INFO  c.n.a.controller.InvoiceController - معاينة فاتورة PDF رقم 2 بواسطة المستخدم: admin
2025-10-05 08:51:29 [http-nio-8080-exec-2] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 2 by user: 2
2025-10-05 08:51:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:51:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:51:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:51:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:51:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:51:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:51:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:51:29 [http-nio-8080-exec-2] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء ملف PDF للفاتورة رقم: INV-9-202510-0002
2025-10-05 08:51:30 [http-nio-8080-exec-2] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 08:51:30 [http-nio-8080-exec-2] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 08:51:31 [http-nio-8080-exec-2] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 08:53:40 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-10-05 08:53:40 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-10-05 08:53:40 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 08:53:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-05 08:53:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-05 08:53:41 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 94120 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-10-05 08:53:41 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-05 08:53:41 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-05 08:53:41 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-05 08:53:42 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-05 08:53:42 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 99 ms. Found 16 JPA repository interfaces.
2025-10-05 08:53:43 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-05 08:53:43 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-05 08:53:43 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-10-05 08:53:43 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-10-05 08:53:43 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1279 ms
2025-10-05 08:53:43 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-05 08:53:43 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-10-05 08:53:43 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-05 08:53:43 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-05 08:53:43 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-05 08:53:43 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6ed1a403
2025-10-05 08:53:43 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-05 08:53:43 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-05 08:53:43 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-05 08:53:44 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-05 08:53:44 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table activity_logs 
       modify column action_type enum ('CREATE','DELETE','PATCH','UPDATE') not null
2025-10-05 08:53:44 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-10-05 08:53:44 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table clinics 
       modify column working_days varchar(20)
2025-10-05 08:53:44 [restartedMain] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table clinics 
       modify column working_days varchar(20)" via JDBC [Data truncated for column 'working_days' at row 13]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table clinics 
       modify column working_days varchar(20)" via JDBC [Data truncated for column 'working_days' at row 13]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1725)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1690)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1635)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1752)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1635)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:179)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:164)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:148)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:148)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.nakqeeb.amancare.AmancareApplication.main(AmancareApplication.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.sql.SQLException: Data truncated for column 'working_days' at row 13
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:837)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:685)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 125 common frames omitted
2025-10-05 08:53:44 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-10-05 08:53:44 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoices 
       modify column payment_method enum ('BANK_TRANSFER','CASH','CHECK','CREDIT_CARD','DEBIT_CARD','INSTALLMENT','INSURANCE','ONLINE')
2025-10-05 08:53:44 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-10-05 08:53:44 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-10-05 08:53:44 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-10-05 08:53:44 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-10-05 08:53:44 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-10-05 08:53:44 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-10-05 08:53:44 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-10-05 08:53:44 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-10-05 08:53:44 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-10-05 08:53:44 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-10-05 08:53:44 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-10-05 08:53:44 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-10-05 08:53:44 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-10-05 08:53:44 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table payments 
       modify column payment_method enum ('BANK_TRANSFER','CASH','CHECK','CREDIT_CARD','DEBIT_CARD','INSTALLMENT','INSURANCE','ONLINE') not null
2025-10-05 08:53:44 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 08:53:45 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-05 08:53:46 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-10-05 08:53:46 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-10-05 08:53:46 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-10-05 08:53:46 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-10-05 08:53:46 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-10-05 08:53:47 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-10-05 08:53:47 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-10-05 08:53:47 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-05 08:53:47 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-05 08:53:47 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-10-05 08:53:47 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 6.375 seconds (process running for 6.667)
2025-10-05 08:53:47 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-10-05 08:53:47 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-10-05 08:53:47 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-10-05 08:53:47 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-10-05 08:54:02 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-05 08:54:02 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-05 08:54:02 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-05 08:54:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2/preview/pdf?clinicId=9
2025-10-05 08:54:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/preview/pdf?clinicId=9
2025-10-05 08:54:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:54:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/preview/pdf?clinicId=9
2025-10-05 08:54:02 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:54:02 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:54:02 [http-nio-8080-exec-2] INFO  c.n.a.controller.InvoiceController - معاينة فاتورة PDF رقم 2 بواسطة المستخدم: admin
2025-10-05 08:54:02 [http-nio-8080-exec-2] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 2 by user: 2
2025-10-05 08:54:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:54:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:54:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:54:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:54:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:54:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:54:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:54:02 [http-nio-8080-exec-2] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء ملف PDF للفاتورة رقم: INV-9-202510-0002
2025-10-05 08:54:02 [http-nio-8080-exec-2] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 08:54:02 [http-nio-8080-exec-2] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 08:54:03 [http-nio-8080-exec-2] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 08:54:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2/preview/pdf?clinicId=9
2025-10-05 08:54:41 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/preview/pdf?clinicId=9
2025-10-05 08:54:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:54:41 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/preview/pdf?clinicId=9
2025-10-05 08:54:41 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:54:41 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:54:41 [http-nio-8080-exec-5] INFO  c.n.a.controller.InvoiceController - معاينة فاتورة PDF رقم 2 بواسطة المستخدم: admin
2025-10-05 08:54:41 [http-nio-8080-exec-5] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 2 by user: 2
2025-10-05 08:54:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:54:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:54:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:54:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:54:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:54:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:54:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:54:41 [http-nio-8080-exec-5] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء ملف PDF للفاتورة رقم: INV-9-202510-0002
2025-10-05 08:54:41 [http-nio-8080-exec-5] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 08:54:41 [http-nio-8080-exec-5] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 08:54:42 [http-nio-8080-exec-5] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 08:54:56 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2/payments
2025-10-05 08:54:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/payments
2025-10-05 08:54:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:54:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/payments
2025-10-05 08:54:56 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:54:56 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:54:56 [http-nio-8080-exec-8] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 2 by user: 2
2025-10-05 08:54:56 [http-nio-8080-exec-8] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 2 by user: 2
2025-10-05 08:54:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:54:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 08:54:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:54:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:55:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2/payments
2025-10-05 08:55:03 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2
2025-10-05 08:55:03 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2
2025-10-05 08:55:03 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/payments
2025-10-05 08:55:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:55:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:55:03 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2
2025-10-05 08:55:03 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/payments
2025-10-05 08:55:03 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:55:03 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:55:03 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:55:03 [http-nio-8080-exec-3] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 2 by user: 2
2025-10-05 08:55:03 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:55:03 [http-nio-8080-exec-2] INFO  c.n.a.controller.InvoiceController - Fetching invoice 2 by user: 2
2025-10-05 08:55:03 [http-nio-8080-exec-3] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 2 by user: 2
2025-10-05 08:55:03 [http-nio-8080-exec-2] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 2 by user: 2
2025-10-05 08:55:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:55:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:55:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:55:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 08:55:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:55:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:55:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:55:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:55:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:55:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:55:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:55:05 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/statistics?clinicId=9
2025-10-05 08:55:05 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 08:55:05 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 08:55:05 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/statistics?clinicId=9
2025-10-05 08:55:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:55:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:55:05 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/statistics?clinicId=9
2025-10-05 08:55:05 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 08:55:05 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:55:05 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:55:05 [http-nio-8080-exec-6] INFO  c.n.a.controller.InvoiceController - Fetching invoice statistics for clinic 9 by user: 2
2025-10-05 08:55:05 [http-nio-8080-exec-6] INFO  c.n.amancare.service.InvoiceService - Fetching invoice statistics for clinic: 9 by user: 2
2025-10-05 08:55:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:55:05 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:55:05 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:55:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=?
2025-10-05 08:55:05 [http-nio-8080-exec-7] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 08:55:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:55:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 08:55:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 08:55:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
    order by
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 08:55:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:55:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:55:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:55:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:55:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:55:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:55:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:55:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:55:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:55:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:55:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:55:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 08:55:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 08:55:05 [http-nio-8080-exec-7] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-10-05 08:55:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-10-05 08:55:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 08:55:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID')
2025-10-05 08:55:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 08:55:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND p.paymentDate = :date */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.payment_date=?
2025-10-05 08:55:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND YEAR(p.paymentDate) = :year 
        AND MONTH(p.paymentDate) = :month */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and year(p1_0.payment_date)=? 
            and month(p1_0.payment_date)=?
2025-10-05 08:55:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.invoice_date=?
2025-10-05 08:55:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=?
2025-10-05 08:55:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2/payments
2025-10-05 08:55:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2
2025-10-05 08:55:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2
2025-10-05 08:55:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/payments
2025-10-05 08:55:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:55:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:55:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2
2025-10-05 08:55:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/payments
2025-10-05 08:55:47 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:55:47 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:55:47 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:55:47 [http-nio-8080-exec-2] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 2 by user: 2
2025-10-05 08:55:47 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:55:47 [http-nio-8080-exec-3] INFO  c.n.a.controller.InvoiceController - Fetching invoice 2 by user: 2
2025-10-05 08:55:47 [http-nio-8080-exec-3] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 2 by user: 2
2025-10-05 08:55:47 [http-nio-8080-exec-2] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 2 by user: 2
2025-10-05 08:55:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:55:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:55:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:55:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:55:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:55:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:55:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 08:55:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:55:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:55:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:55:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:55:51 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2/export/receipt?clinicId=9
2025-10-05 08:55:51 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/export/receipt?clinicId=9
2025-10-05 08:55:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:55:51 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/export/receipt?clinicId=9
2025-10-05 08:55:51 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoiceReceipt(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:55:51 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoiceReceipt(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:55:51 [http-nio-8080-exec-5] INFO  c.n.a.controller.InvoiceController - تصدير إيصال PDF للفاتورة 2 بواسطة المستخدم: admin
2025-10-05 08:55:51 [http-nio-8080-exec-5] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 2 by user: 2
2025-10-05 08:55:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:55:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:55:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:55:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:55:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:55:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:55:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:55:51 [http-nio-8080-exec-5] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء إيصال دفع PDF للفاتورة: INV-9-202510-0002
2025-10-05 08:55:51 [http-nio-8080-exec-5] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 08:55:51 [http-nio-8080-exec-5] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 08:55:52 [http-nio-8080-exec-5] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 08:55:52 [http-nio-8080-exec-5] INFO  c.n.a.controller.InvoiceController - تم إنشاء إيصال PDF للفاتورة INV-9-202510-0002 بنجاح
2025-10-05 08:56:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2/payments
2025-10-05 08:56:08 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/payments
2025-10-05 08:56:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:56:08 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/payments
2025-10-05 08:56:08 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:56:08 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:56:08 [http-nio-8080-exec-8] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 2 by user: 2
2025-10-05 08:56:08 [http-nio-8080-exec-8] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 2 by user: 2
2025-10-05 08:56:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:56:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 08:56:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:56:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:56:14 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/statistics?clinicId=9
2025-10-05 08:56:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 08:56:14 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/statistics?clinicId=9
2025-10-05 08:56:14 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 08:56:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:56:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:56:14 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 08:56:14 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/statistics?clinicId=9
2025-10-05 08:56:14 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:56:14 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:56:14 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:56:14 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:56:14 [http-nio-8080-exec-3] INFO  c.n.a.controller.InvoiceController - Fetching invoice statistics for clinic 9 by user: 2
2025-10-05 08:56:14 [http-nio-8080-exec-4] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 08:56:14 [http-nio-8080-exec-3] INFO  c.n.amancare.service.InvoiceService - Fetching invoice statistics for clinic: 9 by user: 2
2025-10-05 08:56:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:56:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:56:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=?
2025-10-05 08:56:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
    order by
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 08:56:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:56:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 08:56:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:56:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:56:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 08:56:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:56:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:56:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 08:56:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 08:56:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:56:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:56:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-10-05 08:56:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:56:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 08:56:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID')
2025-10-05 08:56:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:56:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 08:56:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:56:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND p.paymentDate = :date */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.payment_date=?
2025-10-05 08:56:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:56:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND YEAR(p.paymentDate) = :year 
        AND MONTH(p.paymentDate) = :month */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and year(p1_0.payment_date)=? 
            and month(p1_0.payment_date)=?
2025-10-05 08:56:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.invoice_date=?
2025-10-05 08:56:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=?
2025-10-05 08:57:07 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 08:57:07 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/statistics?clinicId=9
2025-10-05 08:57:07 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 08:57:07 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/statistics?clinicId=9
2025-10-05 08:57:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:57:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:57:07 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/statistics?clinicId=9
2025-10-05 08:57:07 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 08:57:07 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:57:07 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:57:07 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:57:07 [http-nio-8080-exec-8] INFO  c.n.a.controller.InvoiceController - Fetching invoice statistics for clinic 9 by user: 2
2025-10-05 08:57:07 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:57:07 [http-nio-8080-exec-8] INFO  c.n.amancare.service.InvoiceService - Fetching invoice statistics for clinic: 9 by user: 2
2025-10-05 08:57:07 [http-nio-8080-exec-10] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 08:57:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:57:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:57:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
    order by
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 08:57:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=?
2025-10-05 08:57:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 08:57:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:57:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:57:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 08:57:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:57:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 08:57:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:57:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:57:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 08:57:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:57:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-10-05 08:57:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:57:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 08:57:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID')
2025-10-05 08:57:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:57:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:57:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 08:57:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:57:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND p.paymentDate = :date */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.payment_date=?
2025-10-05 08:57:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:57:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND YEAR(p.paymentDate) = :year 
        AND MONTH(p.paymentDate) = :month */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and year(p1_0.payment_date)=? 
            and month(p1_0.payment_date)=?
2025-10-05 08:57:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.invoice_date=?
2025-10-05 08:57:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=?
2025-10-05 08:57:08 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/17?clinicId=9
2025-10-05 08:57:08 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/17?clinicId=9
2025-10-05 08:57:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:57:08 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/17?clinicId=9
2025-10-05 08:57:08 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 08:57:08 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 08:57:08 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-10-05 08:57:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:57:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:57:08 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/statistics
2025-10-05 08:57:08 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 08:57:08 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 08:57:08 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/statistics
2025-10-05 08:57:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:57:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:57:08 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/statistics
2025-10-05 08:57:08 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 08:57:08 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:57:08 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:57:08 [http-nio-8080-exec-7] INFO  c.n.a.controller.InvoiceController - Fetching invoice statistics for clinic 9 by user: 14
2025-10-05 08:57:08 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:57:08 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:57:08 [http-nio-8080-exec-5] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 14
2025-10-05 08:57:08 [http-nio-8080-exec-7] INFO  c.n.amancare.service.InvoiceService - Fetching invoice statistics for clinic: 9 by user: 14
2025-10-05 08:57:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:57:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:57:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=?
2025-10-05 08:57:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
    order by
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 08:57:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 08:57:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:57:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:57:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 08:57:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 08:57:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:57:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:57:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 08:57:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:57:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:57:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-10-05 08:57:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:57:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 08:57:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID')
2025-10-05 08:57:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:57:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:57:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 08:57:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:57:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND p.paymentDate = :date */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.payment_date=?
2025-10-05 08:57:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND YEAR(p.paymentDate) = :year 
        AND MONTH(p.paymentDate) = :month */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and year(p1_0.payment_date)=? 
            and month(p1_0.payment_date)=?
2025-10-05 08:57:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:57:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.invoice_date=?
2025-10-05 08:57:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=?
2025-10-05 08:57:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/payments
2025-10-05 08:57:54 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108
2025-10-05 08:57:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/payments
2025-10-05 08:57:54 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108
2025-10-05 08:57:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:57:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:57:54 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108
2025-10-05 08:57:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/payments
2025-10-05 08:57:54 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:57:54 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:57:54 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:57:54 [http-nio-8080-exec-4] INFO  c.n.a.controller.InvoiceController - Fetching invoice 108 by user: 2
2025-10-05 08:57:54 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:57:54 [http-nio-8080-exec-3] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 108 by user: 2
2025-10-05 08:57:54 [http-nio-8080-exec-4] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 08:57:54 [http-nio-8080-exec-3] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 108 by user: 2
2025-10-05 08:57:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:57:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:57:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:57:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:57:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:57:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 08:57:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:57:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:57:58 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108
2025-10-05 08:57:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:57:58 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108
2025-10-05 08:57:58 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:57:58 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:57:58 [http-nio-8080-exec-10] INFO  c.n.a.controller.InvoiceController - Fetching invoice 108 by user: 2
2025-10-05 08:57:58 [http-nio-8080-exec-10] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 08:57:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:57:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:57:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:57:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:57:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:57:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:58:03 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/payments
2025-10-05 08:58:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /invoices/108/payments
2025-10-05 08:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:58:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /invoices/108/payments
2025-10-05 08:58:03 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.addPayment(java.lang.Long,com.nakqeeb.amancare.dto.request.CreatePaymentRequest,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:58:03 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.addPayment(java.lang.Long,com.nakqeeb.amancare.dto.request.CreatePaymentRequest,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:58:03 [http-nio-8080-exec-8] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-10-05 08:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Clinic x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            clinics c1_0 
        where
            c1_0.id=?
2025-10-05 08:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 08:58:03 [http-nio-8080-exec-8] INFO  c.n.a.service.ClinicContextService - System Admin Action Logged: User 2 performed CONTEXT_SWITCH on clinic 9 - %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-10-05 08:58:03 [http-nio-8080-exec-8] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-10-05 08:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Clinic x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            clinics c1_0 
        where
            c1_0.id=?
2025-10-05 08:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 08:58:03 [http-nio-8080-exec-8] INFO  c.n.a.service.ClinicContextService - System Admin Action Logged: User 2 performed CONTEXT_SWITCH on clinic 9 - %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-10-05 08:58:03 [http-nio-8080-exec-8] INFO  c.n.a.controller.InvoiceController - SYSTEM_ADMIN adding payment to invoice 108 in clinic: 9
2025-10-05 08:58:03 [http-nio-8080-exec-8] INFO  c.n.amancare.service.InvoiceService - Adding payment to invoice: 108 by user: 2
2025-10-05 08:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:58:03 [http-nio-8080-exec-8] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-10-05 08:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Clinic x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            clinics c1_0 
        where
            c1_0.id=?
2025-10-05 08:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 08:58:03 [http-nio-8080-exec-8] INFO  c.n.a.service.ClinicContextService - System Admin Action Logged: User 2 performed CONTEXT_SWITCH on clinic 9 - %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-10-05 08:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.Payment */insert 
    into
        payments (amount, clinic_id, created_at, created_by, invoice_id, notes, patient_id, payment_date, payment_method, reference_number, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 08:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 08:58:03 [http-nio-8080-exec-8] INFO  c.n.amancare.service.AuditLogService - Audit Log: User 2 performed PAYMENT on PAYMENT #111 in clinic 9
2025-10-05 08:58:03 [http-nio-8080-exec-8] INFO  c.n.amancare.service.InvoiceService - Successfully added payment to invoice: INV-9-202510-0003
2025-10-05 08:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* update
        for com.nakqeeb.amancare.entity.Invoice */update invoices 
    set
        appointment_id=?,
        balance_due=?,
        clinic_id=?,
        created_by=?,
        discount_amount=?,
        due_date=?,
        invoice_date=?,
        invoice_number=?,
        notes=?,
        paid_amount=?,
        patient_id=?,
        payment_method=?,
        status=?,
        subtotal=?,
        tax_amount=?,
        total_amount=?,
        updated_at=? 
    where
        id=?
2025-10-05 08:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.ActivityLog */insert 
    into
        activity_logs (action_type, clinic_id, clinic_name, created_at, description, duration_ms, endpoint, entity_id, entity_name, entity_type, error_message, http_method, ip_address, new_value, old_value, success, timestamp, updated_at, user_agent, user_full_name, user_id, user_role, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 08:58:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108
2025-10-05 08:58:03 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108
2025-10-05 08:58:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:58:03 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108
2025-10-05 08:58:03 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:58:03 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:58:03 [http-nio-8080-exec-2] INFO  c.n.a.controller.InvoiceController - Fetching invoice 108 by user: 2
2025-10-05 08:58:03 [http-nio-8080-exec-2] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 08:58:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:58:03 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/payments
2025-10-05 08:58:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:58:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:58:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:58:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:58:03 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/payments
2025-10-05 08:58:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:58:03 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:58:03 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:58:03 [http-nio-8080-exec-3] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 108 by user: 2
2025-10-05 08:58:03 [http-nio-8080-exec-3] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 108 by user: 2
2025-10-05 08:58:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:58:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:58:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 08:58:03 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108
2025-10-05 08:58:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:58:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:58:04 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108
2025-10-05 08:58:04 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:58:04 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:58:04 [http-nio-8080-exec-4] INFO  c.n.a.controller.InvoiceController - Fetching invoice 108 by user: 2
2025-10-05 08:58:04 [http-nio-8080-exec-4] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 08:58:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:58:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:58:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:58:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:58:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:58:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:58:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/payments
2025-10-05 08:58:09 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/payments
2025-10-05 08:58:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:58:09 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/payments
2025-10-05 08:58:09 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:58:09 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:58:09 [http-nio-8080-exec-9] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 108 by user: 2
2025-10-05 08:58:09 [http-nio-8080-exec-9] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 108 by user: 2
2025-10-05 08:58:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:58:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 08:58:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:58:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/export/receipt?clinicId=9
2025-10-05 08:58:14 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/export/receipt?clinicId=9
2025-10-05 08:58:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:58:14 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/export/receipt?clinicId=9
2025-10-05 08:58:14 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoiceReceipt(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:58:14 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoiceReceipt(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:58:14 [http-nio-8080-exec-2] INFO  c.n.a.controller.InvoiceController - تصدير إيصال PDF للفاتورة 108 بواسطة المستخدم: admin
2025-10-05 08:58:14 [http-nio-8080-exec-2] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 08:58:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:58:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:58:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:58:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:58:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:58:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:58:14 [http-nio-8080-exec-2] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء إيصال دفع PDF للفاتورة: INV-9-202510-0003
2025-10-05 08:58:14 [http-nio-8080-exec-2] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 08:58:14 [http-nio-8080-exec-2] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 08:58:15 [http-nio-8080-exec-2] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 08:58:15 [http-nio-8080-exec-2] INFO  c.n.a.controller.InvoiceController - تم إنشاء إيصال PDF للفاتورة INV-9-202510-0003 بنجاح
2025-10-05 08:58:48 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/preview/pdf?clinicId=9
2025-10-05 08:58:48 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/preview/pdf?clinicId=9
2025-10-05 08:58:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:58:48 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/preview/pdf?clinicId=9
2025-10-05 08:58:48 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:58:48 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:58:48 [http-nio-8080-exec-7] INFO  c.n.a.controller.InvoiceController - معاينة فاتورة PDF رقم 108 بواسطة المستخدم: admin
2025-10-05 08:58:48 [http-nio-8080-exec-7] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 08:58:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:58:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:58:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:58:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:58:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:58:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:58:48 [http-nio-8080-exec-7] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء ملف PDF للفاتورة رقم: INV-9-202510-0003
2025-10-05 08:58:48 [http-nio-8080-exec-7] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 08:58:48 [http-nio-8080-exec-7] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 08:58:49 [http-nio-8080-exec-7] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 08:59:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/export/receipt?clinicId=9
2025-10-05 08:59:01 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/export/receipt?clinicId=9
2025-10-05 08:59:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:59:01 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/export/receipt?clinicId=9
2025-10-05 08:59:01 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoiceReceipt(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:59:01 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoiceReceipt(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:59:01 [http-nio-8080-exec-6] INFO  c.n.a.controller.InvoiceController - تصدير إيصال PDF للفاتورة 108 بواسطة المستخدم: admin
2025-10-05 08:59:01 [http-nio-8080-exec-6] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 08:59:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:59:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:59:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:59:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:59:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:59:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:59:01 [http-nio-8080-exec-6] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء إيصال دفع PDF للفاتورة: INV-9-202510-0003
2025-10-05 08:59:01 [http-nio-8080-exec-6] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 08:59:01 [http-nio-8080-exec-6] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 08:59:02 [http-nio-8080-exec-6] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 08:59:02 [http-nio-8080-exec-6] INFO  c.n.a.controller.InvoiceController - تم إنشاء إيصال PDF للفاتورة INV-9-202510-0003 بنجاح
2025-10-05 08:59:11 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108
2025-10-05 08:59:11 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/payments
2025-10-05 08:59:11 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/payments
2025-10-05 08:59:11 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108
2025-10-05 08:59:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:59:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:59:11 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/payments
2025-10-05 08:59:11 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108
2025-10-05 08:59:11 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:59:11 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:59:11 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:59:11 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:59:11 [http-nio-8080-exec-2] INFO  c.n.a.controller.InvoiceController - Fetching invoice 108 by user: 2
2025-10-05 08:59:11 [http-nio-8080-exec-3] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 108 by user: 2
2025-10-05 08:59:11 [http-nio-8080-exec-2] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 08:59:11 [http-nio-8080-exec-3] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 108 by user: 2
2025-10-05 08:59:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:59:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:59:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:59:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:59:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 08:59:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:59:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:59:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:59:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:59:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108
2025-10-05 08:59:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:59:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108
2025-10-05 08:59:15 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:59:15 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:59:15 [http-nio-8080-exec-10] INFO  c.n.a.controller.InvoiceController - Fetching invoice 108 by user: 2
2025-10-05 08:59:15 [http-nio-8080-exec-10] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 08:59:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:59:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:59:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:59:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:59:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:59:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:59:45 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/payments
2025-10-05 08:59:45 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /invoices/108/payments
2025-10-05 08:59:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:59:45 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /invoices/108/payments
2025-10-05 08:59:45 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.addPayment(java.lang.Long,com.nakqeeb.amancare.dto.request.CreatePaymentRequest,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:59:45 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.addPayment(java.lang.Long,com.nakqeeb.amancare.dto.request.CreatePaymentRequest,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:59:45 [http-nio-8080-exec-9] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-10-05 08:59:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Clinic x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            clinics c1_0 
        where
            c1_0.id=?
2025-10-05 08:59:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 08:59:45 [http-nio-8080-exec-9] INFO  c.n.a.service.ClinicContextService - System Admin Action Logged: User 2 performed CONTEXT_SWITCH on clinic 9 - %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-10-05 08:59:45 [http-nio-8080-exec-9] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-10-05 08:59:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Clinic x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            clinics c1_0 
        where
            c1_0.id=?
2025-10-05 08:59:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 08:59:45 [http-nio-8080-exec-9] INFO  c.n.a.service.ClinicContextService - System Admin Action Logged: User 2 performed CONTEXT_SWITCH on clinic 9 - %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-10-05 08:59:45 [http-nio-8080-exec-9] INFO  c.n.a.controller.InvoiceController - SYSTEM_ADMIN adding payment to invoice 108 in clinic: 9
2025-10-05 08:59:45 [http-nio-8080-exec-9] INFO  c.n.amancare.service.InvoiceService - Adding payment to invoice: 108 by user: 2
2025-10-05 08:59:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:59:45 [http-nio-8080-exec-9] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-10-05 08:59:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Clinic x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            clinics c1_0 
        where
            c1_0.id=?
2025-10-05 08:59:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 08:59:45 [http-nio-8080-exec-9] INFO  c.n.a.service.ClinicContextService - System Admin Action Logged: User 2 performed CONTEXT_SWITCH on clinic 9 - %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-10-05 08:59:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:59:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.Payment */insert 
    into
        payments (amount, clinic_id, created_at, created_by, invoice_id, notes, patient_id, payment_date, payment_method, reference_number, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 08:59:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 08:59:45 [http-nio-8080-exec-9] INFO  c.n.amancare.service.AuditLogService - Audit Log: User 2 performed PAYMENT on PAYMENT #112 in clinic 9
2025-10-05 08:59:45 [http-nio-8080-exec-9] INFO  c.n.amancare.service.InvoiceService - Successfully added payment to invoice: INV-9-202510-0003
2025-10-05 08:59:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* update
        for com.nakqeeb.amancare.entity.Invoice */update invoices 
    set
        appointment_id=?,
        balance_due=?,
        clinic_id=?,
        created_by=?,
        discount_amount=?,
        due_date=?,
        invoice_date=?,
        invoice_number=?,
        notes=?,
        paid_amount=?,
        patient_id=?,
        payment_method=?,
        status=?,
        subtotal=?,
        tax_amount=?,
        total_amount=?,
        updated_at=? 
    where
        id=?
2025-10-05 08:59:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:59:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:59:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.ActivityLog */insert 
    into
        activity_logs (action_type, clinic_id, clinic_name, created_at, description, duration_ms, endpoint, entity_id, entity_name, entity_type, error_message, http_method, ip_address, new_value, old_value, success, timestamp, updated_at, user_agent, user_full_name, user_id, user_role, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 08:59:45 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108
2025-10-05 08:59:45 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108
2025-10-05 08:59:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:59:45 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108
2025-10-05 08:59:45 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:59:45 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:59:45 [http-nio-8080-exec-1] INFO  c.n.a.controller.InvoiceController - Fetching invoice 108 by user: 2
2025-10-05 08:59:45 [http-nio-8080-exec-1] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 08:59:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:59:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:59:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:59:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:59:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/payments
2025-10-05 08:59:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:59:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:59:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:59:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/payments
2025-10-05 08:59:45 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:59:45 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:59:45 [http-nio-8080-exec-3] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 108 by user: 2
2025-10-05 08:59:45 [http-nio-8080-exec-3] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 108 by user: 2
2025-10-05 08:59:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:59:45 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108
2025-10-05 08:59:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:59:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 08:59:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:59:45 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108
2025-10-05 08:59:45 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:59:45 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:59:45 [http-nio-8080-exec-2] INFO  c.n.a.controller.InvoiceController - Fetching invoice 108 by user: 2
2025-10-05 08:59:45 [http-nio-8080-exec-2] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 08:59:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:59:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:59:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:59:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:59:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:59:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:59:53 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/payments
2025-10-05 08:59:53 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/payments
2025-10-05 08:59:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:59:53 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/payments
2025-10-05 08:59:53 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:59:53 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:59:53 [http-nio-8080-exec-6] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 108 by user: 2
2025-10-05 08:59:53 [http-nio-8080-exec-6] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 108 by user: 2
2025-10-05 08:59:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:59:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 08:59:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:59:55 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/export/receipt?clinicId=9
2025-10-05 08:59:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/export/receipt?clinicId=9
2025-10-05 08:59:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:59:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/export/receipt?clinicId=9
2025-10-05 08:59:55 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoiceReceipt(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:59:55 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoiceReceipt(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 08:59:55 [http-nio-8080-exec-8] INFO  c.n.a.controller.InvoiceController - تصدير إيصال PDF للفاتورة 108 بواسطة المستخدم: admin
2025-10-05 08:59:55 [http-nio-8080-exec-8] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 08:59:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 08:59:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 08:59:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 08:59:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 08:59:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 08:59:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 08:59:55 [http-nio-8080-exec-8] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء إيصال دفع PDF للفاتورة: INV-9-202510-0003
2025-10-05 08:59:55 [http-nio-8080-exec-8] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 08:59:55 [http-nio-8080-exec-8] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 08:59:55 [http-nio-8080-exec-8] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 08:59:55 [http-nio-8080-exec-8] INFO  c.n.a.controller.InvoiceController - تم إنشاء إيصال PDF للفاتورة INV-9-202510-0003 بنجاح
2025-10-05 09:00:49 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/preview/pdf?clinicId=9
2025-10-05 09:00:49 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/preview/pdf?clinicId=9
2025-10-05 09:00:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:00:49 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/preview/pdf?clinicId=9
2025-10-05 09:00:49 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:00:49 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:00:49 [http-nio-8080-exec-2] INFO  c.n.a.controller.InvoiceController - معاينة فاتورة PDF رقم 108 بواسطة المستخدم: admin
2025-10-05 09:00:49 [http-nio-8080-exec-2] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 09:00:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:00:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:00:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:00:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:00:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:00:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:00:49 [http-nio-8080-exec-2] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء ملف PDF للفاتورة رقم: INV-9-202510-0003
2025-10-05 09:00:49 [http-nio-8080-exec-2] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 09:00:49 [http-nio-8080-exec-2] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 09:00:49 [http-nio-8080-exec-2] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 09:01:20 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/preview/pdf?clinicId=9
2025-10-05 09:01:20 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/preview/pdf?clinicId=9
2025-10-05 09:01:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:01:20 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/preview/pdf?clinicId=9
2025-10-05 09:01:20 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:01:20 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:01:20 [http-nio-8080-exec-10] INFO  c.n.a.controller.InvoiceController - معاينة فاتورة PDF رقم 108 بواسطة المستخدم: admin
2025-10-05 09:01:20 [http-nio-8080-exec-10] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 09:01:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:01:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:01:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:01:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:01:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:01:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:01:20 [http-nio-8080-exec-10] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء ملف PDF للفاتورة رقم: INV-9-202510-0003
2025-10-05 09:01:20 [http-nio-8080-exec-10] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 09:01:20 [http-nio-8080-exec-10] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 09:01:21 [http-nio-8080-exec-10] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 09:01:38 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/preview/pdf?clinicId=9
2025-10-05 09:01:38 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/preview/pdf?clinicId=9
2025-10-05 09:01:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:01:38 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/preview/pdf?clinicId=9
2025-10-05 09:01:38 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:01:38 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:01:38 [http-nio-8080-exec-9] INFO  c.n.a.controller.InvoiceController - معاينة فاتورة PDF رقم 108 بواسطة المستخدم: admin
2025-10-05 09:01:38 [http-nio-8080-exec-9] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 09:01:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:01:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:01:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:01:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:01:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:01:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:01:38 [http-nio-8080-exec-9] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء ملف PDF للفاتورة رقم: INV-9-202510-0003
2025-10-05 09:01:38 [http-nio-8080-exec-9] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 09:01:38 [http-nio-8080-exec-9] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 09:01:38 [http-nio-8080-exec-9] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 09:01:43 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/export/receipt?clinicId=9
2025-10-05 09:01:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/export/receipt?clinicId=9
2025-10-05 09:01:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:01:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/export/receipt?clinicId=9
2025-10-05 09:01:43 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoiceReceipt(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:01:43 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoiceReceipt(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:01:43 [http-nio-8080-exec-3] INFO  c.n.a.controller.InvoiceController - تصدير إيصال PDF للفاتورة 108 بواسطة المستخدم: admin
2025-10-05 09:01:43 [http-nio-8080-exec-3] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 09:01:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:01:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:01:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:01:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:01:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:01:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:01:43 [http-nio-8080-exec-3] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء إيصال دفع PDF للفاتورة: INV-9-202510-0003
2025-10-05 09:01:43 [http-nio-8080-exec-3] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 09:01:43 [http-nio-8080-exec-3] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 09:01:44 [http-nio-8080-exec-3] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 09:01:44 [http-nio-8080-exec-3] INFO  c.n.a.controller.InvoiceController - تم إنشاء إيصال PDF للفاتورة INV-9-202510-0003 بنجاح
2025-10-05 09:04:23 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/export/receipt?clinicId=9
2025-10-05 09:04:23 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/export/receipt?clinicId=9
2025-10-05 09:04:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:04:23 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/export/receipt?clinicId=9
2025-10-05 09:04:23 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoiceReceipt(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:04:23 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.exportInvoiceReceipt(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:04:23 [http-nio-8080-exec-7] INFO  c.n.a.controller.InvoiceController - تصدير إيصال PDF للفاتورة 108 بواسطة المستخدم: admin
2025-10-05 09:04:23 [http-nio-8080-exec-7] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 09:04:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:04:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:04:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:04:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:04:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:04:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:04:23 [http-nio-8080-exec-7] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء إيصال دفع PDF للفاتورة: INV-9-202510-0003
2025-10-05 09:04:23 [http-nio-8080-exec-7] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 09:04:23 [http-nio-8080-exec-7] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 09:04:23 [http-nio-8080-exec-7] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 09:04:23 [http-nio-8080-exec-7] INFO  c.n.a.controller.InvoiceController - تم إنشاء إيصال PDF للفاتورة INV-9-202510-0003 بنجاح
2025-10-05 09:04:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108
2025-10-05 09:04:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/payments
2025-10-05 09:04:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108
2025-10-05 09:04:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/payments
2025-10-05 09:04:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:04:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:04:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108
2025-10-05 09:04:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/payments
2025-10-05 09:04:32 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:04:32 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:04:32 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:04:32 [http-nio-8080-exec-9] INFO  c.n.a.controller.InvoiceController - Fetching invoice 108 by user: 2
2025-10-05 09:04:32 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:04:32 [http-nio-8080-exec-8] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 108 by user: 2
2025-10-05 09:04:32 [http-nio-8080-exec-8] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 108 by user: 2
2025-10-05 09:04:32 [http-nio-8080-exec-9] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 09:04:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:04:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:04:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:04:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:04:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:04:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 09:04:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:04:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:04:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:04:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108
2025-10-05 09:04:43 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108
2025-10-05 09:04:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:04:43 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108
2025-10-05 09:04:43 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:04:43 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:04:43 [http-nio-8080-exec-4] INFO  c.n.a.controller.InvoiceController - Fetching invoice 108 by user: 2
2025-10-05 09:04:43 [http-nio-8080-exec-4] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 09:04:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:04:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:04:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:04:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:04:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:04:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:05:56 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/payments
2025-10-05 09:05:56 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /invoices/108/payments
2025-10-05 09:05:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:05:56 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /invoices/108/payments
2025-10-05 09:05:56 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.addPayment(java.lang.Long,com.nakqeeb.amancare.dto.request.CreatePaymentRequest,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:05:56 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.addPayment(java.lang.Long,com.nakqeeb.amancare.dto.request.CreatePaymentRequest,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:05:56 [http-nio-8080-exec-5] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-10-05 09:05:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Clinic x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            clinics c1_0 
        where
            c1_0.id=?
2025-10-05 09:05:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 09:05:56 [http-nio-8080-exec-5] INFO  c.n.a.service.ClinicContextService - System Admin Action Logged: User 2 performed CONTEXT_SWITCH on clinic 9 - %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-10-05 09:05:56 [http-nio-8080-exec-5] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-10-05 09:05:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Clinic x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            clinics c1_0 
        where
            c1_0.id=?
2025-10-05 09:05:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 09:05:56 [http-nio-8080-exec-5] INFO  c.n.a.service.ClinicContextService - System Admin Action Logged: User 2 performed CONTEXT_SWITCH on clinic 9 - %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-10-05 09:05:56 [http-nio-8080-exec-5] INFO  c.n.a.controller.InvoiceController - SYSTEM_ADMIN adding payment to invoice 108 in clinic: 9
2025-10-05 09:05:56 [http-nio-8080-exec-5] INFO  c.n.amancare.service.InvoiceService - Adding payment to invoice: 108 by user: 2
2025-10-05 09:05:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:05:56 [http-nio-8080-exec-5] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-10-05 09:05:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Clinic x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            clinics c1_0 
        where
            c1_0.id=?
2025-10-05 09:05:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 09:05:56 [http-nio-8080-exec-5] INFO  c.n.a.service.ClinicContextService - System Admin Action Logged: User 2 performed CONTEXT_SWITCH on clinic 9 - %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-10-05 09:05:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:05:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.Payment */insert 
    into
        payments (amount, clinic_id, created_at, created_by, invoice_id, notes, patient_id, payment_date, payment_method, reference_number, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 09:05:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 09:05:56 [http-nio-8080-exec-5] INFO  c.n.amancare.service.AuditLogService - Audit Log: User 2 performed PAYMENT on PAYMENT #113 in clinic 9
2025-10-05 09:05:56 [http-nio-8080-exec-5] INFO  c.n.amancare.service.InvoiceService - Successfully added payment to invoice: INV-9-202510-0003
2025-10-05 09:05:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* update
        for com.nakqeeb.amancare.entity.Invoice */update invoices 
    set
        appointment_id=?,
        balance_due=?,
        clinic_id=?,
        created_by=?,
        discount_amount=?,
        due_date=?,
        invoice_date=?,
        invoice_number=?,
        notes=?,
        paid_amount=?,
        patient_id=?,
        payment_method=?,
        status=?,
        subtotal=?,
        tax_amount=?,
        total_amount=?,
        updated_at=? 
    where
        id=?
2025-10-05 09:05:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:05:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:05:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.ActivityLog */insert 
    into
        activity_logs (action_type, clinic_id, clinic_name, created_at, description, duration_ms, endpoint, entity_id, entity_name, entity_type, error_message, http_method, ip_address, new_value, old_value, success, timestamp, updated_at, user_agent, user_full_name, user_id, user_role, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 09:05:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108
2025-10-05 09:05:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108
2025-10-05 09:05:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:05:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108
2025-10-05 09:05:56 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:05:56 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:05:56 [http-nio-8080-exec-9] INFO  c.n.a.controller.InvoiceController - Fetching invoice 108 by user: 2
2025-10-05 09:05:56 [http-nio-8080-exec-9] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 09:05:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:05:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:05:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:05:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/payments
2025-10-05 09:05:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:05:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:05:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:05:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:05:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/payments
2025-10-05 09:05:56 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:05:56 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:05:56 [http-nio-8080-exec-8] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 108 by user: 2
2025-10-05 09:05:56 [http-nio-8080-exec-8] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 108 by user: 2
2025-10-05 09:05:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:05:56 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108
2025-10-05 09:05:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:05:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 09:05:56 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108
2025-10-05 09:05:56 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:05:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:05:56 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:05:56 [http-nio-8080-exec-1] INFO  c.n.a.controller.InvoiceController - Fetching invoice 108 by user: 2
2025-10-05 09:05:56 [http-nio-8080-exec-1] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 09:05:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:05:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:05:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:05:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:05:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:05:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:07:03 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:07:03 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/statistics?clinicId=9
2025-10-05 09:07:03 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/statistics?clinicId=9
2025-10-05 09:07:03 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:07:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:07:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:07:03 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/statistics?clinicId=9
2025-10-05 09:07:03 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:07:03 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:07:03 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:07:03 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:07:03 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:07:03 [http-nio-8080-exec-5] INFO  c.n.a.controller.InvoiceController - Fetching invoice statistics for clinic 9 by user: 2
2025-10-05 09:07:03 [http-nio-8080-exec-6] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 09:07:03 [http-nio-8080-exec-5] INFO  c.n.amancare.service.InvoiceService - Fetching invoice statistics for clinic: 9 by user: 2
2025-10-05 09:07:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:07:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:07:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=?
2025-10-05 09:07:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
    order by
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 09:07:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:07:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:07:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:07:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:07:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:07:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 09:07:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:07:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:07:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-10-05 09:07:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:07:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 09:07:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:07:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:07:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID')
2025-10-05 09:07:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 09:07:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND p.paymentDate = :date */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.payment_date=?
2025-10-05 09:07:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:07:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:07:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND YEAR(p.paymentDate) = :year 
        AND MONTH(p.paymentDate) = :month */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and year(p1_0.payment_date)=? 
            and month(p1_0.payment_date)=?
2025-10-05 09:07:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:07:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.invoice_date=?
2025-10-05 09:07:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:07:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=?
2025-10-05 09:07:09 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2
2025-10-05 09:07:09 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/2/payments
2025-10-05 09:07:09 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2
2025-10-05 09:07:09 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/2/payments
2025-10-05 09:07:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:07:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:07:09 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2
2025-10-05 09:07:09 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/2/payments
2025-10-05 09:07:09 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:07:09 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:07:09 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:07:09 [http-nio-8080-exec-4] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 2 by user: 2
2025-10-05 09:07:09 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:07:09 [http-nio-8080-exec-3] INFO  c.n.a.controller.InvoiceController - Fetching invoice 2 by user: 2
2025-10-05 09:07:09 [http-nio-8080-exec-4] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 2 by user: 2
2025-10-05 09:07:09 [http-nio-8080-exec-3] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 2 by user: 2
2025-10-05 09:07:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:07:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:07:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:07:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 09:07:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:07:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:07:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:07:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:07:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:07:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:07:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:07:13 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:07:13 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/statistics?clinicId=9
2025-10-05 09:07:13 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/statistics?clinicId=9
2025-10-05 09:07:13 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:07:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:07:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:07:13 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/statistics?clinicId=9
2025-10-05 09:07:13 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:07:13 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:07:13 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:07:13 [http-nio-8080-exec-9] INFO  c.n.a.controller.InvoiceController - Fetching invoice statistics for clinic 9 by user: 2
2025-10-05 09:07:13 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:07:13 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:07:13 [http-nio-8080-exec-9] INFO  c.n.amancare.service.InvoiceService - Fetching invoice statistics for clinic: 9 by user: 2
2025-10-05 09:07:13 [http-nio-8080-exec-8] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 09:07:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:07:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:07:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=?
2025-10-05 09:07:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
    order by
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 09:07:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:07:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:07:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:07:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:07:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:07:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 09:07:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:07:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:07:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:07:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:07:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-10-05 09:07:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:07:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 09:07:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:07:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID')
2025-10-05 09:07:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:07:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 09:07:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:07:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND p.paymentDate = :date */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.payment_date=?
2025-10-05 09:07:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:07:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND YEAR(p.paymentDate) = :year 
        AND MONTH(p.paymentDate) = :month */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and year(p1_0.payment_date)=? 
            and month(p1_0.payment_date)=?
2025-10-05 09:07:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.invoice_date=?
2025-10-05 09:07:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=?
2025-10-05 09:07:39 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108
2025-10-05 09:07:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/payments
2025-10-05 09:07:39 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108
2025-10-05 09:07:39 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/payments
2025-10-05 09:07:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:07:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:07:39 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/payments
2025-10-05 09:07:39 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108
2025-10-05 09:07:39 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:07:39 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:07:39 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:07:39 [http-nio-8080-exec-7] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 108 by user: 14
2025-10-05 09:07:39 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:07:39 [http-nio-8080-exec-10] INFO  c.n.a.controller.InvoiceController - Fetching invoice 108 by user: 14
2025-10-05 09:07:39 [http-nio-8080-exec-10] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 14
2025-10-05 09:07:39 [http-nio-8080-exec-7] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 108 by user: 14
2025-10-05 09:07:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:07:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:07:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:07:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:07:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 09:07:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:07:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:07:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:07:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:07:45 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/preview/pdf
2025-10-05 09:07:45 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/preview/pdf
2025-10-05 09:07:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:07:45 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/preview/pdf
2025-10-05 09:07:45 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:07:45 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.previewInvoicePdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:07:45 [http-nio-8080-exec-9] INFO  c.n.a.controller.InvoiceController - معاينة فاتورة PDF رقم 108 بواسطة المستخدم: khalid.admin
2025-10-05 09:07:45 [http-nio-8080-exec-9] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 14
2025-10-05 09:07:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:07:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:07:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:07:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:07:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:07:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:07:45 [http-nio-8080-exec-9] INFO  c.n.a.service.pdf.PdfInvoiceService - إنشاء ملف PDF للفاتورة رقم: INV-9-202510-0003
2025-10-05 09:07:45 [http-nio-8080-exec-9] WARN  c.n.a.service.pdf.PdfInvoiceService - Font not found: Amiri-Regular.ttf
2025-10-05 09:07:45 [http-nio-8080-exec-9] INFO  c.n.a.service.pdf.PdfInvoiceService - تم تحميل الخط: fonts/NotoSansArabic-Regular.ttf
2025-10-05 09:07:46 [http-nio-8080-exec-9] INFO  c.n.a.service.pdf.PdfInvoiceService - تم إنشاء ملف PDF بنجاح
2025-10-05 09:08:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/cancel?reason=%D8%A8%D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A7%D9%84%D9%85%D8%AF%D9%8A%D8%B1
2025-10-05 09:08:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /invoices/108/cancel?reason=%D8%A8%D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A7%D9%84%D9%85%D8%AF%D9%8A%D8%B1
2025-10-05 09:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:08:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /invoices/108/cancel?reason=%D8%A8%D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A7%D9%84%D9%85%D8%AF%D9%8A%D8%B1
2025-10-05 09:08:31 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.cancelInvoice(java.lang.Long,java.lang.String,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:08:31 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.cancelInvoice(java.lang.Long,java.lang.String,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:08:31 [http-nio-8080-exec-1] INFO  c.n.amancare.service.InvoiceService - Cancelling invoice: 108 by user: 14 - Reason: بطلب من المدير
2025-10-05 09:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 09:08:31 [http-nio-8080-exec-1] INFO  c.n.amancare.service.AuditLogService - Audit Log: User 14 performed CANCEL on INVOICE #108 in clinic 9
2025-10-05 09:08:31 [http-nio-8080-exec-1] INFO  c.n.amancare.service.InvoiceService - Successfully cancelled invoice: INV-9-202510-0003
2025-10-05 09:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* update
        for com.nakqeeb.amancare.entity.Invoice */update invoices 
    set
        appointment_id=?,
        balance_due=?,
        clinic_id=?,
        created_by=?,
        discount_amount=?,
        due_date=?,
        invoice_date=?,
        invoice_number=?,
        notes=?,
        paid_amount=?,
        patient_id=?,
        payment_method=?,
        status=?,
        subtotal=?,
        tax_amount=?,
        total_amount=?,
        updated_at=? 
    where
        id=?
2025-10-05 09:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.ActivityLog */insert 
    into
        activity_logs (action_type, clinic_id, clinic_name, created_at, description, duration_ms, endpoint, entity_id, entity_name, entity_type, error_message, http_method, ip_address, new_value, old_value, success, timestamp, updated_at, user_agent, user_full_name, user_id, user_role, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 09:08:31 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108
2025-10-05 09:08:31 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108
2025-10-05 09:08:31 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:08:31 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108
2025-10-05 09:08:31 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:08:31 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:08:31 [http-nio-8080-exec-4] INFO  c.n.a.controller.InvoiceController - Fetching invoice 108 by user: 14
2025-10-05 09:08:31 [http-nio-8080-exec-4] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 14
2025-10-05 09:08:31 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:08:31 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:08:31 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:08:31 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:08:31 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:08:31 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:08:40 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108
2025-10-05 09:08:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108
2025-10-05 09:08:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:08:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108
2025-10-05 09:08:40 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:08:40 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:08:40 [http-nio-8080-exec-5] INFO  c.n.a.controller.InvoiceController - Fetching invoice 108 by user: 14
2025-10-05 09:08:40 [http-nio-8080-exec-5] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 14
2025-10-05 09:08:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:08:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:08:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:08:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:08:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:08:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:08:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108
2025-10-05 09:08:44 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/payments
2025-10-05 09:08:44 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/payments
2025-10-05 09:08:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:08:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:08:44 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/payments
2025-10-05 09:08:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108
2025-10-05 09:08:44 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:08:44 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:08:44 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:08:44 [http-nio-8080-exec-8] INFO  c.n.a.controller.InvoiceController - Fetching invoice 108 by user: 14
2025-10-05 09:08:44 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:08:44 [http-nio-8080-exec-2] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 108 by user: 14
2025-10-05 09:08:44 [http-nio-8080-exec-2] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 108 by user: 14
2025-10-05 09:08:44 [http-nio-8080-exec-8] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 14
2025-10-05 09:08:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:08:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:08:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:08:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:08:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:08:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 09:08:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:08:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:08:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:08:46 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/statistics
2025-10-05 09:08:46 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:08:46 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:08:46 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/statistics
2025-10-05 09:08:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:08:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:08:47 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:08:47 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/statistics
2025-10-05 09:08:47 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:08:47 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:08:47 [http-nio-8080-exec-4] INFO  c.n.a.controller.InvoiceController - Fetching invoice statistics for clinic 9 by user: 14
2025-10-05 09:08:47 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:08:47 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:08:47 [http-nio-8080-exec-4] INFO  c.n.amancare.service.InvoiceService - Fetching invoice statistics for clinic: 9 by user: 14
2025-10-05 09:08:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:08:47 [http-nio-8080-exec-7] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 14
2025-10-05 09:08:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:08:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=?
2025-10-05 09:08:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:08:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
    order by
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 09:08:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:08:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:08:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:08:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:08:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 09:08:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:08:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:08:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:08:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-10-05 09:08:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:08:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 09:08:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:08:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID')
2025-10-05 09:08:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:08:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 09:08:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:08:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND p.paymentDate = :date */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.payment_date=?
2025-10-05 09:08:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:08:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND YEAR(p.paymentDate) = :year 
        AND MONTH(p.paymentDate) = :month */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and year(p1_0.payment_date)=? 
            and month(p1_0.payment_date)=?
2025-10-05 09:08:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:08:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.invoice_date=?
2025-10-05 09:08:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=?
2025-10-05 09:08:58 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 09:08:58 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 09:08:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:08:58 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 09:08:58 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 09:08:58 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 09:08:58 [http-nio-8080-exec-9] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 09:08:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 09:08:59 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 09:08:59 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-10-05 09:08:59 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 09:08:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-10-05 09:08:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:08:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:08:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-10-05 09:08:59 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 09:08:59 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:08:59 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:08:59 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:08:59 [http-nio-8080-exec-1] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-10-05 09:08:59 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:08:59 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-10-05 09:08:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:08:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:08:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 09:08:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 09:08:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 09:08:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 09:08:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 09:08:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 09:08:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 09:08:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 09:09:03 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/payments
2025-10-05 09:09:03 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108
2025-10-05 09:09:03 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/payments
2025-10-05 09:09:03 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108
2025-10-05 09:09:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:03 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108
2025-10-05 09:09:03 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/payments
2025-10-05 09:09:03 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:03 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:03 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:03 [http-nio-8080-exec-9] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 108 by user: 2
2025-10-05 09:09:03 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:03 [http-nio-8080-exec-6] INFO  c.n.a.controller.InvoiceController - Fetching invoice 108 by user: 2
2025-10-05 09:09:03 [http-nio-8080-exec-6] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 2
2025-10-05 09:09:03 [http-nio-8080-exec-9] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 108 by user: 2
2025-10-05 09:09:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:09:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:09:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 09:09:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:05 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 09:09:05 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 09:09:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:05 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 09:09:05 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 09:09:05 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 09:09:05 [http-nio-8080-exec-8] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 09:09:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 09:09:06 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 09:09:06 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-10-05 09:09:06 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-10-05 09:09:06 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 09:09:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:06 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-10-05 09:09:06 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 09:09:06 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:09:06 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:09:06 [http-nio-8080-exec-4] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-10-05 09:09:06 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:09:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:06 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:09:06 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-10-05 09:09:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 09:09:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 09:09:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 09:09:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 09:09:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 09:09:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 09:09:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 09:09:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 09:09:22 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/statistics?clinicId=9
2025-10-05 09:09:22 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:22 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/statistics?clinicId=9
2025-10-05 09:09:22 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:22 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:22 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/statistics?clinicId=9
2025-10-05 09:09:22 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:22 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:22 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:22 [http-nio-8080-exec-8] INFO  c.n.a.controller.InvoiceController - Fetching invoice statistics for clinic 9 by user: 2
2025-10-05 09:09:22 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:22 [http-nio-8080-exec-8] INFO  c.n.amancare.service.InvoiceService - Fetching invoice statistics for clinic: 9 by user: 2
2025-10-05 09:09:22 [http-nio-8080-exec-2] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 09:09:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=?
2025-10-05 09:09:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
    order by
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 09:09:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:09:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:09:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 09:09:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:09:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-10-05 09:09:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 09:09:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID')
2025-10-05 09:09:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 09:09:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND p.paymentDate = :date */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.payment_date=?
2025-10-05 09:09:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND YEAR(p.paymentDate) = :year 
        AND MONTH(p.paymentDate) = :month */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and year(p1_0.payment_date)=? 
            and month(p1_0.payment_date)=?
2025-10-05 09:09:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.invoice_date=?
2025-10-05 09:09:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=?
2025-10-05 09:09:24 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/clinics
2025-10-05 09:09:24 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/clinics
2025-10-05 09:09:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:24 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/clinics
2025-10-05 09:09:24 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getAllClinics(); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 09:09:24 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getAllClinics(); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 09:09:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        DISTINCT u.clinic 
    FROM
        User u 
    WHERE
        u.role = 'ADMIN' 
        AND u.isActive = true */ select
            distinct c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            u1_0.role='ADMIN' 
            and u1_0.is_active=1
2025-10-05 09:09:27 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:27 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/statistics
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:27 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/statistics
2025-10-05 09:09:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:27 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/statistics
2025-10-05 09:09:27 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:27 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:27 [http-nio-8080-exec-9] INFO  c.n.a.controller.InvoiceController - Fetching invoice statistics for clinic 1 by user: 2
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:27 [http-nio-8080-exec-9] INFO  c.n.amancare.service.InvoiceService - Fetching invoice statistics for clinic: 1 by user: 2
2025-10-05 09:09:27 [http-nio-8080-exec-6] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 09:09:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    order by
        i1_0.invoice_date desc 
    limit
        ?, ?
2025-10-05 09:09:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:09:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0
2025-10-05 09:09:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID')
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND p.paymentDate = :date */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.payment_date=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND YEAR(p.paymentDate) = :year 
        AND MONTH(p.paymentDate) = :month */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and year(p1_0.payment_date)=? 
            and month(p1_0.payment_date)=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.invoice_date=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:46 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:46 [http-nio-8080-exec-1] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    order by
        i1_0.invoice_date desc 
    limit
        ?, ?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:47 [http-nio-8080-exec-4] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    order by
        i1_0.invoice_date desc 
    limit
        ?, ?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:48 [http-nio-8080-exec-7] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    order by
        i1_0.invoice_date desc 
    limit
        ?, ?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:48 [http-nio-8080-exec-10] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    order by
        i1_0.invoice_date desc 
    limit
        ?, ?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:48 [http-nio-8080-exec-5] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    order by
        i1_0.invoice_date desc 
    limit
        ?, ?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:49 [http-nio-8080-exec-9] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    order by
        i1_0.invoice_date desc 
    limit
        ?, ?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:55 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:55 [http-nio-8080-exec-8] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    order by
        i1_0.invoice_date desc 
    limit
        ?, ?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:56 [http-nio-8080-exec-3] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    order by
        i1_0.invoice_date desc 
    limit
        ?, ?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:09:56 [http-nio-8080-exec-4] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    order by
        i1_0.invoice_date desc 
    limit
        ?, ?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:09:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:10:01 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:10:01 [http-nio-8080-exec-10] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    order by
        i1_0.invoice_date desc 
    limit
        ?, ?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:10:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:14:12 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 09:14:12 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-10-05 09:14:12 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-10-05 09:14:12 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 09:14:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:14:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:14:12 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 09:14:12 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-10-05 09:14:12 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:14:12 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:14:12 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-10-05 09:14:12 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:14:12 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:14:12 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: ALL
2025-10-05 09:14:14 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20
2025-10-05 09:14:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20
2025-10-05 09:14:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:14:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20
2025-10-05 09:14:14 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 09:14:14 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 09:14:14 [http-nio-8080-exec-1] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: ALL
2025-10-05 09:14:15 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/clinics
2025-10-05 09:14:15 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/clinics
2025-10-05 09:14:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:14:15 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/clinics
2025-10-05 09:14:15 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getAllClinics(); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 09:14:15 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getAllClinics(); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 09:14:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        DISTINCT u.clinic 
    FROM
        User u 
    WHERE
        u.role = 'ADMIN' 
        AND u.isActive = true */ select
            distinct c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            u1_0.role='ADMIN' 
            and u1_0.is_active=1
2025-10-05 09:14:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05
2025-10-05 09:14:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-10-05 09:14:15 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05
2025-10-05 09:14:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:14:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:14:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-10-05 09:14:15 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:14:15 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05
2025-10-05 09:14:15 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:14:15 [http-nio-8080-exec-5] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-10-05 09:14:15 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:14:15 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:14:15 [http-nio-8080-exec-9] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: ALL
2025-10-05 09:14:23 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=2
2025-10-05 09:14:23 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=2
2025-10-05 09:14:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:14:23 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=2
2025-10-05 09:14:23 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 09:14:23 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 09:14:23 [http-nio-8080-exec-2] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 2
2025-10-05 09:14:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 09:14:24 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05&clinicId=2
2025-10-05 09:14:24 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=2
2025-10-05 09:14:24 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=2
2025-10-05 09:14:24 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=2
2025-10-05 09:14:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:14:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:14:24 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05&clinicId=2
2025-10-05 09:14:24 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=2
2025-10-05 09:14:24 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:14:24 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:14:24 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:14:24 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:14:24 [http-nio-8080-exec-1] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 2
2025-10-05 09:14:24 [http-nio-8080-exec-4] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 2
2025-10-05 09:14:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:14:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:14:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 09:14:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 09:14:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 09:14:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 09:14:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 09:14:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 09:14:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 09:14:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 09:14:31 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=2
2025-10-05 09:14:31 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=2
2025-10-05 09:14:31 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=2
2025-10-05 09:14:31 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=2
2025-10-05 09:14:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:14:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:14:31 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=2
2025-10-05 09:14:31 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=2
2025-10-05 09:14:31 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:14:31 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:14:31 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:14:31 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 2
2025-10-05 09:14:31 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:14:31 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 2
2025-10-05 09:14:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:14:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:14:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 09:14:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 09:14:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 09:14:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-10-05 09:14:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 09:14:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 09:14:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:14:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 09:14:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:14:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 09:14:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:14:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:14:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:14:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:14:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:14:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:14:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:14:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:14:35 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/4?clinicId=2
2025-10-05 09:14:35 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/4?clinicId=2
2025-10-05 09:14:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:14:35 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/4?clinicId=2
2025-10-05 09:14:35 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:14:35 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:14:35 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 2
2025-10-05 09:14:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:14:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:14:38 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/4/upcoming?clinicId=2
2025-10-05 09:14:38 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/4/upcoming?clinicId=2
2025-10-05 09:14:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:14:38 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/4/upcoming?clinicId=2
2025-10-05 09:14:38 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:14:38 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:14:38 [http-nio-8080-exec-10] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 2
2025-10-05 09:14:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:14:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-10-05 09:14:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/patient/4
2025-10-05 09:14:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/patient/4
2025-10-05 09:14:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:14:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/patient/4
2025-10-05 09:14:40 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getPatientInvoices(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:14:40 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getPatientInvoices(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:14:40 [http-nio-8080-exec-9] INFO  c.n.a.controller.InvoiceController - Fetching invoices for patient 4 by user: 2
2025-10-05 09:14:40 [http-nio-8080-exec-9] INFO  c.n.amancare.service.InvoiceService - Fetching invoices for patient 4 by user: 2
2025-10-05 09:14:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:14:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.patient_id=? 
    order by
        i1_0.invoice_date desc,
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 09:14:40 [http-nio-8080-exec-9] INFO  c.n.amancare.service.InvoiceService - SYSTEM_ADMIN: Found 0 invoices for patient 4 across all clinics
2025-10-05 09:16:26 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /medical-records?page=0&size=10&sortBy=visitDate&sortDirection=DESC
2025-10-05 09:16:26 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=100&sortBy=firstName&sortDirection=asc&clinicId=2
2025-10-05 09:16:26 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=2
2025-10-05 09:16:26 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /medical-records/statistics
2025-10-05 09:16:26 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=100&sortBy=firstName&sortDirection=asc&clinicId=2
2025-10-05 09:16:26 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=2
2025-10-05 09:16:26 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records?page=0&size=10&sortBy=visitDate&sortDirection=DESC
2025-10-05 09:16:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/statistics
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=100&sortBy=firstName&sortDirection=asc&clinicId=2
2025-10-05 09:16:27 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/statistics
2025-10-05 09:16:27 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=2
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records?page=0&size=10&sortBy=visitDate&sortDirection=DESC
2025-10-05 09:16:27 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:16:27 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 09:16:27 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:16:27 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:16:27 [http-nio-8080-exec-4] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 2
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getAllMedicalRecords(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:16:27 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getAllMedicalRecords(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:16:27 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 09:16:27 [http-nio-8080-exec-10] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading doctors from clinic: 2
2025-10-05 09:16:27 [http-nio-8080-exec-5] INFO  c.n.a.service.MedicalRecordService - الحصول على إحصائيات السجلات الطبية للمستخدم admin
2025-10-05 09:16:27 [http-nio-8080-exec-7] INFO  c.n.a.service.MedicalRecordService - البحث عن السجلات الطبية - الصفحة 0
2025-10-05 09:16:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:16:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-10-05 09:16:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0
2025-10-05 09:16:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 09:16:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr 
    WHERE
        mr.status = :status */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.status=?
2025-10-05 09:16:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr 
    WHERE
        mr.status = :status */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.status=?
2025-10-05 09:16:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr 
    WHERE
        mr.status = :status */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.status=?
2025-10-05 09:16:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr 
    WHERE
        mr.status = :status */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.status=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        mr 
    FROM
        MedicalRecord mr 
    ORDER BY
        mr.visitDate DESC,
        mr.createdAt DESC,
        mr.visitDate desc */ select
            mr1_0.id,
            mr1_0.appointment_id,
            mr1_0.chief_complaint,
            mr1_0.clinic_id,
            mr1_0.created_at,
            mr1_0.created_by,
            mr1_0.doctor_id,
            mr1_0.family_history,
            mr1_0.follow_up_date,
            mr1_0.follow_up_instructions,
            mr1_0.is_confidential,
            mr1_0.notes,
            mr1_0.past_medical_history,
            mr1_0.patient_id,
            mr1_0.physical_examination,
            mr1_0.present_illness,
            mr1_0.social_history,
            mr1_0.status,
            mr1_0.systemic_examination,
            mr1_0.treatment_plan,
            mr1_0.updated_at,
            mr1_0.updated_by,
            mr1_0.visit_date,
            mr1_0.visit_type,
            mr1_0.blood_pressure_diastolic,
            mr1_0.blood_pressure_systolic,
            mr1_0.blood_sugar,
            mr1_0.bmi,
            mr1_0.heart_rate,
            mr1_0.height,
            mr1_0.oxygen_saturation,
            mr1_0.pain_scale,
            mr1_0.respiratory_rate,
            mr1_0.temperature,
            mr1_0.weight 
        from
            medical_records mr1_0 
        order by
            mr1_0.visit_date desc,
            mr1_0.created_at desc,
            mr1_0.visit_date desc 
        limit
            ?
2025-10-05 09:16:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:16:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:35 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=2
2025-10-05 09:16:35 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=2
2025-10-05 09:16:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:35 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=2
2025-10-05 09:16:35 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 09:16:35 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 09:16:35 [http-nio-8080-exec-6] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 2
2025-10-05 09:16:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 09:16:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05&clinicId=2
2025-10-05 09:16:36 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=2
2025-10-05 09:16:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=2
2025-10-05 09:16:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=2
2025-10-05 09:16:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=2
2025-10-05 09:16:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05&clinicId=2
2025-10-05 09:16:36 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:16:36 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:16:36 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:16:36 [http-nio-8080-exec-7] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 2
2025-10-05 09:16:36 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:16:36 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 2
2025-10-05 09:16:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:16:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:16:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 09:16:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 09:16:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 09:16:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 09:16:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 09:16:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 09:16:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 09:16:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 09:16:38 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /medical-records?page=0&size=10&sortBy=visitDate&sortDirection=DESC
2025-10-05 09:16:38 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=2
2025-10-05 09:16:38 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=100&sortBy=firstName&sortDirection=asc&clinicId=2
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records?page=0&size=10&sortBy=visitDate&sortDirection=DESC
2025-10-05 09:16:38 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /medical-records/statistics
2025-10-05 09:16:38 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=2
2025-10-05 09:16:38 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=100&sortBy=firstName&sortDirection=asc&clinicId=2
2025-10-05 09:16:38 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/statistics
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:38 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:38 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=100&sortBy=firstName&sortDirection=asc&clinicId=2
2025-10-05 09:16:38 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=2
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records?page=0&size=10&sortBy=visitDate&sortDirection=DESC
2025-10-05 09:16:38 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 09:16:38 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 09:16:38 [http-nio-8080-exec-10] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading doctors from clinic: 2
2025-10-05 09:16:38 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getAllMedicalRecords(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:16:38 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getAllMedicalRecords(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:16:38 [http-nio-8080-exec-4] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 2
2025-10-05 09:16:38 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/statistics
2025-10-05 09:16:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:16:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 09:16:38 [http-nio-8080-exec-1] INFO  c.n.a.service.MedicalRecordService - البحث عن السجلات الطبية - الصفحة 0
2025-10-05 09:16:38 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:16:38 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        mr 
    FROM
        MedicalRecord mr 
    ORDER BY
        mr.visitDate DESC,
        mr.createdAt DESC,
        mr.visitDate desc */ select
            mr1_0.id,
            mr1_0.appointment_id,
            mr1_0.chief_complaint,
            mr1_0.clinic_id,
            mr1_0.created_at,
            mr1_0.created_by,
            mr1_0.doctor_id,
            mr1_0.family_history,
            mr1_0.follow_up_date,
            mr1_0.follow_up_instructions,
            mr1_0.is_confidential,
            mr1_0.notes,
            mr1_0.past_medical_history,
            mr1_0.patient_id,
            mr1_0.physical_examination,
            mr1_0.present_illness,
            mr1_0.social_history,
            mr1_0.status,
            mr1_0.systemic_examination,
            mr1_0.treatment_plan,
            mr1_0.updated_at,
            mr1_0.updated_by,
            mr1_0.visit_date,
            mr1_0.visit_type,
            mr1_0.blood_pressure_diastolic,
            mr1_0.blood_pressure_systolic,
            mr1_0.blood_sugar,
            mr1_0.bmi,
            mr1_0.heart_rate,
            mr1_0.height,
            mr1_0.oxygen_saturation,
            mr1_0.pain_scale,
            mr1_0.respiratory_rate,
            mr1_0.temperature,
            mr1_0.weight 
        from
            medical_records mr1_0 
        order by
            mr1_0.visit_date desc,
            mr1_0.created_at desc,
            mr1_0.visit_date desc 
        limit
            ?
2025-10-05 09:16:38 [http-nio-8080-exec-5] INFO  c.n.a.service.MedicalRecordService - الحصول على إحصائيات السجلات الطبية للمستخدم admin
2025-10-05 09:16:38 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0
2025-10-05 09:16:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr 
    WHERE
        mr.status = :status */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.status=?
2025-10-05 09:16:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr 
    WHERE
        mr.status = :status */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.status=?
2025-10-05 09:16:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr 
    WHERE
        mr.status = :status */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.status=?
2025-10-05 09:16:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr 
    WHERE
        mr.status = :status */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.status=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:16:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:49 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /medical-records/3
2025-10-05 09:16:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/3
2025-10-05 09:16:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/3
2025-10-05 09:16:49 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:16:49 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:16:49 [http-nio-8080-exec-6] INFO  c.n.a.c.MedicalRecordController - مدير النظام يقرأ السجل الطبي 3 من العيادة: جميع العيادات
2025-10-05 09:16:49 [http-nio-8080-exec-6] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 3 بواسطة المستخدم admin
2025-10-05 09:16:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.id=?
2025-10-05 09:16:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:16:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:16:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:16:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:16:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:16:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-10-05 09:16:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-10-05 09:16:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-10-05 09:16:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-10-05 09:16:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-10-05 09:17:42 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=2
2025-10-05 09:17:42 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=2
2025-10-05 09:17:42 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=2
2025-10-05 09:17:42 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=2
2025-10-05 09:17:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:17:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:17:42 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=2
2025-10-05 09:17:42 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=2
2025-10-05 09:17:42 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:17:42 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:17:42 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:17:42 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:17:42 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 2
2025-10-05 09:17:42 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 2
2025-10-05 09:17:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:17:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:17:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 09:17:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 09:17:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-10-05 09:17:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 09:17:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 09:17:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:17:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:17:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 09:17:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:17:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 09:17:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 09:17:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:17:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:17:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:17:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:17:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:17:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:17:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:17:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/statistics?clinicId=2
2025-10-05 09:17:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?clinicId=2&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:17:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/statistics?clinicId=2
2025-10-05 09:17:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?clinicId=2&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:17:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:17:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:17:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/statistics?clinicId=2
2025-10-05 09:17:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?clinicId=2&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:17:47 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:17:47 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:17:47 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:17:47 [http-nio-8080-exec-6] INFO  c.n.a.controller.InvoiceController - Fetching invoice statistics for clinic 2 by user: 2
2025-10-05 09:17:47 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:17:47 [http-nio-8080-exec-10] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 09:17:47 [http-nio-8080-exec-6] INFO  c.n.amancare.service.InvoiceService - Fetching invoice statistics for clinic: 2 by user: 2
2025-10-05 09:17:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:17:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:17:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=?
2025-10-05 09:17:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
    order by
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 09:17:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:17:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:17:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 09:17:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:17:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-10-05 09:17:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 09:17:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID')
2025-10-05 09:17:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 09:17:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND p.paymentDate = :date */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.payment_date=?
2025-10-05 09:17:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND YEAR(p.paymentDate) = :year 
        AND MONTH(p.paymentDate) = :month */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and year(p1_0.payment_date)=? 
            and month(p1_0.payment_date)=?
2025-10-05 09:17:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.invoice_date=?
2025-10-05 09:17:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=?
2025-10-05 09:17:52 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/statistics?clinicId=2
2025-10-05 09:17:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?clinicId=2&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:17:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:17:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:17:52 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/statistics?clinicId=2
2025-10-05 09:17:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?clinicId=2&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:17:52 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:17:52 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:17:52 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:17:52 [http-nio-8080-exec-7] INFO  c.n.a.controller.InvoiceController - Fetching invoice statistics for clinic 2 by user: 2
2025-10-05 09:17:52 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:17:52 [http-nio-8080-exec-7] INFO  c.n.amancare.service.InvoiceService - Fetching invoice statistics for clinic: 2 by user: 2
2025-10-05 09:17:52 [http-nio-8080-exec-1] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 09:17:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:17:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:17:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=?
2025-10-05 09:17:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
    order by
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 09:17:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:17:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:17:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 09:17:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:17:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-10-05 09:17:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 09:17:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID')
2025-10-05 09:17:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 09:17:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND p.paymentDate = :date */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.payment_date=?
2025-10-05 09:17:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND YEAR(p.paymentDate) = :year 
        AND MONTH(p.paymentDate) = :month */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and year(p1_0.payment_date)=? 
            and month(p1_0.payment_date)=?
2025-10-05 09:17:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.invoice_date=?
2025-10-05 09:17:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=?
2025-10-05 09:17:54 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=2
2025-10-05 09:17:54 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=2
2025-10-05 09:17:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:17:54 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=2
2025-10-05 09:17:54 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 09:17:54 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 09:17:54 [http-nio-8080-exec-8] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 2
2025-10-05 09:17:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 09:17:55 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05&clinicId=2
2025-10-05 09:17:55 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=2
2025-10-05 09:17:55 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=2
2025-10-05 09:17:55 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=2
2025-10-05 09:17:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:17:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:17:55 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05&clinicId=2
2025-10-05 09:17:55 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=2
2025-10-05 09:17:55 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:17:55 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:17:55 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:17:55 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:17:55 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 2
2025-10-05 09:17:55 [http-nio-8080-exec-6] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 2
2025-10-05 09:17:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:17:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:17:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 09:17:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 09:17:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 09:17:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 09:17:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 09:17:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 09:17:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 09:17:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 09:17:57 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/clinics
2025-10-05 09:17:57 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/clinics
2025-10-05 09:17:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:17:57 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/clinics
2025-10-05 09:17:57 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getAllClinics(); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 09:17:57 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getAllClinics(); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 09:17:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        DISTINCT u.clinic 
    FROM
        User u 
    WHERE
        u.role = 'ADMIN' 
        AND u.isActive = true */ select
            distinct c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            u1_0.role='ADMIN' 
            and u1_0.is_active=1
2025-10-05 09:18:06 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 09:18:06 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 09:18:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:06 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 09:18:06 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 09:18:06 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 09:18:06 [http-nio-8080-exec-2] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 09:18:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 09:18:07 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 09:18:07 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-10-05 09:18:07 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-10-05 09:18:07 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 09:18:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:07 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-10-05 09:18:07 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 09:18:07 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:18:07 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:18:07 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:18:07 [http-nio-8080-exec-4] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-10-05 09:18:07 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:18:07 [http-nio-8080-exec-5] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-10-05 09:18:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:18:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:18:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 09:18:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 09:18:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 09:18:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 09:18:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 09:18:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 09:18:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 09:18:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 09:18:08 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/statistics?clinicId=9
2025-10-05 09:18:08 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:18:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/statistics?clinicId=9
2025-10-05 09:18:08 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:18:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:08 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:18:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/statistics?clinicId=9
2025-10-05 09:18:08 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:18:08 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:18:08 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:18:08 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:18:08 [http-nio-8080-exec-9] INFO  c.n.a.controller.InvoiceController - Fetching invoice statistics for clinic 9 by user: 2
2025-10-05 09:18:08 [http-nio-8080-exec-8] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 09:18:08 [http-nio-8080-exec-9] INFO  c.n.amancare.service.InvoiceService - Fetching invoice statistics for clinic: 9 by user: 2
2025-10-05 09:18:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:18:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:18:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=?
2025-10-05 09:18:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
    order by
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 09:18:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:18:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:18:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:18:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:18:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 09:18:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:18:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-10-05 09:18:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:18:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 09:18:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:18:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID')
2025-10-05 09:18:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 09:18:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND p.paymentDate = :date */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.payment_date=?
2025-10-05 09:18:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:18:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND YEAR(p.paymentDate) = :year 
        AND MONTH(p.paymentDate) = :month */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and year(p1_0.payment_date)=? 
            and month(p1_0.payment_date)=?
2025-10-05 09:18:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:18:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.invoice_date=?
2025-10-05 09:18:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=?
2025-10-05 09:18:10 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /medical-records?page=0&size=10&sortBy=visitDate&sortDirection=DESC
2025-10-05 09:18:10 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=9
2025-10-05 09:18:10 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=100&sortBy=firstName&sortDirection=asc&clinicId=9
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records?page=0&size=10&sortBy=visitDate&sortDirection=DESC
2025-10-05 09:18:10 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /medical-records/statistics
2025-10-05 09:18:10 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=9
2025-10-05 09:18:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:10 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/statistics
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:10 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=9
2025-10-05 09:18:10 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=100&sortBy=firstName&sortDirection=asc&clinicId=9
2025-10-05 09:18:10 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 09:18:10 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 09:18:10 [http-nio-8080-exec-5] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading doctors from clinic: 9
2025-10-05 09:18:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records?page=0&size=10&sortBy=visitDate&sortDirection=DESC
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getAllMedicalRecords(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getAllMedicalRecords(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:18:10 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=100&sortBy=firstName&sortDirection=asc&clinicId=9
2025-10-05 09:18:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 09:18:10 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:18:10 [http-nio-8080-exec-6] INFO  c.n.a.service.MedicalRecordService - البحث عن السجلات الطبية - الصفحة 0
2025-10-05 09:18:10 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:18:10 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        mr 
    FROM
        MedicalRecord mr 
    ORDER BY
        mr.visitDate DESC,
        mr.createdAt DESC,
        mr.visitDate desc */ select
            mr1_0.id,
            mr1_0.appointment_id,
            mr1_0.chief_complaint,
            mr1_0.clinic_id,
            mr1_0.created_at,
            mr1_0.created_by,
            mr1_0.doctor_id,
            mr1_0.family_history,
            mr1_0.follow_up_date,
            mr1_0.follow_up_instructions,
            mr1_0.is_confidential,
            mr1_0.notes,
            mr1_0.past_medical_history,
            mr1_0.patient_id,
            mr1_0.physical_examination,
            mr1_0.present_illness,
            mr1_0.social_history,
            mr1_0.status,
            mr1_0.systemic_examination,
            mr1_0.treatment_plan,
            mr1_0.updated_at,
            mr1_0.updated_by,
            mr1_0.visit_date,
            mr1_0.visit_type,
            mr1_0.blood_pressure_diastolic,
            mr1_0.blood_pressure_systolic,
            mr1_0.blood_sugar,
            mr1_0.bmi,
            mr1_0.heart_rate,
            mr1_0.height,
            mr1_0.oxygen_saturation,
            mr1_0.pain_scale,
            mr1_0.respiratory_rate,
            mr1_0.temperature,
            mr1_0.weight 
        from
            medical_records mr1_0 
        order by
            mr1_0.visit_date desc,
            mr1_0.created_at desc,
            mr1_0.visit_date desc 
        limit
            ?
2025-10-05 09:18:10 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/statistics
2025-10-05 09:18:10 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:18:10 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:18:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-7] INFO  c.n.a.service.MedicalRecordService - الحصول على إحصائيات السجلات الطبية للمستخدم admin
2025-10-05 09:18:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-10-05 09:18:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr 
    WHERE
        mr.status = :status */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.status=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr 
    WHERE
        mr.status = :status */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.status=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr 
    WHERE
        mr.status = :status */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.status=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr 
    WHERE
        mr.status = :status */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.status=?
2025-10-05 09:18:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /medical-records?page=0&size=10&sortBy=visitDate&sortDirection=DESC
2025-10-05 09:18:15 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /medical-records/statistics
2025-10-05 09:18:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/statistics
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records?page=0&size=10&sortBy=visitDate&sortDirection=DESC
2025-10-05 09:18:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/statistics
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records?page=0&size=10&sortBy=visitDate&sortDirection=DESC
2025-10-05 09:18:15 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:18:15 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getAllMedicalRecords(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getAllMedicalRecords(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:18:15 [http-nio-8080-exec-5] INFO  c.n.a.service.MedicalRecordService - الحصول على إحصائيات السجلات الطبية للمستخدم admin
2025-10-05 09:18:15 [http-nio-8080-exec-7] INFO  c.n.a.service.MedicalRecordService - البحث عن السجلات الطبية - الصفحة 0
2025-10-05 09:18:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        mr 
    FROM
        MedicalRecord mr 
    ORDER BY
        mr.visitDate DESC,
        mr.createdAt DESC,
        mr.visitDate desc */ select
            mr1_0.id,
            mr1_0.appointment_id,
            mr1_0.chief_complaint,
            mr1_0.clinic_id,
            mr1_0.created_at,
            mr1_0.created_by,
            mr1_0.doctor_id,
            mr1_0.family_history,
            mr1_0.follow_up_date,
            mr1_0.follow_up_instructions,
            mr1_0.is_confidential,
            mr1_0.notes,
            mr1_0.past_medical_history,
            mr1_0.patient_id,
            mr1_0.physical_examination,
            mr1_0.present_illness,
            mr1_0.social_history,
            mr1_0.status,
            mr1_0.systemic_examination,
            mr1_0.treatment_plan,
            mr1_0.updated_at,
            mr1_0.updated_by,
            mr1_0.visit_date,
            mr1_0.visit_type,
            mr1_0.blood_pressure_diastolic,
            mr1_0.blood_pressure_systolic,
            mr1_0.blood_sugar,
            mr1_0.bmi,
            mr1_0.heart_rate,
            mr1_0.height,
            mr1_0.oxygen_saturation,
            mr1_0.pain_scale,
            mr1_0.respiratory_rate,
            mr1_0.temperature,
            mr1_0.weight 
        from
            medical_records mr1_0 
        order by
            mr1_0.visit_date desc,
            mr1_0.created_at desc,
            mr1_0.visit_date desc 
        limit
            ?
2025-10-05 09:18:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr 
    WHERE
        mr.status = :status */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.status=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr 
    WHERE
        mr.status = :status */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.status=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr 
    WHERE
        mr.status = :status */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.status=?
2025-10-05 09:18:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr 
    WHERE
        mr.status = :status */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.status=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records?page=0&size=10&sortBy=visitDate&sortDirection=DESC
2025-10-05 09:18:18 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=100&sortBy=firstName&sortDirection=asc&clinicId=9
2025-10-05 09:18:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=9
2025-10-05 09:18:18 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=100&sortBy=firstName&sortDirection=asc&clinicId=9
2025-10-05 09:18:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/statistics
2025-10-05 09:18:18 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=9
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records?page=0&size=10&sortBy=visitDate&sortDirection=DESC
2025-10-05 09:18:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/statistics
2025-10-05 09:18:18 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:18:18 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:18:18 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=100&sortBy=firstName&sortDirection=asc&clinicId=9
2025-10-05 09:18:18 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=9
2025-10-05 09:18:18 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getAllMedicalRecords(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:18:18 [http-nio-8080-exec-4] INFO  c.n.a.service.MedicalRecordService - الحصول على إحصائيات السجلات الطبية للمستخدم admin
2025-10-05 09:18:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0
2025-10-05 09:18:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr 
    WHERE
        mr.status = :status */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.status=?
2025-10-05 09:18:18 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:18:18 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 09:18:18 [http-nio-8080-exec-10] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading doctors from clinic: 9
2025-10-05 09:18:18 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:18:18 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-10-05 09:18:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getAllMedicalRecords(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:18:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr 
    WHERE
        mr.status = :status */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.status=?
2025-10-05 09:18:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 09:18:18 [http-nio-8080-exec-2] INFO  c.n.a.service.MedicalRecordService - البحث عن السجلات الطبية - الصفحة 0
2025-10-05 09:18:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr 
    WHERE
        mr.status = :status */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.status=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        mr 
    FROM
        MedicalRecord mr 
    ORDER BY
        mr.visitDate DESC,
        mr.createdAt DESC,
        mr.visitDate desc */ select
            mr1_0.id,
            mr1_0.appointment_id,
            mr1_0.chief_complaint,
            mr1_0.clinic_id,
            mr1_0.created_at,
            mr1_0.created_by,
            mr1_0.doctor_id,
            mr1_0.family_history,
            mr1_0.follow_up_date,
            mr1_0.follow_up_instructions,
            mr1_0.is_confidential,
            mr1_0.notes,
            mr1_0.past_medical_history,
            mr1_0.patient_id,
            mr1_0.physical_examination,
            mr1_0.present_illness,
            mr1_0.social_history,
            mr1_0.status,
            mr1_0.systemic_examination,
            mr1_0.treatment_plan,
            mr1_0.updated_at,
            mr1_0.updated_by,
            mr1_0.visit_date,
            mr1_0.visit_type,
            mr1_0.blood_pressure_diastolic,
            mr1_0.blood_pressure_systolic,
            mr1_0.blood_sugar,
            mr1_0.bmi,
            mr1_0.heart_rate,
            mr1_0.height,
            mr1_0.oxygen_saturation,
            mr1_0.pain_scale,
            mr1_0.respiratory_rate,
            mr1_0.temperature,
            mr1_0.weight 
        from
            medical_records mr1_0 
        order by
            mr1_0.visit_date desc,
            mr1_0.created_at desc,
            mr1_0.visit_date desc 
        limit
            ?
2025-10-05 09:18:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-10-05 09:18:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr 
    WHERE
        mr.status = :status */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.status=?
2025-10-05 09:18:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:27 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /medical-records/2
2025-10-05 09:18:27 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/2
2025-10-05 09:18:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:27 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/2
2025-10-05 09:18:27 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:18:27 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:18:27 [http-nio-8080-exec-3] INFO  c.n.a.c.MedicalRecordController - مدير النظام يقرأ السجل الطبي 2 من العيادة: جميع العيادات
2025-10-05 09:18:27 [http-nio-8080-exec-3] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 2 بواسطة المستخدم admin
2025-10-05 09:18:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.id=?
2025-10-05 09:18:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:18:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-10-05 09:18:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-10-05 09:18:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-10-05 09:18:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-10-05 09:18:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-10-05 09:18:29 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /medical-records/2/pdf
2025-10-05 09:18:29 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/2/pdf
2025-10-05 09:18:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:29 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/2/pdf
2025-10-05 09:18:29 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:18:29 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:18:29 [http-nio-8080-exec-4] INFO  c.n.a.c.MedicalRecordController - تصدير السجل الطبي 2 كـ PDF بواسطة المستخدم admin
2025-10-05 09:18:29 [http-nio-8080-exec-4] INFO  c.n.a.c.MedicalRecordController - مدير النظام يصدر السجل الطبي 2 من العيادة: جميع العيادات
2025-10-05 09:18:29 [http-nio-8080-exec-4] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 2 بواسطة المستخدم admin
2025-10-05 09:18:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.id=?
2025-10-05 09:18:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:18:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:18:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:18:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-10-05 09:18:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-10-05 09:18:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-10-05 09:18:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-10-05 09:18:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-10-05 09:18:29 [http-nio-8080-exec-4] INFO  c.n.a.s.pdf.PdfMedicalRecordService - إنشاء ملف PDF للسجل الطبي: 2
2025-10-05 09:18:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-10-05 09:18:50 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-10-05 09:18:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-10-05 09:18:50 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-10-05 09:18:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:50 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-10-05 09:18:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-10-05 09:18:50 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:18:50 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:18:50 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:18:50 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:18:50 [http-nio-8080-exec-5] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-10-05 09:18:50 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-10-05 09:18:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:18:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:18:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 09:18:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 09:18:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 09:18:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 09:18:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-10-05 09:18:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 09:18:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 09:18:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:18:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 09:18:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:18:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:18:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:18:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:18:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:18:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/14?clinicId=9
2025-10-05 09:18:54 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/14?clinicId=9
2025-10-05 09:18:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:18:54 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/14?clinicId=9
2025-10-05 09:18:54 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:18:54 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:18:54 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-10-05 09:18:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:18:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:19:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/patient/14?page=0&size=10
2025-10-05 09:19:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:19:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/patient/14?page=0&size=10
2025-10-05 09:19:04 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getPatientMedicalHistory(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,int,int); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:19:04 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getPatientMedicalHistory(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,int,int); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:19:04 [http-nio-8080-exec-8] INFO  c.n.a.service.MedicalRecordService - البحث عن التاريخ الطبي للمريض 14
2025-10-05 09:19:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:19:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.patient_id=? 
    order by
        mr1_0.visit_date desc,
        mr1_0.created_at desc 
    limit
        ?
2025-10-05 09:19:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:19:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:19:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:19:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:19:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:35:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/statistics
2025-10-05 09:35:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:35:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/statistics
2025-10-05 09:35:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:35:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:35:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:35:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:35:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/statistics
2025-10-05 09:35:02 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:35:02 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:35:02 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:35:02 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:35:02 [http-nio-8080-exec-5] INFO  c.n.a.controller.InvoiceController - Fetching invoice statistics for clinic 9 by user: 14
2025-10-05 09:35:02 [http-nio-8080-exec-5] INFO  c.n.amancare.service.InvoiceService - Fetching invoice statistics for clinic: 9 by user: 14
2025-10-05 09:35:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:35:02 [http-nio-8080-exec-6] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 14
2025-10-05 09:35:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:35:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=?
2025-10-05 09:35:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
    order by
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 09:35:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:35:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:35:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:35:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:35:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:35:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:35:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 09:35:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:35:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:35:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:35:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:35:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-10-05 09:35:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:35:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 09:35:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:35:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID')
2025-10-05 09:35:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:35:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 09:35:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:35:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND p.paymentDate = :date */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.payment_date=?
2025-10-05 09:35:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND YEAR(p.paymentDate) = :year 
        AND MONTH(p.paymentDate) = :month */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and year(p1_0.payment_date)=? 
            and month(p1_0.payment_date)=?
2025-10-05 09:35:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.invoice_date=?
2025-10-05 09:35:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=?
2025-10-05 09:35:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/14?clinicId=9
2025-10-05 09:35:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/14?clinicId=9
2025-10-05 09:35:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:35:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/14?clinicId=9
2025-10-05 09:35:02 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:35:02 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:35:02 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-10-05 09:35:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:35:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:35:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:35:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/statistics
2025-10-05 09:35:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/statistics
2025-10-05 09:35:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:35:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/14?clinicId=9
2025-10-05 09:35:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/14?clinicId=9
2025-10-05 09:35:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:35:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:35:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:35:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/14?clinicId=9
2025-10-05 09:35:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/statistics
2025-10-05 09:35:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?sortBy=invoiceDate&sortDirection=DESC
2025-10-05 09:35:32 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:35:32 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:35:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:35:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:35:32 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:35:32 [http-nio-8080-exec-2] INFO  c.n.a.controller.InvoiceController - Fetching invoice statistics for clinic 9 by user: 14
2025-10-05 09:35:32 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:35:32 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-10-05 09:35:32 [http-nio-8080-exec-6] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 14
2025-10-05 09:35:32 [http-nio-8080-exec-2] INFO  c.n.amancare.service.InvoiceService - Fetching invoice statistics for clinic: 9 by user: 14
2025-10-05 09:35:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:35:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:35:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:35:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:35:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=?
2025-10-05 09:35:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
    order by
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 09:35:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:35:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:35:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:35:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:35:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 09:35:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:35:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:35:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:35:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 09:35:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:35:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-10-05 09:35:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:35:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 09:35:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID')
2025-10-05 09:35:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:35:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 09:35:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:35:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:35:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND p.paymentDate = :date */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.payment_date=?
2025-10-05 09:35:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:35:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND YEAR(p.paymentDate) = :year 
        AND MONTH(p.paymentDate) = :month */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and year(p1_0.payment_date)=? 
            and month(p1_0.payment_date)=?
2025-10-05 09:35:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.invoice_date=?
2025-10-05 09:35:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=?
2025-10-05 09:37:21 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 09:37:21 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-10-05 09:37:21 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-10-05 09:37:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 09:37:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:37:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:37:21 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-10-05 09:37:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 09:37:21 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:37:21 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:37:21 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:37:21 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:37:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:37:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:37:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 09:37:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 09:37:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 09:37:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 09:37:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-10-05 09:37:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 09:37:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 09:37:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 09:37:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:37:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:37:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:37:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:37:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:37:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:37:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:37:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:37:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:37:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:37:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:37:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:37:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:37:23 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/25
2025-10-05 09:37:23 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/25
2025-10-05 09:37:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:37:23 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/25
2025-10-05 09:37:23 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:37:23 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:37:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:37:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:37:24 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/patient/25
2025-10-05 09:37:24 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/patient/25
2025-10-05 09:37:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:37:25 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/patient/25
2025-10-05 09:37:25 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getPatientInvoices(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:37:25 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getPatientInvoices(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:37:25 [http-nio-8080-exec-8] INFO  c.n.a.controller.InvoiceController - Fetching invoices for patient 25 by user: 14
2025-10-05 09:37:25 [http-nio-8080-exec-8] INFO  c.n.amancare.service.InvoiceService - Fetching invoices for patient 25 by user: 14
2025-10-05 09:37:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:37:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:37:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.patient_id=? 
    order by
        i1_0.invoice_date desc,
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 09:37:25 [http-nio-8080-exec-8] INFO  c.n.amancare.service.InvoiceService - Found 1 invoices for patient 25 in clinic 9
2025-10-05 09:37:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:37:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:37:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:37:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:41:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/patient/25
2025-10-05 09:41:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/25
2025-10-05 09:41:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/patient/25
2025-10-05 09:41:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/25
2025-10-05 09:41:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:41:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:41:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/25
2025-10-05 09:41:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/patient/25
2025-10-05 09:41:58 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getPatientInvoices(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:41:58 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:41:58 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getPatientInvoices(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:41:58 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:41:58 [http-nio-8080-exec-7] INFO  c.n.a.controller.InvoiceController - Fetching invoices for patient 25 by user: 14
2025-10-05 09:41:58 [http-nio-8080-exec-7] INFO  c.n.amancare.service.InvoiceService - Fetching invoices for patient 25 by user: 14
2025-10-05 09:41:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:41:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:41:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:41:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:41:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.patient_id=? 
    order by
        i1_0.invoice_date desc,
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 09:41:58 [http-nio-8080-exec-7] INFO  c.n.amancare.service.InvoiceService - Found 1 invoices for patient 25 in clinic 9
2025-10-05 09:41:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:41:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:41:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:41:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:41:59 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/14?clinicId=9
2025-10-05 09:41:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/14?clinicId=9
2025-10-05 09:41:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:41:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/14?clinicId=9
2025-10-05 09:41:59 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:41:59 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:41:59 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-10-05 09:41:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:41:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:46:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/patient/25
2025-10-05 09:46:03 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/25
2025-10-05 09:46:03 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/patient/25
2025-10-05 09:46:03 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/25
2025-10-05 09:46:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:46:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:46:03 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/patient/25
2025-10-05 09:46:03 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/25
2025-10-05 09:46:03 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getPatientInvoices(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:46:03 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:46:03 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getPatientInvoices(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:46:03 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:46:03 [http-nio-8080-exec-5] INFO  c.n.a.controller.InvoiceController - Fetching invoices for patient 25 by user: 14
2025-10-05 09:46:03 [http-nio-8080-exec-5] INFO  c.n.amancare.service.InvoiceService - Fetching invoices for patient 25 by user: 14
2025-10-05 09:46:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:46:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:46:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:46:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:46:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.patient_id=? 
    order by
        i1_0.invoice_date desc,
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 09:46:03 [http-nio-8080-exec-5] INFO  c.n.amancare.service.InvoiceService - Found 1 invoices for patient 25 in clinic 9
2025-10-05 09:46:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:46:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:46:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:46:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:46:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/14?clinicId=9
2025-10-05 09:46:04 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/14?clinicId=9
2025-10-05 09:46:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:46:04 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/14?clinicId=9
2025-10-05 09:46:04 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:46:04 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:46:04 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-10-05 09:46:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:46:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:46:57 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/25
2025-10-05 09:46:57 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/patient/25
2025-10-05 09:46:57 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/patient/25
2025-10-05 09:46:57 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/25
2025-10-05 09:46:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:46:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:46:57 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/patient/25
2025-10-05 09:46:57 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/25
2025-10-05 09:46:57 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:46:57 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getPatientInvoices(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:46:57 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getPatientInvoices(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:46:57 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:46:57 [http-nio-8080-exec-4] INFO  c.n.a.controller.InvoiceController - Fetching invoices for patient 25 by user: 14
2025-10-05 09:46:57 [http-nio-8080-exec-4] INFO  c.n.amancare.service.InvoiceService - Fetching invoices for patient 25 by user: 14
2025-10-05 09:46:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:46:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:46:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:46:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:46:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.patient_id=? 
    order by
        i1_0.invoice_date desc,
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 09:46:57 [http-nio-8080-exec-4] INFO  c.n.amancare.service.InvoiceService - Found 1 invoices for patient 25 in clinic 9
2025-10-05 09:46:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:46:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:46:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:46:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:46:59 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/14?clinicId=9
2025-10-05 09:46:59 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/14?clinicId=9
2025-10-05 09:46:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:46:59 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/14?clinicId=9
2025-10-05 09:46:59 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:46:59 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:46:59 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-10-05 09:46:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:46:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:47:16 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/25
2025-10-05 09:47:16 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/patient/25
2025-10-05 09:47:16 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/25
2025-10-05 09:47:16 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/patient/25
2025-10-05 09:47:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:47:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:47:16 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/25
2025-10-05 09:47:16 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/patient/25
2025-10-05 09:47:16 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getPatientInvoices(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:47:16 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:47:16 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getPatientInvoices(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:47:16 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:47:16 [http-nio-8080-exec-3] INFO  c.n.a.controller.InvoiceController - Fetching invoices for patient 25 by user: 14
2025-10-05 09:47:16 [http-nio-8080-exec-3] INFO  c.n.amancare.service.InvoiceService - Fetching invoices for patient 25 by user: 14
2025-10-05 09:47:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:47:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:47:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:47:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:47:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.patient_id=? 
    order by
        i1_0.invoice_date desc,
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 09:47:16 [http-nio-8080-exec-3] INFO  c.n.amancare.service.InvoiceService - Found 1 invoices for patient 25 in clinic 9
2025-10-05 09:47:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:47:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:47:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:47:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:47:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/14?clinicId=9
2025-10-05 09:47:17 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/14?clinicId=9
2025-10-05 09:47:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:47:17 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/14?clinicId=9
2025-10-05 09:47:17 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:47:17 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:47:17 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-10-05 09:47:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:47:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:47:42 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/25/upcoming
2025-10-05 09:47:42 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/25/upcoming
2025-10-05 09:47:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:47:42 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/25/upcoming
2025-10-05 09:47:42 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:47:42 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:47:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:47:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-10-05 09:47:44 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /medical-records/patient/25?page=0&size=20
2025-10-05 09:47:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/patient/25?page=0&size=20
2025-10-05 09:47:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:47:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/patient/25?page=0&size=20
2025-10-05 09:47:44 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getPatientMedicalHistory(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,int,int); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:47:44 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getPatientMedicalHistory(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,int,int); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:47:44 [http-nio-8080-exec-8] INFO  c.n.a.service.MedicalRecordService - البحث عن التاريخ الطبي للمريض 25
2025-10-05 09:47:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:47:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=? 
        and p1_0.clinic_id=?
2025-10-05 09:47:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.patient_id=? 
        and mr1_0.clinic_id=? 
    order by
        mr1_0.visit_date desc,
        mr1_0.created_at desc 
    limit
        ?
2025-10-05 09:47:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:47:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:47:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:47:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:47:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /medical-records/3
2025-10-05 09:47:47 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/3
2025-10-05 09:47:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:47:47 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/3
2025-10-05 09:47:47 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:47:47 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:47:47 [http-nio-8080-exec-4] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 3 بواسطة المستخدم khalid.admin
2025-10-05 09:47:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=? 
        and mr1_0.clinic_id=?
2025-10-05 09:47:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:47:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:47:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:47:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:47:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:47:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:47:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-10-05 09:47:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-10-05 09:47:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-10-05 09:47:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-10-05 09:47:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-10-05 09:47:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /medical-records?page=0&size=10&sortBy=visitDate&sortDirection=DESC
2025-10-05 09:47:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /medical-records/statistics
2025-10-05 09:47:58 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=100&sortBy=firstName&sortDirection=asc
2025-10-05 09:47:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-10-05 09:47:58 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records?page=0&size=10&sortBy=visitDate&sortDirection=DESC
2025-10-05 09:47:58 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=100&sortBy=firstName&sortDirection=asc
2025-10-05 09:47:58 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/statistics
2025-10-05 09:47:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-10-05 09:47:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:47:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:47:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:47:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:47:59 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records?page=0&size=10&sortBy=visitDate&sortDirection=DESC
2025-10-05 09:47:59 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getAllMedicalRecords(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:47:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-10-05 09:47:59 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getAllMedicalRecords(com.nakqeeb.amancare.security.UserPrincipal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:47:59 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 09:47:59 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 09:47:59 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/statistics
2025-10-05 09:47:59 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:47:59 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=100&sortBy=firstName&sortDirection=asc
2025-10-05 09:47:59 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordStatistics(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:47:59 [http-nio-8080-exec-10] INFO  c.n.a.service.MedicalRecordService - البحث عن السجلات الطبية - الصفحة 0
2025-10-05 09:47:59 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:47:59 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:47:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 09:47:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.clinic_id=? 
    order by
        mr1_0.visit_date desc,
        mr1_0.created_at desc,
        mr1_0.visit_date desc 
    limit
        ?
2025-10-05 09:47:59 [http-nio-8080-exec-8] INFO  c.n.a.service.MedicalRecordService - الحصول على إحصائيات السجلات الطبية للمستخدم khalid.admin
2025-10-05 09:47:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:47:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(mr1_0.id) 
    from
        medical_records mr1_0 
    where
        mr1_0.clinic_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-10-05 09:47:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(mr1_0.id) 
    from
        medical_records mr1_0 
    where
        mr1_0.status=? 
        and mr1_0.clinic_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(mr1_0.id) 
    from
        medical_records mr1_0 
    where
        mr1_0.status=? 
        and mr1_0.clinic_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:47:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(mr1_0.id) 
    from
        medical_records mr1_0 
    where
        mr1_0.status=? 
        and mr1_0.clinic_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:47:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(mr1_0.id) 
    from
        medical_records mr1_0 
    where
        mr1_0.status=? 
        and mr1_0.clinic_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:47:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:47:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr 
    WHERE
        mr.clinicId = :clinicId 
        AND DATE(mr.visitDate) = CURRENT_DATE() */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.clinic_id=? 
            and date(mr1_0.visit_date)=current_date
2025-10-05 09:47:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:47:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr 
    WHERE
        mr.clinicId = :clinicId 
        AND YEARWEEK(mr.visitDate) = YEARWEEK(CURRENT_DATE()) */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.clinic_id=? 
            and yearweek(mr1_0.visit_date)=yearweek(current_date)
2025-10-05 09:47:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(mr) 
    FROM
        MedicalRecord mr 
    WHERE
        mr.clinicId = :clinicId 
        AND YEAR(mr.visitDate) = YEAR(CURRENT_DATE()) 
        AND MONTH(mr.visitDate) = MONTH(CURRENT_DATE()) */ select
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.clinic_id=? 
            and year(mr1_0.visit_date)=year(current_date) 
            and month(mr1_0.visit_date)=month(current_date)
2025-10-05 09:47:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        d.description,
        d.icdCode,
        COUNT(d) as count 
    FROM
        Diagnosis d 
    JOIN
        d.medicalRecord mr 
    WHERE
        mr.clinicId = :clinicId 
    GROUP BY
        d.description,
        d.icdCode 
    ORDER BY
        count DESC */ select
            d1_0.description,
            d1_0.icd_code,
            count(d1_0.id) 
        from
            medical_record_diagnoses d1_0 
        join
            medical_records mr1_0 
                on mr1_0.id=d1_0.medical_record_id 
        where
            mr1_0.clinic_id=? 
        group by
            d1_0.description,
            d1_0.icd_code 
        order by
            3 desc 
        limit
            ?
2025-10-05 09:47:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        p.medicationName,
        p.genericName,
        COUNT(p) as count 
    FROM
        Prescription p 
    JOIN
        p.medicalRecord mr 
    WHERE
        mr.clinicId = :clinicId 
    GROUP BY
        p.medicationName,
        p.genericName 
    ORDER BY
        count DESC */ select
            p1_0.medication_name,
            p1_0.generic_name,
            count(p1_0.id) 
        from
            medical_record_prescriptions p1_0 
        join
            medical_records mr1_0 
                on mr1_0.id=p1_0.medical_record_id 
        where
            mr1_0.clinic_id=? 
        group by
            p1_0.medication_name,
            p1_0.generic_name 
        order by
            3 desc 
        limit
            ?
2025-10-05 09:47:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        mr.visitType,
        COUNT(mr) as count 
    FROM
        MedicalRecord mr 
    WHERE
        mr.clinicId = :clinicId 
    GROUP BY
        mr.visitType 
    ORDER BY
        count DESC */ select
            mr1_0.visit_type,
            count(mr1_0.id) 
        from
            medical_records mr1_0 
        where
            mr1_0.clinic_id=? 
        group by
            mr1_0.visit_type 
        order by
            2 desc
2025-10-05 09:48:11 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-10-05 09:48:11 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 09:48:11 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 09:48:11 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-10-05 09:48:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:48:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:48:11 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-10-05 09:48:11 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 09:48:11 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:48:11 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:48:11 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:48:11 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:48:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:48:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:48:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 09:48:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-10-05 09:48:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 09:48:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 09:48:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:48:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 09:48:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:48:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 09:48:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:48:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:48:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 09:48:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:48:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 09:48:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:48:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:48:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:48:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:48:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:48:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:48:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 09:48:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:48:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/14
2025-10-05 09:48:14 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/14
2025-10-05 09:48:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:48:14 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/14
2025-10-05 09:48:14 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:48:14 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:48:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:48:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:48:15 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/14/upcoming
2025-10-05 09:48:15 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/14/upcoming
2025-10-05 09:48:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:48:15 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/14/upcoming
2025-10-05 09:48:15 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:48:15 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:48:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:48:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-10-05 09:48:17 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/patient/14
2025-10-05 09:48:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/patient/14
2025-10-05 09:48:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:48:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/patient/14
2025-10-05 09:48:17 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getPatientInvoices(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:48:17 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getPatientInvoices(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:48:17 [http-nio-8080-exec-7] INFO  c.n.a.controller.InvoiceController - Fetching invoices for patient 14 by user: 14
2025-10-05 09:48:17 [http-nio-8080-exec-7] INFO  c.n.amancare.service.InvoiceService - Fetching invoices for patient 14 by user: 14
2025-10-05 09:48:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:48:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:48:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.patient_id=? 
    order by
        i1_0.invoice_date desc,
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 09:48:17 [http-nio-8080-exec-7] INFO  c.n.amancare.service.InvoiceService - Found 0 invoices for patient 14 in clinic 9
2025-10-05 09:48:17 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/patient/14
2025-10-05 09:48:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:48:17 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/patient/14
2025-10-05 09:48:17 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getPatientInvoices(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:48:17 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getPatientInvoices(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:48:17 [http-nio-8080-exec-10] INFO  c.n.a.controller.InvoiceController - Fetching invoices for patient 14 by user: 14
2025-10-05 09:48:17 [http-nio-8080-exec-10] INFO  c.n.amancare.service.InvoiceService - Fetching invoices for patient 14 by user: 14
2025-10-05 09:48:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:48:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:48:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.patient_id=? 
    order by
        i1_0.invoice_date desc,
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 09:48:17 [http-nio-8080-exec-10] INFO  c.n.amancare.service.InvoiceService - Found 0 invoices for patient 14 in clinic 9
2025-10-05 09:48:18 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /medical-records/patient/14?page=0&size=20
2025-10-05 09:48:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/patient/14?page=0&size=20
2025-10-05 09:48:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:48:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/patient/14?page=0&size=20
2025-10-05 09:48:18 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getPatientMedicalHistory(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,int,int); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:48:18 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getPatientMedicalHistory(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,int,int); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:48:18 [http-nio-8080-exec-1] INFO  c.n.a.service.MedicalRecordService - البحث عن التاريخ الطبي للمريض 14
2025-10-05 09:48:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:48:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=? 
        and p1_0.clinic_id=?
2025-10-05 09:48:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.patient_id=? 
        and mr1_0.clinic_id=? 
    order by
        mr1_0.visit_date desc,
        mr1_0.created_at desc 
    limit
        ?
2025-10-05 09:48:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:48:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:48:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:48:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:48:21 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /medical-records/2
2025-10-05 09:48:21 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/2
2025-10-05 09:48:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:48:21 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/2
2025-10-05 09:48:21 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:48:21 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:48:21 [http-nio-8080-exec-4] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 2 بواسطة المستخدم khalid.admin
2025-10-05 09:48:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=? 
        and mr1_0.clinic_id=?
2025-10-05 09:48:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:48:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:48:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:48:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:48:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:48:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:48:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-10-05 09:48:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-10-05 09:48:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-10-05 09:48:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-10-05 09:48:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-10-05 09:48:23 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /medical-records/patient/14?page=0&size=20
2025-10-05 09:48:23 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/14
2025-10-05 09:48:23 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/patient/14?page=0&size=20
2025-10-05 09:48:23 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/14
2025-10-05 09:48:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:48:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:48:23 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/14
2025-10-05 09:48:23 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/patient/14?page=0&size=20
2025-10-05 09:48:23 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:48:23 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getPatientMedicalHistory(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,int,int); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:48:23 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:48:23 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getPatientMedicalHistory(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,int,int); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:48:23 [http-nio-8080-exec-10] INFO  c.n.a.service.MedicalRecordService - البحث عن التاريخ الطبي للمريض 14
2025-10-05 09:48:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:48:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:48:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:48:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=? 
        and p1_0.clinic_id=?
2025-10-05 09:48:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.patient_id=? 
        and mr1_0.clinic_id=? 
    order by
        mr1_0.visit_date desc,
        mr1_0.created_at desc 
    limit
        ?
2025-10-05 09:48:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:48:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:48:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:48:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:48:26 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /medical-records/2
2025-10-05 09:48:26 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/2
2025-10-05 09:48:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:48:26 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/2
2025-10-05 09:48:26 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:48:26 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:48:26 [http-nio-8080-exec-8] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 2 بواسطة المستخدم khalid.admin
2025-10-05 09:48:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=? 
        and mr1_0.clinic_id=?
2025-10-05 09:48:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:48:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:48:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:48:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:48:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:48:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:48:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-10-05 09:48:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-10-05 09:48:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-10-05 09:48:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-10-05 09:48:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-10-05 09:49:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /medical-records/2
2025-10-05 09:49:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/2
2025-10-05 09:49:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:49:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/2
2025-10-05 09:49:32 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:49:32 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.getMedicalRecordById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:49:32 [http-nio-8080-exec-9] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 2 بواسطة المستخدم khalid.admin
2025-10-05 09:49:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=? 
        and mr1_0.clinic_id=?
2025-10-05 09:49:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:49:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:49:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:49:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:49:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:49:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:49:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-10-05 09:49:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-10-05 09:49:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-10-05 09:49:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-10-05 09:49:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-10-05 09:49:33 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/14?clinicId=9
2025-10-05 09:49:33 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/14?clinicId=9
2025-10-05 09:49:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:49:33 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/14?clinicId=9
2025-10-05 09:49:33 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:49:33 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:49:33 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-10-05 09:49:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:49:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:49:35 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /medical-records/2/pdf
2025-10-05 09:49:35 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medical-records/2/pdf
2025-10-05 09:49:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:49:35 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medical-records/2/pdf
2025-10-05 09:49:35 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:49:35 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.MedicalRecordController.exportMedicalRecordPdf(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.MedicalRecordController]
2025-10-05 09:49:35 [http-nio-8080-exec-3] INFO  c.n.a.c.MedicalRecordController - تصدير السجل الطبي 2 كـ PDF بواسطة المستخدم khalid.admin
2025-10-05 09:49:35 [http-nio-8080-exec-3] INFO  c.n.a.service.MedicalRecordService - البحث عن السجل الطبي 2 بواسطة المستخدم khalid.admin
2025-10-05 09:49:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight 
    from
        medical_records mr1_0 
    where
        mr1_0.id=? 
        and mr1_0.clinic_id=?
2025-10-05 09:49:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:49:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.medical_record_id,
        a1_0.allergy 
    from
        medical_record_allergies a1_0 
    where
        a1_0.medical_record_id=?
2025-10-05 09:49:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:49:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:49:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:49:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        d1_0.medical_record_id,
        d1_0.id,
        d1_0.created_at,
        d1_0.description,
        d1_0.icd_code,
        d1_0.is_primary,
        d1_0.notes,
        d1_0.type 
    from
        medical_record_diagnoses d1_0 
    where
        d1_0.medical_record_id=?
2025-10-05 09:49:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.created_at,
        p1_0.dosage,
        p1_0.duration,
        p1_0.end_date,
        p1_0.frequency,
        p1_0.generic_name,
        p1_0.instructions,
        p1_0.is_prn,
        p1_0.medication_name,
        p1_0.quantity,
        p1_0.refills,
        p1_0.route,
        p1_0.start_date 
    from
        medical_record_prescriptions p1_0 
    where
        p1_0.medical_record_id=?
2025-10-05 09:49:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        lt1_0.medical_record_id,
        lt1_0.id,
        lt1_0.category,
        lt1_0.created_at,
        lt1_0.instructions,
        lt1_0.interpretation,
        lt1_0.normal_range,
        lt1_0.ordered_date,
        lt1_0.performed_by,
        lt1_0.result_date,
        lt1_0.results,
        lt1_0.specimen_type,
        lt1_0.status,
        lt1_0.test_code,
        lt1_0.test_name,
        lt1_0.updated_at,
        lt1_0.urgency 
    from
        medical_record_lab_tests lt1_0 
    where
        lt1_0.medical_record_id=?
2025-10-05 09:49:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        rt1_0.medical_record_id,
        rt1_0.id,
        rt1_0.body_part,
        rt1_0.created_at,
        rt1_0.findings,
        rt1_0.impression,
        rt1_0.instructions,
        rt1_0.ordered_date,
        rt1_0.performed_date,
        rt1_0.radiologist_name,
        rt1_0.status,
        rt1_0.test_name,
        rt1_0.test_type,
        rt1_0.updated_at,
        rt1_0.urgency 
    from
        medical_record_radiology_tests rt1_0 
    where
        rt1_0.medical_record_id=?
2025-10-05 09:49:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.medical_record_id,
        p1_0.id,
        p1_0.category,
        p1_0.complications,
        p1_0.created_at,
        p1_0.description,
        p1_0.notes,
        p1_0.outcome,
        p1_0.performed_by,
        p1_0.performed_date,
        p1_0.procedure_code,
        p1_0.procedure_name 
    from
        medical_record_procedures p1_0 
    where
        p1_0.medical_record_id=?
2025-10-05 09:49:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.medical_record_id,
        r1_0.id,
        r1_0.appointment_date,
        r1_0.created_at,
        r1_0.is_completed,
        r1_0.notes,
        r1_0.priority,
        r1_0.reason,
        r1_0.referral_date,
        r1_0.referral_type,
        r1_0.referred_to,
        r1_0.specialty,
        r1_0.updated_at 
    from
        medical_record_referrals r1_0 
    where
        r1_0.medical_record_id=?
2025-10-05 09:49:35 [http-nio-8080-exec-3] INFO  c.n.a.s.pdf.PdfMedicalRecordService - إنشاء ملف PDF للسجل الطبي: 2
2025-10-05 09:49:56 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20
2025-10-05 09:49:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20
2025-10-05 09:49:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:49:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20
2025-10-05 09:49:56 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 09:49:56 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 09:49:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 09:49:57 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-10-05 09:49:57 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05
2025-10-05 09:49:57 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05
2025-10-05 09:49:57 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-10-05 09:49:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:49:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:49:57 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-10-05 09:49:57 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05
2025-10-05 09:49:57 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:49:57 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:49:57 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:49:57 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:49:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:49:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:49:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 09:49:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 09:49:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 09:49:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 09:49:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 09:49:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 09:49:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 09:49:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 09:50:00 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108/payments
2025-10-05 09:50:00 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/108
2025-10-05 09:50:00 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108/payments
2025-10-05 09:50:00 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/108
2025-10-05 09:50:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:50:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:50:00 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108
2025-10-05 09:50:00 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/108/payments
2025-10-05 09:50:00 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:50:00 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:50:00 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoicePayments(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:50:00 [http-nio-8080-exec-5] INFO  c.n.a.controller.InvoiceController - Fetching payments for invoice 108 by user: 14
2025-10-05 09:50:00 [http-nio-8080-exec-5] INFO  c.n.amancare.service.InvoiceService - Fetching payments for invoice: 108 by user: 14
2025-10-05 09:50:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:50:00 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceById(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 09:50:00 [http-nio-8080-exec-4] INFO  c.n.a.controller.InvoiceController - Fetching invoice 108 by user: 14
2025-10-05 09:50:00 [http-nio-8080-exec-4] INFO  c.n.amancare.service.InvoiceService - Fetching invoice: 108 by user: 14
2025-10-05 09:50:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.id=?
2025-10-05 09:50:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:50:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.invoice_id,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=? 
    order by
        p1_0.payment_date desc
2025-10-05 09:50:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:50:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 09:50:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:50:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 09:50:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:50:22 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 09:50:22 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-10-05 09:50:22 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 09:50:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:50:22 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 09:50:22 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 09:50:22 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 09:50:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:50:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:50:25 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/9
2025-10-05 09:50:25 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/9
2025-10-05 09:50:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:50:25 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/9
2025-10-05 09:50:25 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAppointmentById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:50:25 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAppointmentById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:50:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-10-05 09:50:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:50:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:50:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:50:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:50:25 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/14/upcoming
2025-10-05 09:50:25 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/14/upcoming
2025-10-05 09:50:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:50:25 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/14/upcoming
2025-10-05 09:50:25 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:50:25 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:50:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:50:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-10-05 09:50:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-10-05 09:50:36 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-05 09:50:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-10-05 09:51:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/14?clinicId=9
2025-10-05 09:51:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/14?clinicId=9
2025-10-05 09:51:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:51:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/14?clinicId=9
2025-10-05 09:51:40 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:51:40 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 09:51:40 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-10-05 09:51:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 09:51:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:51:40 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/9
2025-10-05 09:51:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/9
2025-10-05 09:51:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:51:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/9
2025-10-05 09:51:40 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAppointmentById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:51:40 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAppointmentById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:51:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-10-05 09:51:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 09:51:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:51:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:51:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:51:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/14/upcoming
2025-10-05 09:51:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/14/upcoming
2025-10-05 09:51:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 09:51:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/14/upcoming
2025-10-05 09:51:40 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:51:40 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 09:51:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 09:51:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-10-05 10:27:14 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=35m30s435ms).
2025-10-05 11:47:25 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h20m10s772ms).
2025-10-05 12:53:46 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h6m20s855ms).
2025-10-05 14:10:08 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h16m22s753ms).
2025-10-05 14:10:12 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-10-05 14:10:12 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-10-05 14:10:12 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-10-05 14:10:12 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-10-05 14:28:26 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20
2025-10-05 14:28:26 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20
2025-10-05 14:28:26 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-05 14:28:26 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/refresh
2025-10-05 14:28:26 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/refresh
2025-10-05 14:28:26 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-05 14:28:26 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/refresh
2025-10-05 14:28:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:28:27 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-10-05 14:28:27 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05
2025-10-05 14:28:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-10-05 14:28:27 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05
2025-10-05 14:28:27 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-05 14:28:27 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-05 14:28:30 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20
2025-10-05 14:28:30 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-05 14:28:30 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/refresh
2025-10-05 14:28:30 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-05 14:28:30 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/refresh
2025-10-05 14:28:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:28:31 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05
2025-10-05 14:28:31 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-10-05 14:28:31 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-05 14:28:31 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-05 14:28:32 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=18m23s831ms).
2025-10-05 14:29:00 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/login
2025-10-05 14:29:00 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-10-05 14:29:00 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-05 14:29:00 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-10-05 14:29:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.username = :usernameOrEmail 
        OR u.email = :usernameOrEmail */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.username=? 
            or u1_0.email=?
2025-10-05 14:29:00 [http-nio-8080-exec-8] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-05 14:29:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* update
        for com.nakqeeb.amancare.entity.User */update users 
    set
        clinic_id=?,
        email=?,
        first_name=?,
        is_active=?,
        last_login=?,
        last_name=?,
        password_hash=?,
        phone=?,
        role=?,
        specialization=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-10-05 14:29:00 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/me
2025-10-05 14:29:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/me
2025-10-05 14:29:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:29:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/me
2025-10-05 14:29:00 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-10-05 14:29:00 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-10-05 14:29:00 [http-nio-8080-exec-9] INFO  c.n.amancare.service.ClinicService - Fetching clinic with ID: 9 by user: 14
2025-10-05 14:29:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:29:00 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20
2025-10-05 14:29:00 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20
2025-10-05 14:29:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:29:00 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20
2025-10-05 14:29:00 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:29:00 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:29:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:29:01 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-10-05 14:29:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05
2025-10-05 14:29:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05
2025-10-05 14:29:01 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-10-05 14:29:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:29:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:29:01 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-10-05 14:29:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05
2025-10-05 14:29:01 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:29:01 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 14:29:01 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 14:29:01 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:29:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:29:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:29:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 14:29:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 14:29:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 14:29:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 14:29:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 14:29:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 14:29:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 14:29:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 14:29:19 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20
2025-10-05 14:29:19 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20
2025-10-05 14:29:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:29:19 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20
2025-10-05 14:29:19 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:29:19 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:29:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:29:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-10-05 14:29:20 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05
2025-10-05 14:29:20 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05
2025-10-05 14:29:20 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-10-05 14:29:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:29:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:29:20 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-10-05 14:29:20 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05
2025-10-05 14:29:20 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:29:20 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:29:20 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 14:29:20 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 14:29:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:29:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:29:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 14:29:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 14:29:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 14:29:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 14:29:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 14:29:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 14:29:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 14:29:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 14:29:28 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 14:29:28 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-10-05 14:29:28 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-10-05 14:29:28 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 14:29:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:29:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:29:28 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-10-05 14:29:28 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 14:29:28 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 14:29:28 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 14:29:28 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 14:29:28 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 14:29:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:29:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:29:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 14:29:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 14:29:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-10-05 14:29:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 14:29:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 14:29:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 14:29:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 14:29:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 14:29:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 14:29:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 14:29:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 14:29:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 14:29:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 14:29:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 14:29:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 14:29:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 14:29:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 14:29:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 14:29:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 14:29:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 14:29:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 14:29:41 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:29:41 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:29:41 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-05 14:29:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/refresh
2025-10-05 14:29:42 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/refresh
2025-10-05 14:29:42 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-05 14:29:42 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/refresh
2025-10-05 14:29:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:29:42 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:29:42 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-10-05 14:29:42 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-10-05 14:29:42 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:29:42 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-05 14:29:42 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-05 14:29:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/login
2025-10-05 14:29:58 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-10-05 14:29:58 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-05 14:29:58 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-10-05 14:29:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.username = :usernameOrEmail 
        OR u.email = :usernameOrEmail */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.username=? 
            or u1_0.email=?
2025-10-05 14:29:58 [http-nio-8080-exec-10] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-05 14:29:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* update
        for com.nakqeeb.amancare.entity.User */update users 
    set
        clinic_id=?,
        email=?,
        first_name=?,
        is_active=?,
        last_login=?,
        last_name=?,
        password_hash=?,
        phone=?,
        role=?,
        specialization=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-10-05 14:29:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/me
2025-10-05 14:29:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/me
2025-10-05 14:29:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:29:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/me
2025-10-05 14:29:58 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-10-05 14:29:58 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-10-05 14:29:58 [http-nio-8080-exec-5] INFO  c.n.amancare.service.ClinicService - Fetching clinic with ID: 1 by user: 2
2025-10-05 14:29:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:29:58 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:29:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:29:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:29:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:29:58 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:29:58 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:29:58 [http-nio-8080-exec-4] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:29:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:29:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:29:59 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-10-05 14:29:59 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:29:59 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-10-05 14:29:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:29:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:29:59 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-10-05 14:29:59 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:29:59 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:29:59 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 14:29:59 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:29:59 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 14:29:59 [http-nio-8080-exec-6] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-10-05 14:29:59 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-10-05 14:29:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:29:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:29:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 14:29:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 14:29:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 14:29:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 14:29:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 14:29:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 14:29:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 14:29:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 14:30:06 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:30:06 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:30:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:30:06 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:30:06 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:30:06 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:30:06 [http-nio-8080-exec-5] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-10-05 14:30:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:30:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 14:30:09 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:30:09 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:30:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:30:09 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:30:09 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:30:09 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:30:09 [http-nio-8080-exec-4] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:30:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:30:10 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:30:10 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-10-05 14:30:10 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-10-05 14:30:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:30:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:30:10 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:30:10 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:30:10 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:30:10 [http-nio-8080-exec-9] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-10-05 14:30:10 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-10-05 14:30:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:30:10 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 14:30:10 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 14:30:10 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-10-05 14:30:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:30:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 14:30:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 14:30:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 14:30:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 14:30:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 14:30:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 14:30:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 14:30:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 14:30:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:30:39 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:30:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:30:39 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:30:39 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:30:39 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:30:39 [http-nio-8080-exec-1] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:30:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:30:57 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices/statistics?clinicId=9
2025-10-05 14:30:57 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 14:30:57 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices/statistics?clinicId=9
2025-10-05 14:30:57 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 14:30:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:30:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:30:57 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices/statistics?clinicId=9
2025-10-05 14:30:57 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /invoices?clinicId=9&sortBy=invoiceDate&sortDirection=DESC
2025-10-05 14:30:57 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 14:30:57 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getInvoiceStatistics(java.lang.Long,com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 14:30:57 [http-nio-8080-exec-9] INFO  c.n.a.controller.InvoiceController - Fetching invoice statistics for clinic 9 by user: 2
2025-10-05 14:30:57 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 14:30:57 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.InvoiceController.getAllInvoices(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,com.nakqeeb.amancare.entity.InvoiceStatus,java.time.LocalDate,java.time.LocalDate,java.math.BigDecimal,java.math.BigDecimal,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.InvoiceController]
2025-10-05 14:30:57 [http-nio-8080-exec-9] INFO  c.n.amancare.service.InvoiceService - Fetching invoice statistics for clinic: 9 by user: 2
2025-10-05 14:30:57 [http-nio-8080-exec-7] INFO  c.n.amancare.service.InvoiceService - Fetching invoices with criteria by user: 2
2025-10-05 14:30:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:30:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:30:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=?
2025-10-05 14:30:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
    order by
        i1_0.invoice_date desc 
    limit
        ?
2025-10-05 14:30:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 14:30:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 14:30:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 14:30:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 14:30:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 14:30:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 14:30:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:30:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 14:30:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.status=?
2025-10-05 14:30:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 14:30:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 14:30:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.totalAmount), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status = 'PAID' */ select
            coalesce(sum(i1_0.total_amount), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status='PAID'
2025-10-05 14:30:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:30:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 14:30:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 14:30:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.status IN ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID') */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.status in ('PENDING', 'SENT', 'VIEWED', 'PARTIALLY_PAID')
2025-10-05 14:30:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.invoice_id,
        i1_0.id,
        i1_0.category,
        i1_0.created_at,
        i1_0.description,
        i1_0.discount_amount,
        i1_0.discount_percentage,
        i1_0.notes,
        i1_0.performed_by,
        i1_0.procedure_date,
        i1_0.quantity,
        i1_0.service_code,
        i1_0.service_name,
        i1_0.tax_amount,
        i1_0.is_taxable,
        i1_0.total_price,
        i1_0.unit_price,
        i1_0.updated_at 
    from
        invoice_items i1_0 
    where
        i1_0.invoice_id=?
2025-10-05 14:30:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(i.balanceDue), 0) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND i.dueDate < CURRENT_DATE() 
        AND i.balanceDue > 0 */ select
            coalesce(sum(i1_0.balance_due), 0) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and i1_0.due_date<current_date 
            and i1_0.balance_due>0
2025-10-05 14:30:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.invoice_id,
        p1_0.id,
        p1_0.amount,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.notes,
        p1_0.patient_id,
        p1_0.payment_date,
        p1_0.payment_method,
        p1_0.reference_number,
        p1_0.updated_at 
    from
        payments p1_0 
    where
        p1_0.invoice_id=?
2025-10-05 14:30:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND p.paymentDate = :date */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.payment_date=?
2025-10-05 14:30:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COALESCE(SUM(p.amount), 0) 
    FROM
        Payment p 
    WHERE
        p.clinic = :clinic 
        AND YEAR(p.paymentDate) = :year 
        AND MONTH(p.paymentDate) = :month */ select
            coalesce(sum(p1_0.amount), 0) 
        from
            payments p1_0 
        where
            p1_0.clinic_id=? 
            and year(p1_0.payment_date)=? 
            and month(p1_0.payment_date)=?
2025-10-05 14:30:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(i1_0.id) 
    from
        invoices i1_0 
    where
        i1_0.clinic_id=? 
        and i1_0.invoice_date=?
2025-10-05 14:30:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(i) 
    FROM
        Invoice i 
    WHERE
        i.clinic = :clinic 
        AND YEAR(i.invoiceDate) = :year 
        AND MONTH(i.invoiceDate) = :month */ select
            count(i1_0.id) 
        from
            invoices i1_0 
        where
            i1_0.clinic_id=? 
            and year(i1_0.invoice_date)=? 
            and month(i1_0.invoice_date)=?
2025-10-05 14:31:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:31:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:31:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:31:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:31:02 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:31:02 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:31:02 [http-nio-8080-exec-3] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:31:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:31:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:31:03 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-10-05 14:31:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:31:03 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-10-05 14:31:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:31:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:31:03 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-10-05 14:31:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:31:03 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:31:03 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:31:03 [http-nio-8080-exec-8] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-10-05 14:31:03 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 14:31:03 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 14:31:03 [http-nio-8080-exec-4] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-10-05 14:31:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:31:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:31:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 14:31:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 14:31:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 14:31:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 14:31:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 14:31:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 14:31:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 14:31:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 14:31:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:31:04 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-10-05 14:31:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:31:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:31:04 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-10-05 14:31:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:31:04 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 14:31:04 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:31:04 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 14:31:04 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:31:04 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-10-05 14:31:04 [http-nio-8080-exec-7] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-10-05 14:31:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:31:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:31:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 14:31:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 14:31:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 14:31:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 14:31:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 14:31:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 14:31:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 14:31:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 14:31:05 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:31:05 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-10-05 14:31:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:31:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:31:05 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:31:05 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-10-05 14:31:05 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:31:05 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 14:31:05 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:31:05 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 14:31:05 [http-nio-8080-exec-10] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-10-05 14:31:05 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-10-05 14:31:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:31:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:31:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 14:31:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 14:31:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 14:31:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 14:31:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 14:31:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 14:31:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 14:31:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 14:31:06 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:31:06 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-10-05 14:31:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:31:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:31:06 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-10-05 14:31:06 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:31:06 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:31:06 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 14:31:06 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 14:31:06 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:31:06 [http-nio-8080-exec-5] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-10-05 14:31:06 [http-nio-8080-exec-1] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-10-05 14:31:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:31:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:31:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 14:31:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 14:31:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 14:31:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 14:31:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 14:31:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 14:31:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 14:31:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 14:31:06 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:31:06 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-10-05 14:31:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:31:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:31:06 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-10-05 14:31:06 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:31:06 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 14:31:06 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:31:06 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 14:31:06 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:31:06 [http-nio-8080-exec-4] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-10-05 14:31:06 [http-nio-8080-exec-8] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-10-05 14:31:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:31:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:31:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 14:31:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 14:31:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 14:31:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 14:31:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 14:31:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 14:31:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 14:31:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 14:31:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:31:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:31:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:31:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:31:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:31:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:31:32 [http-nio-8080-exec-6] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:31:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:32:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:32:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:32:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:32:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:32:02 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:32:02 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:32:02 [http-nio-8080-exec-1] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:32:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:32:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:32:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:32:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:32:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:32:32 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:32:32 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:32:32 [http-nio-8080-exec-4] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:32:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:33:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:33:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:33:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:33:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:33:02 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:33:02 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:33:02 [http-nio-8080-exec-10] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:33:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:33:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:33:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:33:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:33:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:33:32 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:33:32 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:33:32 [http-nio-8080-exec-2] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:33:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:34:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:34:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:34:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:34:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:34:02 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:34:02 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:34:02 [http-nio-8080-exec-8] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:34:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:34:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:34:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:34:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:34:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:34:32 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:34:32 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:34:32 [http-nio-8080-exec-9] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:34:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:35:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:35:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:35:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:35:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:35:02 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:35:02 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:35:02 [http-nio-8080-exec-3] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:35:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:35:06 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:35:06 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:35:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:35:06 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:35:06 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:35:06 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:35:06 [http-nio-8080-exec-5] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-10-05 14:35:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:35:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 14:35:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:35:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:35:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:35:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:35:32 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:35:32 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:35:32 [http-nio-8080-exec-7] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:35:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:36:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:36:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:36:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:36:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:36:02 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:36:02 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:36:02 [http-nio-8080-exec-6] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:36:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:36:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:36:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:36:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:36:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:36:32 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:36:32 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:36:32 [http-nio-8080-exec-1] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:36:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:37:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:37:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:37:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:37:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:37:02 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:37:02 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:37:02 [http-nio-8080-exec-4] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:37:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:37:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:37:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:37:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:37:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:37:32 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:37:32 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:37:32 [http-nio-8080-exec-10] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:37:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:38:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:38:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:38:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:38:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:38:02 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:38:02 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:38:02 [http-nio-8080-exec-2] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:38:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:38:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:38:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:38:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:38:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:38:32 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:38:32 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:38:32 [http-nio-8080-exec-8] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:38:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:39:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:39:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:39:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:39:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:39:02 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:39:02 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:39:02 [http-nio-8080-exec-9] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:39:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:39:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:39:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:39:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:39:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:39:32 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:39:32 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:39:32 [http-nio-8080-exec-3] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:39:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:40:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:40:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:40:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:40:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:40:02 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:40:02 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:40:02 [http-nio-8080-exec-5] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:40:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:40:06 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:40:06 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:40:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:40:06 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:40:06 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:40:06 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:40:06 [http-nio-8080-exec-4] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-10-05 14:40:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:40:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 14:40:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:40:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:40:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:40:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:40:32 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:40:32 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:40:32 [http-nio-8080-exec-10] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:40:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:41:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:41:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:41:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:41:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:41:02 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:41:02 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:41:02 [http-nio-8080-exec-2] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:41:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:41:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:41:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:41:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:41:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:41:32 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:41:32 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:41:32 [http-nio-8080-exec-8] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:41:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:42:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:42:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:42:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:42:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:42:02 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:42:02 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:42:02 [http-nio-8080-exec-9] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:42:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:42:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:42:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:42:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:42:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:42:32 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:42:32 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:42:32 [http-nio-8080-exec-3] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:42:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:43:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:43:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:43:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:43:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:43:02 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:43:02 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:43:02 [http-nio-8080-exec-5] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:43:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:43:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:43:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:43:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:43:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:43:32 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:43:32 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:43:32 [http-nio-8080-exec-7] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:43:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:44:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:44:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:44:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:44:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:44:02 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:44:02 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:44:02 [http-nio-8080-exec-6] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:44:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:44:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:44:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:44:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:44:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:44:32 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:44:32 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:44:32 [http-nio-8080-exec-1] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:44:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:45:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:45:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:45:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:45:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:45:02 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:45:02 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:45:02 [http-nio-8080-exec-4] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:45:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:45:06 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:45:06 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:45:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:45:06 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:45:06 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:45:06 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:45:06 [http-nio-8080-exec-10] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-10-05 14:45:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:45:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 14:45:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:45:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:45:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:45:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:45:32 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:45:32 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:45:32 [http-nio-8080-exec-2] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:45:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:46:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:46:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:46:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:46:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:46:02 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:46:02 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:46:02 [http-nio-8080-exec-8] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:46:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:46:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:46:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:46:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:46:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:46:32 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:46:32 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:46:32 [http-nio-8080-exec-9] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:46:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:47:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:47:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:47:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:47:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:47:02 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:47:02 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:47:02 [http-nio-8080-exec-3] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:47:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:47:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:47:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:47:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:47:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:47:32 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:47:32 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:47:32 [http-nio-8080-exec-5] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:47:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:48:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:48:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:48:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:48:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:48:02 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:48:02 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:48:02 [http-nio-8080-exec-7] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:48:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:48:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:48:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:48:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:48:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:48:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:48:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:48:32 [http-nio-8080-exec-6] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:48:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:49:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:49:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:49:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:49:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:49:02 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:49:02 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:49:02 [http-nio-8080-exec-1] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:49:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:49:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:49:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:49:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:49:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:49:32 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:49:32 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:49:32 [http-nio-8080-exec-4] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:49:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:50:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:50:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:50:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:50:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:50:02 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:50:02 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:50:02 [http-nio-8080-exec-10] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:50:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:50:06 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:50:06 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:50:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:50:06 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:50:06 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:50:06 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:50:06 [http-nio-8080-exec-2] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-10-05 14:50:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:50:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 14:50:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:50:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:50:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:50:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:50:32 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:50:32 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:50:32 [http-nio-8080-exec-8] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:50:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:51:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:51:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:51:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:51:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:51:02 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:51:02 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:51:02 [http-nio-8080-exec-9] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:51:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:51:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:51:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:51:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:51:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:51:32 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:51:32 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:51:32 [http-nio-8080-exec-3] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:51:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:52:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:52:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:52:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:52:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:52:02 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:52:02 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:52:02 [http-nio-8080-exec-5] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:52:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:52:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:52:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:52:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:52:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:52:32 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:52:32 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:52:32 [http-nio-8080-exec-7] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:52:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:53:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:53:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:53:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:53:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:53:02 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:53:02 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:53:02 [http-nio-8080-exec-6] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:53:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:53:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:53:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:53:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:53:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:53:32 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:53:32 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:53:32 [http-nio-8080-exec-1] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:53:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:54:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:54:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:54:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:54:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:54:02 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:54:02 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:54:02 [http-nio-8080-exec-4] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:54:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:54:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:54:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:54:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:54:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:54:32 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:54:32 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:54:32 [http-nio-8080-exec-10] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:54:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:55:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:55:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:55:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:55:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:55:02 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:55:02 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:55:02 [http-nio-8080-exec-2] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:55:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:55:06 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:55:06 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:55:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:55:06 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 14:55:06 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:55:06 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 14:55:06 [http-nio-8080-exec-8] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-10-05 14:55:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 14:55:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 14:55:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:55:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:55:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:55:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:55:32 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:55:32 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:55:32 [http-nio-8080-exec-9] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:55:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:56:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:56:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:56:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:56:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:56:02 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:56:02 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:56:02 [http-nio-8080-exec-3] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:56:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:56:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:56:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:56:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:56:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:56:32 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:56:32 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:56:32 [http-nio-8080-exec-5] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:56:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:57:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:57:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:57:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:57:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:57:02 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:57:02 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:57:02 [http-nio-8080-exec-7] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:57:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:57:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:57:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:57:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:57:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:57:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:57:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:57:32 [http-nio-8080-exec-6] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:57:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:58:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:58:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:58:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:58:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:58:02 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:58:02 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:58:02 [http-nio-8080-exec-1] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:58:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:58:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:58:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:58:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:58:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:58:32 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:58:32 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:58:32 [http-nio-8080-exec-4] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:58:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:59:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:59:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:59:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:59:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:59:02 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:59:02 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:59:02 [http-nio-8080-exec-10] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:59:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 14:59:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:59:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:59:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 14:59:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 14:59:32 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:59:32 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 14:59:32 [http-nio-8080-exec-2] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 14:59:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 15:00:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:00:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:00:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:00:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:00:02 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:00:02 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:00:02 [http-nio-8080-exec-8] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 15:00:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 15:00:06 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 15:00:06 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 15:00:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:00:06 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 15:00:06 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:00:06 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:00:06 [http-nio-8080-exec-9] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-10-05 15:00:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:00:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 15:00:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:00:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:00:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:00:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:00:32 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:00:32 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:00:32 [http-nio-8080-exec-3] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 15:00:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 15:01:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:01:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:01:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:01:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:01:02 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:01:02 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:01:02 [http-nio-8080-exec-5] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 15:01:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 15:01:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:01:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:01:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:01:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:01:32 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:01:32 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:01:32 [http-nio-8080-exec-7] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 15:01:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 15:02:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:02:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:02:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:02:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:02:02 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:02:02 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:02:02 [http-nio-8080-exec-6] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 15:02:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 15:02:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:02:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:02:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:02:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:02:32 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:02:32 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:02:32 [http-nio-8080-exec-1] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 15:02:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 15:03:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:03:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:03:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:03:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:03:02 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:03:02 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:03:02 [http-nio-8080-exec-4] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 15:03:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 15:03:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:03:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:03:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:03:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:03:32 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:03:32 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:03:32 [http-nio-8080-exec-10] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 15:03:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 15:04:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:04:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:04:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:04:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:04:02 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:04:02 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:04:02 [http-nio-8080-exec-2] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 15:04:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 15:04:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:04:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:04:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:04:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:04:32 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:04:32 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:04:32 [http-nio-8080-exec-8] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 15:04:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 15:05:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:05:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:05:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:05:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:05:02 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:05:02 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:05:02 [http-nio-8080-exec-9] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 15:05:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 15:05:05 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 15:05:05 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 15:05:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:05:05 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 15:05:05 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:05:05 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:05:05 [http-nio-8080-exec-3] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-10-05 15:05:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:05:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 15:05:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:05:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:05:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:05:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:05:32 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:05:32 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:05:32 [http-nio-8080-exec-5] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 15:05:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 15:06:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:06:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:06:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:06:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:06:02 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:06:02 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:06:02 [http-nio-8080-exec-7] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 15:06:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 15:06:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:06:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:06:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:06:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:06:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:06:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:06:32 [http-nio-8080-exec-6] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 15:06:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 15:07:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:07:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:07:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:07:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:07:02 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:07:02 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:07:02 [http-nio-8080-exec-1] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 15:07:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 15:07:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:07:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:07:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:07:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:07:32 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:07:32 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:07:32 [http-nio-8080-exec-4] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 15:07:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 15:08:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:08:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:08:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:08:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20&clinicId=9
2025-10-05 15:08:02 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:08:02 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:08:02 [http-nio-8080-exec-10] INFO  c.n.a.c.ActivityLogController - SYSTEM_ADMIN reading recent activities for clinic: 9
2025-10-05 15:08:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 15:08:30 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /schedules/all
2025-10-05 15:08:30 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/all
2025-10-05 15:08:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:08:30 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/all
2025-10-05 15:08:30 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAllDoctorsSchedules(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:08:30 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAllDoctorsSchedules(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:08:30 [http-nio-8080-exec-2] INFO  c.n.a.c.DoctorScheduleController - SYSTEM_ADMIN reading all doctors schedules from clinic: ALL
2025-10-05 15:08:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor.clinic.id = :clinicId 
        AND ds.isActive = true */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        join
            users d1_0 
                on d1_0.id=ds1_0.doctor_id 
        where
            d1_0.clinic_id=? 
            and ds1_0.is_active=1
2025-10-05 15:08:37 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/clinic-users?activeOnly=true
2025-10-05 15:08:37 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-10-05 15:08:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/clinic-users/stats
2025-10-05 15:08:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/clinic-users?activeOnly=true
2025-10-05 15:08:37 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-10-05 15:08:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/clinic-users/stats
2025-10-05 15:08:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:08:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:08:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:08:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/clinic-users?activeOnly=true
2025-10-05 15:08:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/clinic-users/stats
2025-10-05 15:08:37 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-10-05 15:08:37 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:08:37 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getClinicUserStats(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:08:37 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:08:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 15:08:37 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getClinicUserStats(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:08:37 [http-nio-8080-exec-10] INFO  c.n.a.controller.UserController - Controller: Getting clinic stats for admin khalid.admin
2025-10-05 15:08:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:08:37 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getClinicUsers(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:08:37 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getClinicUsers(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:08:37 [http-nio-8080-exec-4] INFO  c.n.a.controller.UserController - Controller: Getting clinic users for admin khalid.admin, role: null, activeOnly: true
2025-10-05 15:08:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(u1_0.id) 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-05 15:08:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:08:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(u) 
    FROM
        User u 
    WHERE
        u.clinic = :clinic 
        AND u.isActive = true */ select
            count(u1_0.id) 
        from
            users u1_0 
        where
            u1_0.clinic_id=? 
            and u1_0.is_active=1
2025-10-05 15:08:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=? 
        and u1_0.is_active
2025-10-05 15:08:37 [http-nio-8080-exec-4] INFO  c.n.amancare.service.UserService - Found 2 clinic users for clinic ID: 9
2025-10-05 15:08:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(u) 
    FROM
        User u 
    WHERE
        u.clinic = :clinic 
        AND u.role = :role */ select
            count(u1_0.id) 
        from
            users u1_0 
        where
            u1_0.clinic_id=? 
            and u1_0.role=?
2025-10-05 15:08:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(u) 
    FROM
        User u 
    WHERE
        u.clinic = :clinic 
        AND u.role = :role */ select
            count(u1_0.id) 
        from
            users u1_0 
        where
            u1_0.clinic_id=? 
            and u1_0.role=?
2025-10-05 15:08:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(u) 
    FROM
        User u 
    WHERE
        u.clinic = :clinic 
        AND u.role = :role */ select
            count(u1_0.id) 
        from
            users u1_0 
        where
            u1_0.clinic_id=? 
            and u1_0.role=?
2025-10-05 15:08:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(u) 
    FROM
        User u 
    WHERE
        u.clinic = :clinic 
        AND u.role = :role 
        AND u.isActive = true */ select
            count(u1_0.id) 
        from
            users u1_0 
        where
            u1_0.clinic_id=? 
            and u1_0.role=? 
            and u1_0.is_active=1
2025-10-05 15:08:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(u) 
    FROM
        User u 
    WHERE
        u.clinic = :clinic 
        AND u.role = :role 
        AND u.isActive = true */ select
            count(u1_0.id) 
        from
            users u1_0 
        where
            u1_0.clinic_id=? 
            and u1_0.role=? 
            and u1_0.is_active=1
2025-10-05 15:08:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(u) 
    FROM
        User u 
    WHERE
        u.clinic = :clinic 
        AND u.role = :role 
        AND u.isActive = true */ select
            count(u1_0.id) 
        from
            users u1_0 
        where
            u1_0.clinic_id=? 
            and u1_0.role=? 
            and u1_0.is_active=1
2025-10-05 15:08:37 [http-nio-8080-exec-10] INFO  c.n.amancare.service.UserService - Clinic stats - Total: 3, Active: 3, Doctors: 1, Nurses: 0, Receptionists: 1
2025-10-05 15:08:39 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-10-05 15:08:39 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:08:39 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-10-05 15:08:39 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:08:39 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:08:39 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 15:08:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-10-05 15:08:45 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-10-05 15:08:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:08:45 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-10-05 15:08:45 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:08:45 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:08:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 15:09:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/clinic-users/18
2025-10-05 15:09:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/clinic-users/18
2025-10-05 15:09:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:09:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/clinic-users/18
2025-10-05 15:09:02 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getClinicUserById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:09:02 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getClinicUserById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:09:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:09:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:09:19 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/clinic-users/18/toggle-status?isActive=false
2025-10-05 15:09:19 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /users/clinic-users/18/toggle-status?isActive=false
2025-10-05 15:09:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:09:19 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /users/clinic-users/18/toggle-status?isActive=false
2025-10-05 15:09:19 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.toggleUserStatus(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,boolean); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:09:19 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.toggleUserStatus(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,boolean); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:09:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:09:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:09:19 [http-nio-8080-exec-1] INFO  c.n.amancare.service.UserService - User 18 status changed to inactive by admin khalid.admin
2025-10-05 15:09:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* update
        for com.nakqeeb.amancare.entity.User */update users 
    set
        clinic_id=?,
        email=?,
        first_name=?,
        is_active=?,
        last_login=?,
        last_name=?,
        password_hash=?,
        phone=?,
        role=?,
        specialization=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-10-05 15:09:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:09:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:09:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.ActivityLog */insert 
    into
        activity_logs (action_type, clinic_id, clinic_name, created_at, description, duration_ms, endpoint, entity_id, entity_name, entity_type, error_message, http_method, ip_address, new_value, old_value, success, timestamp, updated_at, user_agent, user_full_name, user_id, user_role, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 15:09:22 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/clinic-users/18/toggle-status?isActive=true
2025-10-05 15:09:22 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /users/clinic-users/18/toggle-status?isActive=true
2025-10-05 15:09:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:09:22 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /users/clinic-users/18/toggle-status?isActive=true
2025-10-05 15:09:22 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.toggleUserStatus(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,boolean); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:09:22 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.toggleUserStatus(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,boolean); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:09:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:09:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:09:22 [http-nio-8080-exec-5] INFO  c.n.amancare.service.UserService - User 18 status changed to active by admin khalid.admin
2025-10-05 15:09:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* update
        for com.nakqeeb.amancare.entity.User */update users 
    set
        clinic_id=?,
        email=?,
        first_name=?,
        is_active=?,
        last_login=?,
        last_name=?,
        password_hash=?,
        phone=?,
        role=?,
        specialization=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-10-05 15:09:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:09:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:09:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.ActivityLog */insert 
    into
        activity_logs (action_type, clinic_id, clinic_name, created_at, description, duration_ms, endpoint, entity_id, entity_name, entity_type, error_message, http_method, ip_address, new_value, old_value, success, timestamp, updated_at, user_agent, user_full_name, user_id, user_role, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 15:09:34 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /schedules/all
2025-10-05 15:09:34 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/all
2025-10-05 15:09:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:09:34 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/all
2025-10-05 15:09:34 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAllDoctorsSchedules(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:09:34 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAllDoctorsSchedules(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:09:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor.clinic.id = :clinicId 
        AND ds.isActive = true */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        join
            users d1_0 
                on d1_0.id=ds1_0.doctor_id 
        where
            d1_0.clinic_id=? 
            and ds1_0.is_active=1
2025-10-05 15:09:38 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-10-05 15:09:38 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-10-05 15:09:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:09:38 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-10-05 15:09:38 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:09:38 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:09:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 15:10:05 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 15:10:05 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 15:10:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:10:05 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 15:10:05 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:10:05 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:10:05 [http-nio-8080-exec-3] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-10-05 15:10:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:10:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 15:13:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /schedules/doctor
2025-10-05 15:13:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /schedules/doctor
2025-10-05 15:13:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:13:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /schedules/doctor
2025-10-05 15:13:32 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.createDoctorSchedule(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateDoctorScheduleRequest); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:13:32 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.createDoctorSchedule(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateDoctorScheduleRequest); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:13:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:13:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ds1_0.id,
        ds1_0.break_end_time,
        ds1_0.break_start_time,
        ds1_0.created_at,
        ds1_0.day_of_week,
        ds1_0.doctor_id,
        ds1_0.effective_date,
        ds1_0.end_date,
        ds1_0.end_time,
        ds1_0.is_active,
        ds1_0.notes,
        ds1_0.schedule_type,
        ds1_0.start_time,
        ds1_0.updated_at 
    from
        doctor_schedules ds1_0 
    where
        ds1_0.doctor_id=? 
        and ds1_0.day_of_week=? 
        and ds1_0.is_active
2025-10-05 15:13:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.DoctorSchedule */insert 
    into
        doctor_schedules (break_end_time, break_start_time, created_at, day_of_week, doctor_id, effective_date, end_date, end_time, is_active, notes, schedule_type, start_time, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 15:13:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ds1_0.id,
        ds1_0.break_end_time,
        ds1_0.break_start_time,
        ds1_0.created_at,
        ds1_0.day_of_week,
        ds1_0.doctor_id,
        ds1_0.effective_date,
        ds1_0.end_date,
        ds1_0.end_time,
        ds1_0.is_active,
        ds1_0.notes,
        ds1_0.schedule_type,
        ds1_0.start_time,
        ds1_0.updated_at 
    from
        doctor_schedules ds1_0 
    where
        ds1_0.doctor_id=? 
        and ds1_0.day_of_week=? 
        and ds1_0.is_active
2025-10-05 15:13:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.DoctorSchedule */insert 
    into
        doctor_schedules (break_end_time, break_start_time, created_at, day_of_week, doctor_id, effective_date, end_date, end_time, is_active, notes, schedule_type, start_time, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 15:13:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:13:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:13:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.ActivityLog */insert 
    into
        activity_logs (action_type, clinic_id, clinic_name, created_at, description, duration_ms, endpoint, entity_id, entity_name, entity_type, error_message, http_method, ip_address, new_value, old_value, success, timestamp, updated_at, user_agent, user_full_name, user_id, user_role, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 15:13:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /schedules/all
2025-10-05 15:13:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/all
2025-10-05 15:13:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:13:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/all
2025-10-05 15:13:32 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAllDoctorsSchedules(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:13:32 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAllDoctorsSchedules(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:13:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor.clinic.id = :clinicId 
        AND ds.isActive = true */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        join
            users d1_0 
                on d1_0.id=ds1_0.doctor_id 
        where
            d1_0.clinic_id=? 
            and ds1_0.is_active=1
2025-10-05 15:13:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:13:50 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-10-05 15:13:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-10-05 15:13:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:13:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-10-05 15:13:50 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:13:50 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:13:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 15:14:49 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /schedules/doctor/18/availability?date=2025-10-05&time=13:00
2025-10-05 15:14:49 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/doctor/18/availability?date=2025-10-05&time=13:00
2025-10-05 15:14:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:14:49 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/doctor/18/availability?date=2025-10-05&time=13:00
2025-10-05 15:14:49 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.checkDoctorAvailability(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.time.LocalTime); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:14:49 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.checkDoctorAvailability(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.time.LocalTime); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:14:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:14:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-05 15:15:05 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 15:15:05 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 15:15:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:15:05 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05&clinicId=9
2025-10-05 15:15:05 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:15:05 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:15:05 [http-nio-8080-exec-9] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-10-05 15:15:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:15:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 15:15:06 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /schedules/doctor/18/availability?date=2025-10-05&time=11:00
2025-10-05 15:15:06 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/doctor/18/availability?date=2025-10-05&time=11:00
2025-10-05 15:15:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:15:06 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/doctor/18/availability?date=2025-10-05&time=11:00
2025-10-05 15:15:06 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.checkDoctorAvailability(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.time.LocalTime); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:15:06 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.checkDoctorAvailability(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.time.LocalTime); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:15:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:15:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-05 15:15:15 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /schedules/doctor/18/availability?date=2025-10-05&time=13:15
2025-10-05 15:15:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/doctor/18/availability?date=2025-10-05&time=13:15
2025-10-05 15:15:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:15:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/doctor/18/availability?date=2025-10-05&time=13:15
2025-10-05 15:15:15 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.checkDoctorAvailability(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.time.LocalTime); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:15:15 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.checkDoctorAvailability(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.time.LocalTime); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:15:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:15:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-05 15:15:23 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /schedules/doctor/18/availability?date=2025-10-05&time=13:15
2025-10-05 15:15:23 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/doctor/18/availability?date=2025-10-05&time=13:15
2025-10-05 15:15:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:15:23 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/doctor/18/availability?date=2025-10-05&time=13:15
2025-10-05 15:15:23 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.checkDoctorAvailability(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.time.LocalTime); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:15:23 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.checkDoctorAvailability(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.time.LocalTime); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:15:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:15:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-05 15:15:23 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/doctor/18/availability?date=2025-10-05&time=13:15
2025-10-05 15:15:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:15:23 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/doctor/18/availability?date=2025-10-05&time=13:15
2025-10-05 15:15:23 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.checkDoctorAvailability(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.time.LocalTime); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:15:23 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.checkDoctorAvailability(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.time.LocalTime); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:15:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:15:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-05 15:15:38 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-10-05 15:15:38 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 15:15:38 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:15:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:15:38 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:15:38 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:15:38 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:15:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:15:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:15:42 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-10-05 15:15:42 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 15:15:42 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 15:15:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:15:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:15:42 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-10-05 15:15:42 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 15:15:42 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:15:42 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 15:15:42 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:15:42 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 15:15:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:15:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 15:15:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-10-05 15:15:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 15:15:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:15:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 15:15:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:15:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:15:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 15:15:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:15:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:15:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:15:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:15:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 15:15:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 15:15:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:16:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments
2025-10-05 15:16:09 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-10-05 15:16:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:16:09 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-10-05 15:16:09 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:16:09 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:16:09 [http-nio-8080-exec-2] INFO  c.n.a.service.AppointmentService - Creating patient in clinic 9 by user khalid.admin
2025-10-05 15:16:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:16:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:16:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:16:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:16:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.doctor = :doctor 
        AND a.appointmentDate = :date 
        AND a.status NOT IN ('CANCELLED', 'NO_SHOW') 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.doctor_id=? 
            and a1_0.appointment_date=? 
            and a1_0.status not in ('CANCELLED', 'NO_SHOW') 
        order by
            a1_0.appointment_time
2025-10-05 15:16:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.Appointment */insert 
    into
        appointments (appointment_date, appointment_time, appointment_type, chief_complaint, clinic_id, created_at, created_by, doctor_id, duration_minutes, notes, patient_id, status, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 15:16:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:16:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:16:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.ActivityLog */insert 
    into
        activity_logs (action_type, clinic_id, clinic_name, created_at, description, duration_ms, endpoint, entity_id, entity_name, entity_type, error_message, http_method, ip_address, new_value, old_value, success, timestamp, updated_at, user_agent, user_full_name, user_id, user_role, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 15:16:09 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-10-05 15:16:09 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 15:16:09 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 15:16:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:16:09 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-10-05 15:16:09 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:16:09 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:16:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(a1_0.id) 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=?
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:16:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:16:19 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /schedules/all
2025-10-05 15:16:19 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/all
2025-10-05 15:16:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:16:19 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/all
2025-10-05 15:16:19 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAllDoctorsSchedules(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:16:19 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAllDoctorsSchedules(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:16:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor.clinic.id = :clinicId 
        AND ds.isActive = true */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        join
            users d1_0 
                on d1_0.id=ds1_0.doctor_id 
        where
            d1_0.clinic_id=? 
            and ds1_0.is_active=1
2025-10-05 15:16:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:16:34 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /schedules/all
2025-10-05 15:16:34 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/all
2025-10-05 15:16:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:16:34 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/all
2025-10-05 15:16:34 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAllDoctorsSchedules(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:16:34 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAllDoctorsSchedules(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:16:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor.clinic.id = :clinicId 
        AND ds.isActive = true */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        join
            users d1_0 
                on d1_0.id=ds1_0.doctor_id 
        where
            d1_0.clinic_id=? 
            and ds1_0.is_active=1
2025-10-05 15:16:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:16:34 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /schedules/all
2025-10-05 15:16:34 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/all
2025-10-05 15:16:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:16:34 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/all
2025-10-05 15:16:34 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAllDoctorsSchedules(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:16:34 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAllDoctorsSchedules(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:16:34 [http-nio-8080-exec-3] INFO  c.n.a.c.DoctorScheduleController - SYSTEM_ADMIN reading all doctors schedules from clinic: ALL
2025-10-05 15:16:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor.clinic.id = :clinicId 
        AND ds.isActive = true */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        join
            users d1_0 
                on d1_0.id=ds1_0.doctor_id 
        where
            d1_0.clinic_id=? 
            and ds1_0.is_active=1
2025-10-05 15:33:35 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=16m32s378ms).
2025-10-05 15:46:31 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=12m56s55ms).
2025-10-05 15:46:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-10-05 15:46:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 15:46:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:46:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 15:46:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-10-05 15:46:32 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:46:32 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:46:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(a1_0.id) 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=?
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:46:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:46:48 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-10-05 15:46:48 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 15:46:48 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-10-05 15:46:48 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 15:46:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:46:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:46:48 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-10-05 15:46:48 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:46:48 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:46:48 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 15:46:48 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 15:46:48 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 15:46:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 15:46:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:46:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-10-05 15:46:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 15:46:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:46:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 15:46:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:46:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:46:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:46:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 15:46:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:46:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:46:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:46:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:46:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 15:46:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 15:46:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:47:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 15:47:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-10-05 15:47:09 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 15:47:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:47:09 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 15:47:09 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:47:09 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:47:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(a1_0.id) 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=?
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:47:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:47:12 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-10-05 15:47:12 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 15:47:12 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 15:47:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:47:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:47:12 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-10-05 15:47:12 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 15:47:12 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:47:12 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:47:12 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 15:47:12 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 15:47:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:47:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 15:47:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-10-05 15:47:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 15:47:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:47:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 15:47:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:47:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:47:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:47:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 15:47:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:47:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:47:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:47:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:47:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 15:47:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 15:47:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:47:33 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments
2025-10-05 15:47:33 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-10-05 15:47:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:47:33 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-10-05 15:47:33 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:47:33 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:47:33 [http-nio-8080-exec-10] INFO  c.n.a.service.AppointmentService - Creating patient in clinic 9 by user khalid.admin
2025-10-05 15:47:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:47:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:47:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:47:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:47:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.doctor = :doctor 
        AND a.appointmentDate = :date 
        AND a.status NOT IN ('CANCELLED', 'NO_SHOW') 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.doctor_id=? 
            and a1_0.appointment_date=? 
            and a1_0.status not in ('CANCELLED', 'NO_SHOW') 
        order by
            a1_0.appointment_time
2025-10-05 15:47:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:47:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:47:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:47:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.ActivityLog */insert 
    into
        activity_logs (action_type, clinic_id, clinic_name, created_at, description, duration_ms, endpoint, entity_id, entity_name, entity_type, error_message, http_method, ip_address, new_value, old_value, success, timestamp, updated_at, user_agent, user_full_name, user_id, user_role, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 15:47:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments
2025-10-05 15:47:49 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-10-05 15:47:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:47:49 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-10-05 15:47:49 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:47:49 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:47:49 [http-nio-8080-exec-2] INFO  c.n.a.service.AppointmentService - Creating patient in clinic 9 by user khalid.admin
2025-10-05 15:47:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:47:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:47:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:47:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:47:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.doctor = :doctor 
        AND a.appointmentDate = :date 
        AND a.status NOT IN ('CANCELLED', 'NO_SHOW') 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.doctor_id=? 
            and a1_0.appointment_date=? 
            and a1_0.status not in ('CANCELLED', 'NO_SHOW') 
        order by
            a1_0.appointment_time
2025-10-05 15:47:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:47:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:47:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:47:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.ActivityLog */insert 
    into
        activity_logs (action_type, clinic_id, clinic_name, created_at, description, duration_ms, endpoint, entity_id, entity_name, entity_type, error_message, http_method, ip_address, new_value, old_value, success, timestamp, updated_at, user_agent, user_full_name, user_id, user_role, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 15:48:29 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments
2025-10-05 15:48:29 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-10-05 15:48:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:29 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-10-05 15:48:29 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:48:29 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:48:29 [http-nio-8080-exec-1] INFO  c.n.a.service.AppointmentService - Creating patient in clinic 9 by user khalid.admin
2025-10-05 15:48:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:48:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:48:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.doctor = :doctor 
        AND a.appointmentDate = :date 
        AND a.status NOT IN ('CANCELLED', 'NO_SHOW') 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.doctor_id=? 
            and a1_0.appointment_date=? 
            and a1_0.status not in ('CANCELLED', 'NO_SHOW') 
        order by
            a1_0.appointment_time
2025-10-05 15:48:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:48:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.Appointment */insert 
    into
        appointments (appointment_date, appointment_time, appointment_type, chief_complaint, clinic_id, created_at, created_by, doctor_id, duration_minutes, notes, patient_id, status, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 15:48:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:48:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.ActivityLog */insert 
    into
        activity_logs (action_type, clinic_id, clinic_name, created_at, description, duration_ms, endpoint, entity_id, entity_name, entity_type, error_message, http_method, ip_address, new_value, old_value, success, timestamp, updated_at, user_agent, user_full_name, user_id, user_role, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 15:48:29 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 15:48:29 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 15:48:29 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:29 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 15:48:29 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:48:29 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:48:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(a1_0.id) 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=?
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:48:37 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /schedules/all
2025-10-05 15:48:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/all
2025-10-05 15:48:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/all
2025-10-05 15:48:37 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAllDoctorsSchedules(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:48:37 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAllDoctorsSchedules(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:48:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor.clinic.id = :clinicId 
        AND ds.isActive = true */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        join
            users d1_0 
                on d1_0.id=ds1_0.doctor_id 
        where
            d1_0.clinic_id=? 
            and ds1_0.is_active=1
2025-10-05 15:48:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-10-05 15:48:49 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-10-05 15:48:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:49 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-10-05 15:48:49 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:48:49 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:48:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 15:48:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /schedules/all
2025-10-05 15:48:51 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/all
2025-10-05 15:48:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:51 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/all
2025-10-05 15:48:51 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAllDoctorsSchedules(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:48:51 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAllDoctorsSchedules(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:48:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor.clinic.id = :clinicId 
        AND ds.isActive = true */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        join
            users d1_0 
                on d1_0.id=ds1_0.doctor_id 
        where
            d1_0.clinic_id=? 
            and ds1_0.is_active=1
2025-10-05 15:48:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:54 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /schedules/doctor/18
2025-10-05 15:48:54 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /schedules/doctor/18/available-slots?date=2025-10-05&durationMinutes=30
2025-10-05 15:48:54 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /schedules/doctor/18/unavailability?startDate=2025-10-05&endDate=2026-04-05
2025-10-05 15:48:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/doctor/18
2025-10-05 15:48:54 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/doctor/18/unavailability?startDate=2025-10-05&endDate=2026-04-05
2025-10-05 15:48:54 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/doctor/18/available-slots?date=2025-10-05&durationMinutes=30
2025-10-05 15:48:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:54 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/doctor/18/available-slots?date=2025-10-05&durationMinutes=30
2025-10-05 15:48:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/doctor/18
2025-10-05 15:48:54 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/doctor/18/unavailability?startDate=2025-10-05&endDate=2026-04-05
2025-10-05 15:48:54 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getDoctorSchedule(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:48:54 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getDoctorUnavailability(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,java.time.LocalDate,java.time.LocalDate); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:48:54 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getDoctorSchedule(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:48:54 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getDoctorUnavailability(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,java.time.LocalDate,java.time.LocalDate); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:48:54 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAvailableTimeSlots(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,java.time.LocalDate,int); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:48:54 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAvailableTimeSlots(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,java.time.LocalDate,int); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:48:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-05 15:48:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ds1_0.id,
        ds1_0.break_end_time,
        ds1_0.break_start_time,
        ds1_0.created_at,
        ds1_0.day_of_week,
        ds1_0.doctor_id,
        ds1_0.effective_date,
        ds1_0.end_date,
        ds1_0.end_time,
        ds1_0.is_active,
        ds1_0.notes,
        ds1_0.schedule_type,
        ds1_0.start_time,
        ds1_0.updated_at 
    from
        doctor_schedules ds1_0 
    where
        ds1_0.doctor_id=? 
        and ds1_0.is_active 
    order by
        ds1_0.day_of_week
2025-10-05 15:48:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        du 
    FROM
        DoctorUnavailability du 
    WHERE
        du.doctor = :doctor 
        AND du.unavailableDate BETWEEN :startDate AND :endDate 
    ORDER BY
        du.unavailableDate,
        du.startTime */ select
            du1_0.id,
            du1_0.created_at,
            du1_0.doctor_id,
            du1_0.end_time,
            du1_0.is_recurring,
            du1_0.reason,
            du1_0.recurrence_end_date,
            du1_0.start_time,
            du1_0.unavailability_type,
            du1_0.unavailable_date,
            du1_0.updated_at 
        from
            doctor_unavailability du1_0 
        where
            du1_0.doctor_id=? 
            and du1_0.unavailable_date between ? and ? 
        order by
            du1_0.unavailable_date,
            du1_0.start_time
2025-10-05 15:48:57 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-10-05 15:48:57 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 15:48:57 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:57 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 15:48:57 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:48:57 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:48:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(a1_0.id) 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=?
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:48:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:49:00 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /schedules/all
2025-10-05 15:49:00 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/all
2025-10-05 15:49:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:49:00 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/all
2025-10-05 15:49:00 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAllDoctorsSchedules(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:49:00 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAllDoctorsSchedules(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:49:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor.clinic.id = :clinicId 
        AND ds.isActive = true */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        join
            users d1_0 
                on d1_0.id=ds1_0.doctor_id 
        where
            d1_0.clinic_id=? 
            and ds1_0.is_active=1
2025-10-05 15:49:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:49:03 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /schedules/doctor/18
2025-10-05 15:49:03 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /schedules/doctor/18/unavailability?startDate=2025-10-05&endDate=2026-04-05
2025-10-05 15:49:03 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /schedules/doctor/18/available-slots?date=2025-10-05&durationMinutes=30
2025-10-05 15:49:03 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/doctor/18
2025-10-05 15:49:03 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/doctor/18/unavailability?startDate=2025-10-05&endDate=2026-04-05
2025-10-05 15:49:03 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/doctor/18/available-slots?date=2025-10-05&durationMinutes=30
2025-10-05 15:49:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:49:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:49:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:49:03 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/doctor/18/unavailability?startDate=2025-10-05&endDate=2026-04-05
2025-10-05 15:49:03 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/doctor/18
2025-10-05 15:49:03 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/doctor/18/available-slots?date=2025-10-05&durationMinutes=30
2025-10-05 15:49:03 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getDoctorSchedule(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:49:03 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getDoctorSchedule(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:49:03 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAvailableTimeSlots(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,java.time.LocalDate,int); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:49:03 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getDoctorUnavailability(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,java.time.LocalDate,java.time.LocalDate); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:49:03 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAvailableTimeSlots(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,java.time.LocalDate,int); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:49:03 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getDoctorUnavailability(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,java.time.LocalDate,java.time.LocalDate); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:49:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:49:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:49:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:49:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        du 
    FROM
        DoctorUnavailability du 
    WHERE
        du.doctor = :doctor 
        AND du.unavailableDate BETWEEN :startDate AND :endDate 
    ORDER BY
        du.unavailableDate,
        du.startTime */ select
            du1_0.id,
            du1_0.created_at,
            du1_0.doctor_id,
            du1_0.end_time,
            du1_0.is_recurring,
            du1_0.reason,
            du1_0.recurrence_end_date,
            du1_0.start_time,
            du1_0.unavailability_type,
            du1_0.unavailable_date,
            du1_0.updated_at 
        from
            doctor_unavailability du1_0 
        where
            du1_0.doctor_id=? 
            and du1_0.unavailable_date between ? and ? 
        order by
            du1_0.unavailable_date,
            du1_0.start_time
2025-10-05 15:49:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-05 15:49:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ds1_0.id,
        ds1_0.break_end_time,
        ds1_0.break_start_time,
        ds1_0.created_at,
        ds1_0.day_of_week,
        ds1_0.doctor_id,
        ds1_0.effective_date,
        ds1_0.end_date,
        ds1_0.end_time,
        ds1_0.is_active,
        ds1_0.notes,
        ds1_0.schedule_type,
        ds1_0.start_time,
        ds1_0.updated_at 
    from
        doctor_schedules ds1_0 
    where
        ds1_0.doctor_id=? 
        and ds1_0.is_active 
    order by
        ds1_0.day_of_week
2025-10-05 15:49:05 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/doctor/18
2025-10-05 15:49:05 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/doctor/18/available-slots?date=2025-10-05&durationMinutes=30
2025-10-05 15:49:05 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/doctor/18/unavailability?startDate=2025-10-05&endDate=2026-04-05
2025-10-05 15:49:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:49:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:49:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:49:05 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/doctor/18
2025-10-05 15:49:05 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/doctor/18/available-slots?date=2025-10-05&durationMinutes=30
2025-10-05 15:49:05 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/doctor/18/unavailability?startDate=2025-10-05&endDate=2026-04-05
2025-10-05 15:49:05 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getDoctorSchedule(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:49:05 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getDoctorUnavailability(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,java.time.LocalDate,java.time.LocalDate); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:49:05 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getDoctorUnavailability(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,java.time.LocalDate,java.time.LocalDate); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:49:05 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAvailableTimeSlots(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,java.time.LocalDate,int); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:49:05 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getDoctorSchedule(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:49:05 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAvailableTimeSlots(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long,java.time.LocalDate,int); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 15:49:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:49:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:49:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:49:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        du 
    FROM
        DoctorUnavailability du 
    WHERE
        du.doctor = :doctor 
        AND du.unavailableDate BETWEEN :startDate AND :endDate 
    ORDER BY
        du.unavailableDate,
        du.startTime */ select
            du1_0.id,
            du1_0.created_at,
            du1_0.doctor_id,
            du1_0.end_time,
            du1_0.is_recurring,
            du1_0.reason,
            du1_0.recurrence_end_date,
            du1_0.start_time,
            du1_0.unavailability_type,
            du1_0.unavailable_date,
            du1_0.updated_at 
        from
            doctor_unavailability du1_0 
        where
            du1_0.doctor_id=? 
            and du1_0.unavailable_date between ? and ? 
        order by
            du1_0.unavailable_date,
            du1_0.start_time
2025-10-05 15:49:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-05 15:49:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ds1_0.id,
        ds1_0.break_end_time,
        ds1_0.break_start_time,
        ds1_0.created_at,
        ds1_0.day_of_week,
        ds1_0.doctor_id,
        ds1_0.effective_date,
        ds1_0.end_date,
        ds1_0.end_time,
        ds1_0.is_active,
        ds1_0.notes,
        ds1_0.schedule_type,
        ds1_0.start_time,
        ds1_0.updated_at 
    from
        doctor_schedules ds1_0 
    where
        ds1_0.doctor_id=? 
        and ds1_0.is_active 
    order by
        ds1_0.day_of_week
2025-10-05 15:49:08 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/activities/recent?limit=20
2025-10-05 15:49:08 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/activities/recent?limit=20
2025-10-05 15:49:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:49:08 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/activities/recent?limit=20
2025-10-05 15:49:08 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:49:08 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.ActivityLogController.getRecentActivities(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int); target is of class [com.nakqeeb.amancare.controller.ActivityLogController]
2025-10-05 15:49:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        al1_0.id,
        al1_0.action_type,
        al1_0.clinic_id,
        al1_0.clinic_name,
        al1_0.created_at,
        al1_0.description,
        al1_0.duration_ms,
        al1_0.endpoint,
        al1_0.entity_id,
        al1_0.entity_name,
        al1_0.entity_type,
        al1_0.error_message,
        al1_0.http_method,
        al1_0.ip_address,
        al1_0.new_value,
        al1_0.old_value,
        al1_0.success,
        al1_0.timestamp,
        al1_0.updated_at,
        al1_0.user_agent,
        al1_0.user_full_name,
        al1_0.user_id,
        al1_0.user_role,
        al1_0.username 
    from
        activity_logs al1_0 
    where
        al1_0.clinic_id=? 
    order by
        al1_0.timestamp desc 
    limit
        ?
2025-10-05 15:49:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-10-05 15:49:09 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-10-05
2025-10-05 15:49:09 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-10-05
2025-10-05 15:49:09 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-10-05 15:49:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:49:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:49:09 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-10-05
2025-10-05 15:49:09 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-10-05 15:49:09 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:49:09 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 15:49:09 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:49:09 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 15:49:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:49:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:49:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 15:49:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-10-05 15:49:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 15:49:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 15:49:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 15:49:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 15:49:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 15:49:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 15:49:27 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-10-05 15:49:27 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-05 15:49:27 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-10-05 15:49:30 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 15:49:30 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-10-05 15:49:30 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 15:49:30 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-10-05 15:49:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:49:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:49:30 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-10-05 15:49:30 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 15:49:30 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 15:49:30 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 15:49:30 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 15:49:30 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 15:49:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:49:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:49:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-10-05 15:49:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-10-05 15:49:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-10-05 15:49:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 15:49:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-10-05 15:49:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:49:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-10-05 15:49:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 15:49:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-10-05 15:49:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:49:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-10-05 15:49:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-10-05 15:49:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:49:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:49:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 15:49:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:49:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:49:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:49:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:49:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:49:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 15:49:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 15:49:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:49:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/17
2025-10-05 15:49:37 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/17
2025-10-05 15:49:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:49:37 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/17
2025-10-05 15:49:37 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 15:49:37 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 15:49:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:49:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:49:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/17/upcoming
2025-10-05 15:49:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:49:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/17/upcoming
2025-10-05 15:49:51 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:49:51 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:49:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:49:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-10-05 15:49:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:49:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:49:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:52:16 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-10-05 15:52:16 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-05 15:52:16 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-10-05 15:52:16 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-10-05 15:52:16 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-05 15:52:16 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-10-05 15:52:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-10-05 15:52:26 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-05 15:52:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-10-05 15:56:34 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-10-05 15:56:34 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-10-05 15:56:34 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-10-05 15:56:34 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-10-05 15:58:20 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-10-05 15:58:20 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/17
2025-10-05 15:58:20 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 15:58:20 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-10-05 15:58:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 15:58:20 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/17
2025-10-05 15:58:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:58:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:58:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:58:20 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-10-05 15:58:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 15:58:20 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/17
2025-10-05 15:58:20 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:58:20 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 15:58:20 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 15:58:20 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 15:58:20 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 15:58:20 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:58:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:58:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:58:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 15:58:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:58:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-10-05 15:58:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 15:58:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:58:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 15:58:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:58:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:58:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:58:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 15:58:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:58:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:58:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:58:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:58:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:58:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 15:58:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 15:58:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:58:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments
2025-10-05 15:58:36 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-10-05 15:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:58:36 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-10-05 15:58:36 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:58:36 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:58:36 [http-nio-8080-exec-1] INFO  c.n.a.service.AppointmentService - Creating patient in clinic 9 by user khalid.admin
2025-10-05 15:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.doctor = :doctor 
        AND a.appointmentDate = :date 
        AND a.status NOT IN ('CANCELLED', 'NO_SHOW') 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.doctor_id=? 
            and a1_0.appointment_date=? 
            and a1_0.status not in ('CANCELLED', 'NO_SHOW') 
        order by
            a1_0.appointment_time
2025-10-05 15:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.Appointment */insert 
    into
        appointments (appointment_date, appointment_time, appointment_type, chief_complaint, clinic_id, created_at, created_by, doctor_id, duration_minutes, notes, patient_id, status, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 15:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.ActivityLog */insert 
    into
        activity_logs (action_type, clinic_id, clinic_name, created_at, description, duration_ms, endpoint, entity_id, entity_name, entity_type, error_message, http_method, ip_address, new_value, old_value, success, timestamp, updated_at, user_agent, user_full_name, user_id, user_role, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 15:58:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-10-05 15:58:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 15:58:36 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:58:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 15:58:36 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-10-05 15:58:36 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:58:36 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 15:58:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(a1_0.id) 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=?
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 15:58:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 16:14:57 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-10-05 16:14:57 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-10-05 16:14:57 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 16:14:57 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-05 16:14:57 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-05 16:15:00 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 28929 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-10-05 16:15:00 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-05 16:15:00 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-05 16:15:00 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-05 16:15:00 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-05 16:15:00 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 16 JPA repository interfaces.
2025-10-05 16:15:01 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-05 16:15:01 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-05 16:15:01 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-10-05 16:15:01 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-10-05 16:15:01 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1152 ms
2025-10-05 16:15:01 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-05 16:15:01 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-10-05 16:15:01 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-05 16:15:01 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-05 16:15:01 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-05 16:15:01 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6f6bbb0
2025-10-05 16:15:01 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-05 16:15:01 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-05 16:15:01 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-05 16:15:02 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-05 16:15:02 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table activity_logs 
       modify column action_type enum ('CREATE','DELETE','PATCH','UPDATE') not null
2025-10-05 16:15:02 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-10-05 16:15:02 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table clinics 
       modify column working_days varchar(20)
2025-10-05 16:15:02 [restartedMain] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table clinics 
       modify column working_days varchar(20)" via JDBC [Data truncated for column 'working_days' at row 13]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table clinics 
       modify column working_days varchar(20)" via JDBC [Data truncated for column 'working_days' at row 13]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1430)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1725)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1690)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1635)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1752)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1635)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1459)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:179)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:164)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:148)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:148)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.nakqeeb.amancare.AmancareApplication.main(AmancareApplication.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.sql.SQLException: Data truncated for column 'working_days' at row 13
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:837)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:685)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 125 common frames omitted
2025-10-05 16:15:02 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoice_items 
       modify column category enum ('CONSULTATION','EQUIPMENT','LAB_TEST','MEDICATION','OTHER','PROCEDURE','RADIOLOGY','SURGERY','THERAPY','VACCINATION') not null
2025-10-05 16:15:02 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table invoices 
       modify column payment_method enum ('BANK_TRANSFER','CASH','CHECK','CREDIT_CARD','DEBIT_CARD','INSTALLMENT','INSURANCE','ONLINE')
2025-10-05 16:15:02 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_diagnoses 
       modify column type enum ('DIFFERENTIAL','FINAL','PRIMARY','PROVISIONAL','RULED_OUT','SECONDARY') not null
2025-10-05 16:15:02 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column category enum ('BIOCHEMISTRY','CARDIOLOGY','COAGULATION','ENDOCRINOLOGY','GENETICS','HEMATOLOGY','HEPATOLOGY','IMMUNOLOGY','MICROBIOLOGY','NEPHROLOGY','ONCOLOGY','TOXICOLOGY') not null
2025-10-05 16:15:02 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-10-05 16:15:02 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_lab_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-10-05 16:15:02 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_prescriptions 
       modify column route enum ('INHALATION','INJECTION','INTRAMUSCULAR','INTRAVENOUS','NASAL','OPHTHALMIC','ORAL','OTIC','RECTAL','SUBCUTANEOUS','SUBLINGUAL','TOPICAL') not null
2025-10-05 16:15:02 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_procedures 
       modify column category enum ('COSMETIC','DIAGNOSTIC','EMERGENCY','PREVENTIVE','REHABILITATION','SURGICAL','THERAPEUTIC') not null
2025-10-05 16:15:02 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column status enum ('CANCELLED','COLLECTED','COMPLETED','DELAYED','IN_PROGRESS','ORDERED') not null
2025-10-05 16:15:02 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column test_type enum ('ANGIOGRAPHY','BONE_SCAN','CT_SCAN','FLUOROSCOPY','MAMMOGRAPHY','MRI','NUCLEAR_MEDICINE','PET_SCAN','ULTRASOUND','X_RAY') not null
2025-10-05 16:15:02 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_radiology_tests 
       modify column urgency enum ('ASAP','ROUTINE','STAT','URGENT') not null
2025-10-05 16:15:02 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column priority enum ('EMERGENCY','ROUTINE','URGENT') not null
2025-10-05 16:15:02 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_record_referrals 
       modify column referral_type enum ('DENTISTRY','EMERGENCY','ENT','HOSPITAL','LABORATORY','OPHTHALMOLOGY','PHYSIOTHERAPY','PSYCHIATRY','RADIOLOGY','SPECIALIST') not null
2025-10-05 16:15:02 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column status enum ('CANCELLED','COMPLETED','DRAFT','IN_PROGRESS','LOCKED','REVIEWED') not null
2025-10-05 16:15:02 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table medical_records 
       modify column visit_type enum ('CHRONIC_CARE','CONSULTATION','EMERGENCY','FOLLOW_UP','PREVENTIVE_CARE','PROCEDURE','REHABILITATION','ROUTINE_CHECKUP','SURGERY','VACCINATION') not null
2025-10-05 16:15:02 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table payments 
       modify column payment_method enum ('BANK_TRANSFER','CASH','CHECK','CREDIT_CARD','DEBIT_CARD','INSTALLMENT','INSURANCE','ONLINE') not null
2025-10-05 16:15:02 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-05 16:15:03 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-05 16:15:04 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-10-05 16:15:04 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-10-05 16:15:04 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-10-05 16:15:05 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-10-05 16:15:05 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-10-05 16:15:05 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-10-05 16:15:05 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-10-05 16:15:05 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-05 16:15:05 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-05 16:15:05 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-10-05 16:15:05 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 6.072 seconds (process running for 6.358)
2025-10-05 16:15:05 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-10-05 16:15:05 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-10-05 16:15:05 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-10-05 16:15:05 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-10-05 16:15:18 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-05 16:15:18 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-05 16:15:18 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-05 16:15:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-10-05 16:15:18 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 16:15:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-10-05 16:15:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 16:15:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:15:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:15:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 16:15:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-10-05 16:15:18 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 16:15:18 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 16:15:18 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 16:15:18 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 16:15:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 16:15:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 16:15:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-10-05 16:15:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 16:15:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:15:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 16:15:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:15:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:15:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:15:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 16:15:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:15:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:15:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:15:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:15:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:15:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:15:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 16:15:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 16:15:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:15:43 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments
2025-10-05 16:15:43 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-10-05 16:15:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:15:43 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-10-05 16:15:43 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 16:15:43 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 16:15:43 [http-nio-8080-exec-8] INFO  c.n.a.service.AppointmentService - Creating patient in clinic 9 by user khalid.admin
2025-10-05 16:15:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 16:15:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 16:15:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:15:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:15:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-05 16:15:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:15:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 16:15:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.ActivityLog */insert 
    into
        activity_logs (action_type, clinic_id, clinic_name, created_at, description, duration_ms, endpoint, entity_id, entity_name, entity_type, error_message, http_method, ip_address, new_value, old_value, success, timestamp, updated_at, user_agent, user_full_name, user_id, user_role, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 16:16:05 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments
2025-10-05 16:16:05 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-10-05 16:16:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:16:05 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-10-05 16:16:05 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 16:16:05 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 16:16:05 [http-nio-8080-exec-10] INFO  c.n.a.service.AppointmentService - Creating patient in clinic 9 by user khalid.admin
2025-10-05 16:16:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 16:16:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 16:16:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:16:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:16:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-05 16:16:05 [http-nio-8080-exec-10] INFO  c.n.a.service.AppointmentService - Doctor schedule validation passed for doctor أحمد الغامدي on 2025-10-06 at 11:30
2025-10-05 16:16:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.doctor = :doctor 
        AND a.appointmentDate = :date 
        AND a.status NOT IN ('CANCELLED', 'NO_SHOW') 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.doctor_id=? 
            and a1_0.appointment_date=? 
            and a1_0.status not in ('CANCELLED', 'NO_SHOW') 
        order by
            a1_0.appointment_time
2025-10-05 16:16:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.Appointment */insert 
    into
        appointments (appointment_date, appointment_time, appointment_type, chief_complaint, clinic_id, created_at, created_by, doctor_id, duration_minutes, notes, patient_id, status, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 16:16:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:16:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 16:16:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.ActivityLog */insert 
    into
        activity_logs (action_type, clinic_id, clinic_name, created_at, description, duration_ms, endpoint, entity_id, entity_name, entity_type, error_message, http_method, ip_address, new_value, old_value, success, timestamp, updated_at, user_agent, user_full_name, user_id, user_role, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 16:16:05 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 16:16:05 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 16:16:05 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-10-05 16:16:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:16:05 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-10-05 16:16:05 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 16:16:05 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 16:16:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(a1_0.id) 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=?
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:16:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 16:16:14 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 16:16:14 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 16:16:14 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-10-05 16:16:14 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:16:14 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 16:16:14 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 16:16:14 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 16:16:14 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 16:16:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments
2025-10-05 16:16:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-10-05 16:16:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:16:32 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-10-05 16:16:32 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 16:16:32 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-05 16:16:32 [http-nio-8080-exec-3] INFO  c.n.a.service.AppointmentService - Creating patient in clinic 9 by user khalid.admin
2025-10-05 16:16:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 16:16:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-05 16:16:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:16:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:16:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-05 16:16:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:16:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 16:16:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.ActivityLog */insert 
    into
        activity_logs (action_type, clinic_id, clinic_name, created_at, description, duration_ms, endpoint, entity_id, entity_name, entity_type, error_message, http_method, ip_address, new_value, old_value, success, timestamp, updated_at, user_agent, user_full_name, user_id, user_role, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-05 16:16:55 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 16:16:55 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-10-05 16:16:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 16:16:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:16:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 16:16:55 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 16:16:55 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-10-05 16:16:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        cm1_0.medical_record_id,
        cm1_0.medication 
    from
        medical_record_medications cm1_0 
    where
        cm1_0.medical_record_id=?
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-10-05 16:16:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-05 16:16:55 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /schedules/all
2025-10-05 16:16:55 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /schedules/all
2025-10-05 16:16:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-05 16:16:55 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /schedules/all
2025-10-05 16:16:55 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAllDoctorsSchedules(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 16:16:55 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.DoctorScheduleController.getAllDoctorsSchedules(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.DoctorScheduleController]
2025-10-05 16:16:55 [http-nio-8080-exec-10] INFO  c.n.a.c.DoctorScheduleController - SYSTEM_ADMIN reading all doctors schedules from clinic: ALL
2025-10-05 16:16:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor.clinic.id = :clinicId 
        AND ds.isActive = true */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        join
            users d1_0 
                on d1_0.id=ds1_0.doctor_id 
        where
            d1_0.clinic_id=? 
            and ds1_0.is_active=1
2025-10-05 16:30:11 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=13m9s684ms).
2025-10-05 18:09:42 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h39m31s394ms).
2025-10-05 18:45:16 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=35m33s847ms).
