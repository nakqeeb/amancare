2025-09-18 00:30:28 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h2m30s921ms).
2025-09-18 01:44:21 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h13m53s626ms).
2025-09-18 02:55:24 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h11m2s606ms).
2025-09-18 04:05:24 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h10m174ms).
2025-09-18 05:32:03 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h26m39s365ms).
2025-09-18 05:33:03 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Retrograde clock change detected (housekeeper delta=29s679ms), soft-evicting connections from pool.
2025-09-18 05:33:14 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/23/upcoming?clinicId=9
2025-09-18 05:33:14 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/23/upcoming?clinicId=9
2025-09-18 05:33:14 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 05:33:14 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/23/upcoming?clinicId=9
2025-09-18 05:33:14 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 05:33:14 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 05:33:14 [http-nio-8080-exec-10] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 9
2025-09-18 05:33:14 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 05:33:14 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-09-18 05:33:19 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/23/upcoming?clinicId=9
2025-09-18 05:33:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 05:33:19 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/23/upcoming?clinicId=9
2025-09-18 05:33:19 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 05:33:19 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 05:33:19 [http-nio-8080-exec-5] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 9
2025-09-18 05:33:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 05:33:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-09-18 05:36:30 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 05:36:30 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 05:36:30 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 05:36:30 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 05:36:30 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 05:36:30 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 05:36:30 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 05:36:30 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 05:36:30 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 05:36:30 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/23/upcoming?clinicId=9
2025-09-18 05:36:30 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/23/upcoming?clinicId=9
2025-09-18 05:36:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 05:36:30 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/23/upcoming?clinicId=9
2025-09-18 05:36:30 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 05:36:30 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 05:36:30 [http-nio-8080-exec-7] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 9
2025-09-18 05:36:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 05:36:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-09-18 05:36:38 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 05:36:38 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 05:36:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 05:36:38 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 05:36:38 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 05:36:38 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 05:36:38 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 05:36:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 05:36:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 05:36:38 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/23/upcoming?clinicId=9
2025-09-18 05:36:38 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/23/upcoming?clinicId=9
2025-09-18 05:36:38 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 05:36:38 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/23/upcoming?clinicId=9
2025-09-18 05:36:38 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 05:36:38 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 05:36:38 [http-nio-8080-exec-5] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 9
2025-09-18 05:36:38 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 05:36:38 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-09-18 05:37:09 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 05:37:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 05:37:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 05:37:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 05:37:09 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 05:37:09 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 05:37:09 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 05:37:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 05:37:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 05:38:12 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 05:38:12 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 05:38:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 05:38:12 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 05:38:12 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 05:38:12 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 05:38:12 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 05:38:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 05:38:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 05:45:13 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 05:45:13 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 05:45:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 05:45:13 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 05:45:13 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 05:45:13 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 05:45:13 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 05:45:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 05:45:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 05:46:21 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/23/upcoming?clinicId=9
2025-09-18 05:46:21 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/23/upcoming?clinicId=9
2025-09-18 05:46:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 05:46:21 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/23/upcoming?clinicId=9
2025-09-18 05:46:21 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 05:46:21 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 05:46:21 [http-nio-8080-exec-8] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 9
2025-09-18 05:46:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 05:46:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-09-18 05:47:17 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 05:47:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 05:47:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 05:47:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 05:47:17 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 05:47:17 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 05:47:17 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 05:47:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 05:47:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 05:50:37 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-18 05:50:37 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-18 05:50:37 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-18 05:50:37 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-18 05:54:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 05:54:40 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 05:54:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 05:54:40 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 05:54:40 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 05:54:40 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 05:54:40 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 05:54:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 05:54:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 05:54:50 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 05:54:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 05:54:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 05:54:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 05:54:50 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 05:54:50 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 05:54:50 [http-nio-8080-exec-4] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 05:54:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 05:54:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 06:14:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 06:14:49 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 06:14:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 06:14:49 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 06:14:49 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 06:14:49 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 06:14:49 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 06:14:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 06:14:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:04:49 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=49m45s655ms).
2025-09-18 07:25:57 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=21m7s608ms).
2025-09-18 07:29:04 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 07:29:04 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 07:29:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:29:05 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 07:29:05 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:29:05 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:29:05 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 07:29:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:29:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:29:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:29:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-09-18 07:29:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:29:40 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-09-18 07:29:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:29:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:29:40 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-09-18 07:29:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:29:40 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:29:40 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:29:40 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:29:40 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:29:40 [http-nio-8080-exec-4] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-18 07:29:40 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-09-18 07:29:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:29:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:29:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-09-18 07:29:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-18 07:29:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-18 07:29:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-09-18 07:29:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-18 07:29:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:29:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-09-18 07:29:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-09-18 07:29:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:29:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-09-18 07:29:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:29:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:29:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:29:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:29:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:29:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:29:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:29:45 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/17?clinicId=9
2025-09-18 07:29:45 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/17?clinicId=9
2025-09-18 07:29:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:29:45 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/17?clinicId=9
2025-09-18 07:29:45 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:29:45 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:29:45 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 07:29:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:29:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:29:51 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/17/upcoming?clinicId=9
2025-09-18 07:29:51 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/17/upcoming?clinicId=9
2025-09-18 07:29:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:29:51 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/17/upcoming?clinicId=9
2025-09-18 07:29:51 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:29:51 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:29:51 [http-nio-8080-exec-5] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 9
2025-09-18 07:29:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:29:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-09-18 07:29:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:29:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:29:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:29:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/17/upcoming?clinicId=9
2025-09-18 07:29:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:29:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/17/upcoming?clinicId=9
2025-09-18 07:29:52 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:29:52 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:29:52 [http-nio-8080-exec-1] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 9
2025-09-18 07:29:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:29:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-09-18 07:29:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:29:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:29:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:29:57 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/17?clinicId=9
2025-09-18 07:29:57 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/17?clinicId=9
2025-09-18 07:29:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:29:57 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/17?clinicId=9
2025-09-18 07:29:57 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:29:57 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:29:57 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 07:29:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:29:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:37:18 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/17?clinicId=9
2025-09-18 07:37:18 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/17?clinicId=9
2025-09-18 07:37:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:37:18 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/17?clinicId=9
2025-09-18 07:37:18 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:37:18 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:37:18 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 07:37:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:37:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:37:23 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/17/upcoming?clinicId=9
2025-09-18 07:37:23 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/17/upcoming?clinicId=9
2025-09-18 07:37:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:37:23 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/17/upcoming?clinicId=9
2025-09-18 07:37:23 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:37:23 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:37:23 [http-nio-8080-exec-10] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 9
2025-09-18 07:37:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:37:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-09-18 07:37:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:37:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:37:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:37:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:37:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-09-18 07:37:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:37:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-09-18 07:37:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:37:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:37:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-09-18 07:37:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:37:32 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:37:32 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:37:32 [http-nio-8080-exec-4] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-09-18 07:37:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:37:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:37:32 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-18 07:37:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:37:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:37:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-09-18 07:37:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-18 07:37:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-09-18 07:37:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-18 07:37:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-09-18 07:37:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-09-18 07:37:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-18 07:37:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-09-18 07:37:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:37:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:37:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:37:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:37:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:37:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:37:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:37:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:37:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:37:41 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 07:37:41 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 07:37:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:37:41 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 07:37:41 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,com.nakqeeb.amancare.entity.BloodType,java.lang.Boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:37:41 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,com.nakqeeb.amancare.entity.BloodType,java.lang.Boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:37:41 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN searching patients from clinic: 9 with filters - gender: null, bloodType: null, isActive: false
2025-09-18 07:37:41 [http-nio-8080-exec-2] INFO  c.n.amancare.service.PatientService - Searching patients - clinicId: 9, search: null, gender: null, bloodType: null, isActive: false
2025-09-18 07:37:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:37:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND (
            :search IS NULL 
            OR :search = '' 
            OR LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
        AND (
            :gender IS NULL 
            OR p.gender = :gender
        ) 
        AND (
            :bloodType IS NULL 
            OR p.bloodType = :bloodType
        ) 
        AND (
            :isActive IS NULL 
            OR p.isActive = :isActive
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and (
                ? is null 
                or ?='' 
                or lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
            and (
                ? is null 
                or p1_0.gender=?
            ) 
            and (
                ? is null 
                or p1_0.blood_type=?
            ) 
            and (
                ? is null 
                or p1_0.is_active=?
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-18 07:37:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:37:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:37:41 [http-nio-8080-exec-2] INFO  c.n.amancare.service.PatientService - Found 2 patients matching criteria
2025-09-18 07:37:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 07:37:45 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 07:37:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:37:45 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 07:37:45 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:37:45 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:37:45 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 07:37:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:37:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:38:14 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 07:38:14 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 07:38:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:38:14 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 07:38:14 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:38:14 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:38:14 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 07:38:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:38:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:47:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/23/upcoming?clinicId=9
2025-09-18 07:47:39 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/23/upcoming?clinicId=9
2025-09-18 07:47:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:47:39 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/23/upcoming?clinicId=9
2025-09-18 07:47:39 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:47:39 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:47:39 [http-nio-8080-exec-9] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 9
2025-09-18 07:47:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:47:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-09-18 07:47:43 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:47:43 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=9
2025-09-18 07:47:43 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=9
2025-09-18 07:47:43 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 07:47:43 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:47:43 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 07:47:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:47:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:47:43 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=9
2025-09-18 07:47:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:47:43 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:47:43 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 07:47:43 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:47:43 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:47:43 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 07:47:43 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:47:43 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:47:43 [http-nio-8080-exec-4] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-18 07:47:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:47:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:47:43 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 07:47:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:47:43 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 07:47:43 [http-nio-8080-exec-8] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading all doctors from clinic: 9
2025-09-18 07:47:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-18 07:47:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:47:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:47:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-18 07:47:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:47:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:47:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:47:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:47:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:47:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:47:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:47:49 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:47:49 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-09-18 07:47:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:47:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-09-18 07:47:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:47:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:47:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:47:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-09-18 07:47:49 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:47:49 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:47:49 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:47:49 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-09-18 07:47:49 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:47:49 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-18 07:47:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:47:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:47:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-09-18 07:47:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-18 07:47:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-18 07:47:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:47:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-09-18 07:47:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:47:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-18 07:47:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:47:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-09-18 07:47:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:47:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-09-18 07:47:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:47:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-09-18 07:47:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:47:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:47:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:47:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:47:52 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/17?clinicId=9
2025-09-18 07:47:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/17?clinicId=9
2025-09-18 07:47:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:47:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/17?clinicId=9
2025-09-18 07:47:52 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:47:52 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:47:52 [http-nio-8080-exec-4] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 07:47:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:47:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:47:53 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/17/upcoming?clinicId=9
2025-09-18 07:47:53 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/17/upcoming?clinicId=9
2025-09-18 07:47:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:47:53 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/17/upcoming?clinicId=9
2025-09-18 07:47:53 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:47:53 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:47:53 [http-nio-8080-exec-7] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 9
2025-09-18 07:47:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:47:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-09-18 07:47:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:47:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:47:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:48:03 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/14?clinicId=9
2025-09-18 07:48:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/14?clinicId=9
2025-09-18 07:48:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:48:03 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/14?clinicId=9
2025-09-18 07:48:03 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAppointmentById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:48:03 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAppointmentById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:48:03 [http-nio-8080-exec-1] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading a specific appointment from clinic: 9
2025-09-18 07:48:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-09-18 07:48:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:48:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:48:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:48:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:48:03 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/17/upcoming?clinicId=9
2025-09-18 07:48:03 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/17/upcoming?clinicId=9
2025-09-18 07:48:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:48:03 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/17/upcoming?clinicId=9
2025-09-18 07:48:03 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:48:03 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:48:03 [http-nio-8080-exec-6] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 9
2025-09-18 07:48:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:48:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-09-18 07:48:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:48:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:48:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:48:09 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-18&clinicId=9
2025-09-18 07:48:09 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-18&clinicId=9
2025-09-18 07:48:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:48:09 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-18&clinicId=9
2025-09-18 07:48:09 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:48:09 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:48:09 [http-nio-8080-exec-9] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-09-18 07:48:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:48:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-18 07:48:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:48:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:48:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:48:19 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-09-18 07:48:19 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:48:19 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-09-18 07:48:19 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:48:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:48:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:48:19 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:48:19 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-09-18 07:48:19 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:48:19 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:48:19 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:48:19 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:48:19 [http-nio-8080-exec-5] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-09-18 07:48:19 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-18 07:48:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:48:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:48:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-09-18 07:48:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-18 07:48:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-18 07:48:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-09-18 07:48:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:48:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-18 07:48:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:48:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:48:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-09-18 07:48:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:48:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-09-18 07:48:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-09-18 07:48:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:48:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:48:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:48:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:48:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:48:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 07:48:27 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 07:48:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:48:27 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 07:48:27 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,com.nakqeeb.amancare.entity.BloodType,java.lang.Boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:48:27 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,com.nakqeeb.amancare.entity.BloodType,java.lang.Boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:48:27 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN searching patients from clinic: 9 with filters - gender: null, bloodType: null, isActive: false
2025-09-18 07:48:27 [http-nio-8080-exec-8] INFO  c.n.amancare.service.PatientService - Searching patients - clinicId: 9, search: null, gender: null, bloodType: null, isActive: false
2025-09-18 07:48:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:48:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND (
            :search IS NULL 
            OR :search = '' 
            OR LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
        AND (
            :gender IS NULL 
            OR p.gender = :gender
        ) 
        AND (
            :bloodType IS NULL 
            OR p.bloodType = :bloodType
        ) 
        AND (
            :isActive IS NULL 
            OR p.isActive = :isActive
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and (
                ? is null 
                or ?='' 
                or lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
            and (
                ? is null 
                or p1_0.gender=?
            ) 
            and (
                ? is null 
                or p1_0.blood_type=?
            ) 
            and (
                ? is null 
                or p1_0.is_active=?
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-18 07:48:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:48:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:48:27 [http-nio-8080-exec-8] INFO  c.n.amancare.service.PatientService - Found 2 patients matching criteria
2025-09-18 07:48:30 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 07:48:30 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 07:48:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:48:30 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 07:48:30 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:48:30 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:48:30 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 07:48:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:48:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:48:34 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/23/upcoming?clinicId=9
2025-09-18 07:48:34 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/23/upcoming?clinicId=9
2025-09-18 07:48:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:48:34 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/23/upcoming?clinicId=9
2025-09-18 07:48:34 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:48:34 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:48:34 [http-nio-8080-exec-5] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 9
2025-09-18 07:48:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:48:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-09-18 07:51:19 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 07:51:19 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 07:51:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:51:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 07:51:20 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:51:20 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:51:20 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 07:51:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:51:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:51:40 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 07:51:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 07:51:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:51:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 07:51:40 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:51:40 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:51:40 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 07:51:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:51:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:51:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/23/upcoming?clinicId=9
2025-09-18 07:51:40 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/23/upcoming?clinicId=9
2025-09-18 07:51:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:51:40 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/23/upcoming?clinicId=9
2025-09-18 07:51:40 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:51:40 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:51:40 [http-nio-8080-exec-7] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 9
2025-09-18 07:51:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:51:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-09-18 07:51:44 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/23/upcoming?clinicId=9
2025-09-18 07:51:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:51:44 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/23/upcoming?clinicId=9
2025-09-18 07:51:44 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:51:44 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:51:44 [http-nio-8080-exec-5] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 9
2025-09-18 07:51:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:51:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-09-18 07:51:48 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:51:48 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=9
2025-09-18 07:51:48 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 07:51:48 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=9
2025-09-18 07:51:48 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:51:48 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 07:51:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:51:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:51:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:51:48 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:51:48 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=9
2025-09-18 07:51:48 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 07:51:48 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 07:51:48 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:51:48 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 07:51:48 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:51:48 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:51:48 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-18 07:51:48 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:51:48 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 07:51:48 [http-nio-8080-exec-9] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading all doctors from clinic: 9
2025-09-18 07:51:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:51:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:51:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:51:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-18 07:51:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-18 07:51:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:51:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:51:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:51:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:51:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:51:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:51:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:51:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:51:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:52:05 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=9
2025-09-18 07:52:05 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:52:05 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 07:52:05 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=9
2025-09-18 07:52:05 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:52:05 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 07:52:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:52:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:52:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:52:05 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:52:05 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 07:52:05 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:52:05 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:52:05 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=9
2025-09-18 07:52:05 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 07:52:05 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:52:05 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:52:05 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-18 07:52:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:52:05 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 07:52:05 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 07:52:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:52:05 [http-nio-8080-exec-4] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading all doctors from clinic: 9
2025-09-18 07:52:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:52:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-18 07:52:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-18 07:52:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:52:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:52:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:52:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:52:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:52:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:52:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:52:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:52:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:53:05 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/clinics
2025-09-18 07:53:05 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/clinics
2025-09-18 07:53:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:53:05 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/clinics
2025-09-18 07:53:05 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getAllClinics(); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 07:53:05 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getAllClinics(); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 07:53:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        DISTINCT u.clinic 
    FROM
        User u 
    WHERE
        u.role = 'ADMIN' 
        AND u.isActive = true */ select
            distinct c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            u1_0.role='ADMIN' 
            and u1_0.is_active=1
2025-09-18 07:53:05 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-18
2025-09-18 07:53:05 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-18 07:53:05 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-18 07:53:05 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-18
2025-09-18 07:53:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:53:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:53:05 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-18
2025-09-18 07:53:05 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-18 07:53:05 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:53:05 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:53:05 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:53:05 [http-nio-8080-exec-9] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: ALL
2025-09-18 07:53:05 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:53:05 [http-nio-8080-exec-4] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-18 07:53:12 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-09-18 07:53:12 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-18&clinicId=9
2025-09-18 07:53:12 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-09-18 07:53:12 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-18&clinicId=9
2025-09-18 07:53:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:53:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:53:12 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-09-18 07:53:12 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:53:12 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:53:12 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-18&clinicId=9
2025-09-18 07:53:12 [http-nio-8080-exec-5] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-09-18 07:53:12 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:53:12 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:53:12 [http-nio-8080-exec-2] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-09-18 07:53:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:53:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:53:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-09-18 07:53:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-18 07:53:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-18 07:53:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:53:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-09-18 07:53:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:53:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-18 07:53:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-09-18 07:53:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:53:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-09-18 07:53:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-09-18 07:53:16 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-09-18 07:53:16 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:53:16 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:53:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:53:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:53:16 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:53:16 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-09-18 07:53:16 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:53:16 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:53:16 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:53:16 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-09-18 07:53:16 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:53:16 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-18 07:53:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:53:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:53:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-09-18 07:53:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-18 07:53:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-18 07:53:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-09-18 07:53:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-18 07:53:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:53:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:53:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-09-18 07:53:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:53:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-09-18 07:53:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:53:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-09-18 07:53:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:53:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:53:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:53:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:53:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:53:21 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 07:53:21 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 07:53:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:53:21 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 07:53:21 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,com.nakqeeb.amancare.entity.BloodType,java.lang.Boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:53:21 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,com.nakqeeb.amancare.entity.BloodType,java.lang.Boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:53:21 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN searching patients from clinic: 9 with filters - gender: null, bloodType: null, isActive: false
2025-09-18 07:53:21 [http-nio-8080-exec-2] INFO  c.n.amancare.service.PatientService - Searching patients - clinicId: 9, search: null, gender: null, bloodType: null, isActive: false
2025-09-18 07:53:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:53:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND (
            :search IS NULL 
            OR :search = '' 
            OR LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
        AND (
            :gender IS NULL 
            OR p.gender = :gender
        ) 
        AND (
            :bloodType IS NULL 
            OR p.bloodType = :bloodType
        ) 
        AND (
            :isActive IS NULL 
            OR p.isActive = :isActive
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and (
                ? is null 
                or ?='' 
                or lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
            and (
                ? is null 
                or p1_0.gender=?
            ) 
            and (
                ? is null 
                or p1_0.blood_type=?
            ) 
            and (
                ? is null 
                or p1_0.is_active=?
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-18 07:53:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:53:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:53:21 [http-nio-8080-exec-2] INFO  c.n.amancare.service.PatientService - Found 2 patients matching criteria
2025-09-18 07:53:25 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 07:53:25 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 07:53:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:53:25 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 07:53:25 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:53:25 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:53:25 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 07:53:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:53:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:53:29 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:53:29 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=9
2025-09-18 07:53:29 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 07:53:29 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:53:29 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=9
2025-09-18 07:53:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:53:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:53:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:53:29 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 07:53:29 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:53:29 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:53:29 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:53:29 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-18 07:53:29 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:53:29 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:53:29 [http-nio-8080-exec-4] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 07:53:29 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=9
2025-09-18 07:53:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:53:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:53:29 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 07:53:29 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 07:53:29 [http-nio-8080-exec-3] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading all doctors from clinic: 9
2025-09-18 07:53:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:53:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-18 07:53:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-18 07:53:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:53:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:53:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:53:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:53:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:53:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:53:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:53:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:53:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:53:47 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments
2025-09-18 07:53:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-18 07:53:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:53:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-18 07:53:47 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:53:47 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:53:47 [http-nio-8080-exec-6] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-09-18 07:53:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:53:47 [http-nio-8080-exec-6] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN is creating an appointment with clinic context. ActingClinicId: 9, Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-09-18 07:53:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:53:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:53:59 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments
2025-09-18 07:53:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-18 07:53:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:53:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-18 07:53:59 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:53:59 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:53:59 [http-nio-8080-exec-9] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-09-18 07:53:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:53:59 [http-nio-8080-exec-9] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN is creating an appointment with clinic context. ActingClinicId: 9, Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-09-18 07:53:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:53:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:54:04 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-09-18 07:54:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-18&clinicId=9
2025-09-18 07:54:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-09-18 07:54:04 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-18&clinicId=9
2025-09-18 07:54:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:54:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:54:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-09-18 07:54:04 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-18&clinicId=9
2025-09-18 07:54:04 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:54:04 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:54:04 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:54:04 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:54:04 [http-nio-8080-exec-5] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-09-18 07:54:04 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-09-18 07:54:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:54:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:54:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-09-18 07:54:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-18 07:54:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:54:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-18 07:54:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:54:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-09-18 07:54:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:54:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-18 07:54:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-09-18 07:54:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-09-18 07:54:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-09-18 07:54:09 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/logout
2025-09-18 07:54:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/logout
2025-09-18 07:54:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:54:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/logout
2025-09-18 07:54:09 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.logout(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-18 07:54:09 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.logout(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-18 07:54:21 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/login
2025-09-18 07:54:21 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-09-18 07:54:21 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-18 07:54:21 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-09-18 07:54:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.username = :usernameOrEmail 
        OR u.email = :usernameOrEmail */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.username=? 
            or u1_0.email=?
2025-09-18 07:54:21 [http-nio-8080-exec-4] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Failed to authenticate since password does not match stored value
2025-09-18 07:54:21 [http-nio-8080-exec-4] DEBUG o.s.s.authentication.ProviderManager - Authentication failed with provider DaoAuthenticationProvider since Bad credentials
2025-09-18 07:54:28 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/login
2025-09-18 07:54:28 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-09-18 07:54:28 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-18 07:54:28 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-09-18 07:54:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.username = :usernameOrEmail 
        OR u.email = :usernameOrEmail */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.username=? 
            or u1_0.email=?
2025-09-18 07:54:28 [http-nio-8080-exec-8] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-18 07:54:28 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/me
2025-09-18 07:54:28 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/me
2025-09-18 07:54:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:54:28 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/me
2025-09-18 07:54:28 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-18 07:54:28 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-18 07:54:29 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-18 07:54:29 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-18
2025-09-18 07:54:29 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-18
2025-09-18 07:54:29 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-18 07:54:29 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:54:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:54:29 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-18
2025-09-18 07:54:29 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-18 07:54:29 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:54:29 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:54:29 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:54:29 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:54:29 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:54:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:54:29 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-18 07:54:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-09-18 07:54:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-18 07:54:29 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:54:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-09-18 07:54:29 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:54:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-18 07:54:29 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:54:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-09-18 07:54:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-09-18 07:54:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-09-18 07:54:31 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users?isActive=&sortBy=fullName&sortDirection=ASC
2025-09-18 07:54:31 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/stats
2025-09-18 07:54:31 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users?isActive=&sortBy=fullName&sortDirection=ASC
2025-09-18 07:54:31 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/stats
2025-09-18 07:54:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:54:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:54:31 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users?isActive=&sortBy=fullName&sortDirection=ASC
2025-09-18 07:54:31 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/stats
2025-09-18 07:54:31 [http-nio-8080-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource users/stats.]
2025-09-18 07:54:31 [http-nio-8080-exec-8] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource users.]
2025-09-18 07:54:35 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-18 07:54:35 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-18 07:54:35 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-18 07:54:35 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-18 07:54:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:54:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:54:35 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-18 07:54:35 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-18 07:54:35 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:54:35 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:54:35 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:54:35 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:54:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:54:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:54:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-09-18 07:54:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-18 07:54:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-18 07:54:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-09-18 07:54:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-18 07:54:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:54:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-09-18 07:54:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:54:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-09-18 07:54:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-09-18 07:54:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:54:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:54:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:54:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:54:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:54:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:54:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:54:43 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=10&isActive=false
2025-09-18 07:54:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=10&isActive=false
2025-09-18 07:54:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:54:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=10&isActive=false
2025-09-18 07:54:43 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,com.nakqeeb.amancare.entity.BloodType,java.lang.Boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:54:43 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,com.nakqeeb.amancare.entity.BloodType,java.lang.Boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:54:43 [http-nio-8080-exec-3] INFO  c.n.amancare.service.PatientService - Searching patients - clinicId: 9, search: null, gender: null, bloodType: null, isActive: false
2025-09-18 07:54:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:54:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND (
            :search IS NULL 
            OR :search = '' 
            OR LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
        AND (
            :gender IS NULL 
            OR p.gender = :gender
        ) 
        AND (
            :bloodType IS NULL 
            OR p.bloodType = :bloodType
        ) 
        AND (
            :isActive IS NULL 
            OR p.isActive = :isActive
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and (
                ? is null 
                or ?='' 
                or lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
            and (
                ? is null 
                or p1_0.gender=?
            ) 
            and (
                ? is null 
                or p1_0.blood_type=?
            ) 
            and (
                ? is null 
                or p1_0.is_active=?
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-18 07:54:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:54:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:54:43 [http-nio-8080-exec-3] INFO  c.n.amancare.service.PatientService - Found 2 patients matching criteria
2025-09-18 07:54:46 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23
2025-09-18 07:54:46 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23
2025-09-18 07:54:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:54:46 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23
2025-09-18 07:54:46 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:54:46 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:54:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:54:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:54:51 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-18 07:54:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-09-18 07:54:51 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23
2025-09-18 07:54:51 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-18 07:54:51 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-18 07:54:51 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23
2025-09-18 07:54:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:54:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:54:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:54:51 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-18 07:54:51 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23
2025-09-18 07:54:51 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-18 07:54:51 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:54:51 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:54:51 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:54:51 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 07:54:51 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:54:51 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 07:54:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:54:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:54:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:54:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-18 07:54:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-18 07:54:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:54:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:54:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:54:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:54:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:54:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:54:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:54:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:54:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:55:00 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments
2025-09-18 07:55:00 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-18 07:55:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:55:00 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-18 07:55:00 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:55:00 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:55:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:55:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:55:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:55:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:55:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.doctor = :doctor 
        AND a.appointmentDate = :date 
        AND a.status NOT IN ('CANCELLED', 'NO_SHOW') 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.doctor_id=? 
            and a1_0.appointment_date=? 
            and a1_0.status not in ('CANCELLED', 'NO_SHOW') 
        order by
            a1_0.appointment_time
2025-09-18 07:55:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:55:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments
2025-09-18 07:55:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-18 07:55:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:55:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-18 07:55:09 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:55:09 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:55:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:55:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:55:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:55:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:55:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.doctor = :doctor 
        AND a.appointmentDate = :date 
        AND a.status NOT IN ('CANCELLED', 'NO_SHOW') 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.doctor_id=? 
            and a1_0.appointment_date=? 
            and a1_0.status not in ('CANCELLED', 'NO_SHOW') 
        order by
            a1_0.appointment_time
2025-09-18 07:55:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:55:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.Appointment */insert 
    into
        appointments (appointment_date, appointment_time, appointment_type, chief_complaint, clinic_id, created_at, created_by, doctor_id, duration_minutes, notes, patient_id, status, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-18 07:55:09 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-18 07:55:09 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-09-18 07:55:09 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-18 07:55:09 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-18 07:55:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:55:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:55:09 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-18 07:55:09 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-18 07:55:09 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 07:55:09 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 07:55:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-18 07:55:09 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:55:09 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:55:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:55:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-18 07:55:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:55:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:55:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:55:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:55:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:55:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:55:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:55:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:55:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:55:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:55:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:55:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:58:23 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/logout
2025-09-18 07:58:23 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/logout
2025-09-18 07:58:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:58:23 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/logout
2025-09-18 07:58:23 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.logout(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-18 07:58:23 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.logout(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-18 07:58:30 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/login
2025-09-18 07:58:30 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-09-18 07:58:30 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-18 07:58:30 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-09-18 07:58:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.username = :usernameOrEmail 
        OR u.email = :usernameOrEmail */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.username=? 
            or u1_0.email=?
2025-09-18 07:58:30 [http-nio-8080-exec-3] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-18 07:58:30 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/me
2025-09-18 07:58:30 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/me
2025-09-18 07:58:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:58:30 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/me
2025-09-18 07:58:30 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-18 07:58:30 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-18 07:58:31 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-09-18 07:58:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-18&clinicId=9
2025-09-18 07:58:31 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-09-18 07:58:31 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-18&clinicId=9
2025-09-18 07:58:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:58:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:58:31 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-09-18 07:58:31 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-18&clinicId=9
2025-09-18 07:58:31 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:58:31 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:58:31 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:58:31 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-09-18 07:58:31 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 07:58:31 [http-nio-8080-exec-2] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-09-18 07:58:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:58:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:58:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-09-18 07:58:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-18 07:58:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-18 07:58:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:58:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-09-18 07:58:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-18 07:58:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:58:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:58:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-09-18 07:58:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:58:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-09-18 07:58:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:58:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-09-18 07:58:36 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-09-18 07:58:36 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:58:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:58:36 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-09-18 07:58:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:58:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:58:36 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-09-18 07:58:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:58:36 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:58:36 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:58:36 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:58:36 [http-nio-8080-exec-4] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-18 07:58:36 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:58:36 [http-nio-8080-exec-5] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-09-18 07:58:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:58:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:58:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-09-18 07:58:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-18 07:58:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-09-18 07:58:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-18 07:58:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-18 07:58:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-09-18 07:58:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-09-18 07:58:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-09-18 07:58:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:58:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:58:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:58:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:58:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:58:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:58:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:58:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:58:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:58:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 07:58:43 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 07:58:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:58:43 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 07:58:43 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,com.nakqeeb.amancare.entity.BloodType,java.lang.Boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:58:43 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,com.nakqeeb.amancare.entity.BloodType,java.lang.Boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:58:43 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN searching patients from clinic: 9 with filters - gender: null, bloodType: null, isActive: false
2025-09-18 07:58:43 [http-nio-8080-exec-8] INFO  c.n.amancare.service.PatientService - Searching patients - clinicId: 9, search: null, gender: null, bloodType: null, isActive: false
2025-09-18 07:58:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:58:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND (
            :search IS NULL 
            OR :search = '' 
            OR LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
        AND (
            :gender IS NULL 
            OR p.gender = :gender
        ) 
        AND (
            :bloodType IS NULL 
            OR p.bloodType = :bloodType
        ) 
        AND (
            :isActive IS NULL 
            OR p.isActive = :isActive
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and (
                ? is null 
                or ?='' 
                or lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
            and (
                ? is null 
                or p1_0.gender=?
            ) 
            and (
                ? is null 
                or p1_0.blood_type=?
            ) 
            and (
                ? is null 
                or p1_0.is_active=?
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-18 07:58:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:58:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:58:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:58:43 [http-nio-8080-exec-8] INFO  c.n.amancare.service.PatientService - Found 2 patients matching criteria
2025-09-18 07:58:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 07:58:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 07:58:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:58:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 07:58:47 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:58:47 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:58:47 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 07:58:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:58:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:58:54 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 07:58:54 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=9
2025-09-18 07:58:54 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:58:54 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:58:54 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 07:58:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=9
2025-09-18 07:58:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:58:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:58:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 07:58:54 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 07:58:54 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:58:54 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:58:54 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-18 07:58:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=9
2025-09-18 07:58:54 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 07:58:54 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:58:54 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 07:58:54 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 07:58:54 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 07:58:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:58:54 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 07:58:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 07:58:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 07:58:54 [http-nio-8080-exec-2] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading all doctors from clinic: 9
2025-09-18 07:58:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-18 07:58:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-18 07:58:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:58:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:58:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:58:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:58:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:58:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:58:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:58:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 07:58:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 07:59:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-18 07:59:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-18 07:59:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-18 07:59:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-18 08:00:25 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 08:00:25 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 08:00:25 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=9
2025-09-18 08:00:25 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=9
2025-09-18 08:00:25 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 08:00:25 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 08:00:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 08:00:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 08:00:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 08:00:25 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 08:00:25 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=9
2025-09-18 08:00:25 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 08:00:25 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 08:00:25 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 08:00:25 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 08:00:25 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 08:00:25 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 08:00:25 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 08:00:25 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-18 08:00:25 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 08:00:25 [http-nio-8080-exec-6] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading all doctors from clinic: 9
2025-09-18 08:00:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 08:00:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 08:00:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 08:00:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-18 08:00:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-18 08:00:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 08:00:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 08:00:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 08:00:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 08:00:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 08:00:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 08:00:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 08:00:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 08:00:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 08:00:30 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-18 08:00:30 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-18 08:00:30 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-18 08:00:30 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-18 08:00:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=9
2025-09-18 08:00:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-18 08:00:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-18 08:00:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=9
2025-09-18 08:00:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 08:00:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 08:00:32 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=9
2025-09-18 08:00:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-18 08:00:32 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 08:00:32 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 08:00:32 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 08:00:32 [http-nio-8080-exec-1] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading all doctors from clinic: 9
2025-09-18 08:00:32 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 08:00:32 [http-nio-8080-exec-4] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading appointments from clinic: 9
2025-09-18 08:00:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-18 08:00:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 08:00:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-18 08:00:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 08:00:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 08:00:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 08:00:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 08:00:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 08:00:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 08:00:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 08:00:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 08:00:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 08:00:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 08:00:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 08:00:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 08:00:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 08:00:37 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-09-18 08:00:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 08:00:37 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-09-18 08:00:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 08:00:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 08:00:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 08:00:37 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-09-18 08:00:37 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 08:00:37 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 08:00:37 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 08:00:37 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-09-18 08:00:37 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 08:00:37 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-18 08:00:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 08:00:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 08:00:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-09-18 08:00:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-18 08:00:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-18 08:00:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-09-18 08:00:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 08:00:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-18 08:00:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 08:00:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-09-18 08:00:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 08:00:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-09-18 08:00:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-09-18 08:00:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 08:00:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 08:00:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 08:00:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 08:00:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 08:00:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 08:00:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 08:00:42 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 08:00:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 08:00:42 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 08:00:42 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,com.nakqeeb.amancare.entity.BloodType,java.lang.Boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 08:00:42 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,com.nakqeeb.amancare.entity.BloodType,java.lang.Boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 08:00:42 [http-nio-8080-exec-4] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN searching patients from clinic: 9 with filters - gender: null, bloodType: null, isActive: false
2025-09-18 08:00:42 [http-nio-8080-exec-4] INFO  c.n.amancare.service.PatientService - Searching patients - clinicId: 9, search: null, gender: null, bloodType: null, isActive: false
2025-09-18 08:00:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 08:00:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND (
            :search IS NULL 
            OR :search = '' 
            OR LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
        AND (
            :gender IS NULL 
            OR p.gender = :gender
        ) 
        AND (
            :bloodType IS NULL 
            OR p.bloodType = :bloodType
        ) 
        AND (
            :isActive IS NULL 
            OR p.isActive = :isActive
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and (
                ? is null 
                or ?='' 
                or lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
            and (
                ? is null 
                or p1_0.gender=?
            ) 
            and (
                ? is null 
                or p1_0.blood_type=?
            ) 
            and (
                ? is null 
                or p1_0.is_active=?
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-18 08:00:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 08:00:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 08:00:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 08:00:42 [http-nio-8080-exec-4] INFO  c.n.amancare.service.PatientService - Found 2 patients matching criteria
2025-09-18 08:00:45 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 08:00:45 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 08:00:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 08:00:45 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 08:00:45 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 08:00:45 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 08:00:45 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 08:00:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 08:00:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 08:03:26 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 08:03:26 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 08:03:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 08:03:26 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 08:03:26 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 08:03:26 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 08:03:26 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 08:03:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 08:03:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 08:05:01 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 08:05:01 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 08:05:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 08:05:01 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 08:05:01 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 08:05:01 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 08:05:01 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 08:05:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 08:05:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 08:07:11 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 08:07:11 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 08:07:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 08:07:11 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 08:07:11 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 08:07:11 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 08:07:11 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 08:07:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 08:07:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 09:00:30 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-18 09:00:30 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-18 09:00:30 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-18 09:00:30 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-18 09:12:37 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 09:12:37 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 09:12:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 09:12:37 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 09:12:37 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 09:12:37 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 09:12:37 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 09:12:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 09:12:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 09:29:51 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=17m23s190ms).
2025-09-18 10:12:20 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=42m28s376ms).
2025-09-18 10:14:12 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 10:14:12 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 10:14:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 10:14:13 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 10:14:13 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 10:14:13 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 10:14:13 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 10:14:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 10:14:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 10:15:55 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 10:15:55 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 10:15:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 10:15:55 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 10:15:55 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 10:15:55 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 10:15:55 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 10:15:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 10:15:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 10:17:52 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 10:17:52 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 10:17:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 10:17:52 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 10:17:52 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 10:17:52 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 10:17:52 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 10:17:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 10:17:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 10:33:12 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 10:33:12 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 10:33:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 10:33:12 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 10:33:12 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 10:33:12 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 10:33:12 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 10:33:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 10:33:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 10:56:10 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23?clinicId=9
2025-09-18 10:56:10 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/23?clinicId=9
2025-09-18 10:56:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 10:56:10 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/23?clinicId=9
2025-09-18 10:56:11 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 10:56:11 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 10:56:11 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 10:56:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 10:56:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 10:59:21 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-18 10:59:21 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-18 10:59:21 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-18 10:59:21 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-18 10:59:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/23/permanent?confirmationCode=DELETE-CONFIRM
2025-09-18 10:59:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /patients/23/permanent?confirmationCode=DELETE-CONFIRM
2025-09-18 10:59:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 10:59:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /patients/23/permanent?confirmationCode=DELETE-CONFIRM
2025-09-18 10:59:40 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.permanentlyDeletePatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 10:59:40 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.permanentlyDeletePatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 10:59:40 [http-nio-8080-exec-6] WARN  c.n.a.controller.PatientController - PERMANENT DELETE: User admin (ID: 2) is permanently deleting patient ID: 23
2025-09-18 10:59:40 [http-nio-8080-exec-6] INFO  c.n.amancare.service.PatientService - Starting permanent deletion of patient 23 by user 2
2025-09-18 10:59:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 10:59:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 10:59:40 [http-nio-8080-exec-6] WARN  c.n.amancare.service.PatientService - CROSS-CLINIC DELETION: SYSTEM_ADMIN admin (clinic 1) deleting patient 23 from clinic 9
2025-09-18 10:59:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 10:59:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 10:59:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.patient_id,
        i1_0.id,
        i1_0.appointment_id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.patient_id=?
2025-09-18 10:59:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 10:59:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.AuditLog */insert 
    into
        audit_logs (action, clinic_id, clinic_name, created_at, data, description, entity_id, entity_type, error_message, ip_address, severity, success, timestamp, updated_at, user_agent, user_id, user_role, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-18 10:59:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.patient_id,
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.patient_id=?
2025-09-18 10:59:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.appointment_id,
        i1_0.id,
        i1_0.balance_due,
        i1_0.clinic_id,
        i1_0.created_at,
        i1_0.created_by,
        i1_0.discount_amount,
        i1_0.due_date,
        i1_0.invoice_date,
        i1_0.invoice_number,
        i1_0.notes,
        i1_0.paid_amount,
        i1_0.patient_id,
        i1_0.payment_method,
        i1_0.status,
        i1_0.subtotal,
        i1_0.tax_amount,
        i1_0.total_amount,
        i1_0.updated_at 
    from
        invoices i1_0 
    where
        i1_0.appointment_id=?
2025-09-18 10:59:40 [http-nio-8080-exec-6] WARN  c.n.amancare.service.PatientService - Patient 23 permanently deleted by admin (role: SYSTEM_ADMIN)
2025-09-18 10:59:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* delete for com.nakqeeb.amancare.entity.Appointment */delete 
    from
        appointments 
    where
        id=?
2025-09-18 10:59:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* delete for com.nakqeeb.amancare.entity.Patient */delete 
    from
        patients 
    where
        id=?
2025-09-18 10:59:40 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 10:59:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-09-18 10:59:40 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-09-18 10:59:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 10:59:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 10:59:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 10:59:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 10:59:40 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-09-18 10:59:40 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 10:59:40 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 10:59:40 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-09-18 10:59:40 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 10:59:40 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 10:59:40 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-18 10:59:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 10:59:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 10:59:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-09-18 10:59:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-18 10:59:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-18 10:59:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-09-18 10:59:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 10:59:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-18 10:59:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 10:59:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 10:59:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-09-18 10:59:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 10:59:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-09-18 10:59:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 10:59:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-09-18 10:59:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 10:59:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 10:59:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 10:59:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 10:59:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 10:59:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 10:59:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 10:59:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 10:59:50 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,com.nakqeeb.amancare.entity.BloodType,java.lang.Boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 10:59:50 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,com.nakqeeb.amancare.entity.BloodType,java.lang.Boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 10:59:50 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN searching patients from clinic: 9 with filters - gender: null, bloodType: null, isActive: false
2025-09-18 10:59:50 [http-nio-8080-exec-1] INFO  c.n.amancare.service.PatientService - Searching patients - clinicId: 9, search: null, gender: null, bloodType: null, isActive: false
2025-09-18 10:59:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 10:59:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND (
            :search IS NULL 
            OR :search = '' 
            OR LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
        AND (
            :gender IS NULL 
            OR p.gender = :gender
        ) 
        AND (
            :bloodType IS NULL 
            OR p.bloodType = :bloodType
        ) 
        AND (
            :isActive IS NULL 
            OR p.isActive = :isActive
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and (
                ? is null 
                or ?='' 
                or lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
            and (
                ? is null 
                or p1_0.gender=?
            ) 
            and (
                ? is null 
                or p1_0.blood_type=?
            ) 
            and (
                ? is null 
                or p1_0.is_active=?
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-18 10:59:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 10:59:50 [http-nio-8080-exec-1] INFO  c.n.amancare.service.PatientService - Found 1 patients matching criteria
2025-09-18 11:00:00 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/15?clinicId=9
2025-09-18 11:00:00 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/15?clinicId=9
2025-09-18 11:00:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:00:00 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/15?clinicId=9
2025-09-18 11:00:00 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:00:00 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:00:00 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 11:00:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:00:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 11:00:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 11:00:04 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=9
2025-09-18 11:00:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/15?clinicId=9
2025-09-18 11:00:04 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=9
2025-09-18 11:00:04 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 11:00:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:00:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:00:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:00:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/15?clinicId=9
2025-09-18 11:00:04 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=9
2025-09-18 11:00:04 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 11:00:04 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:00:04 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 11:00:04 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 11:00:04 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:00:04 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:00:04 [http-nio-8080-exec-5] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-18 11:00:04 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:00:04 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 11:00:04 [http-nio-8080-exec-10] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading all doctors from clinic: 9
2025-09-18 11:00:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:00:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:00:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 11:00:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-18 11:00:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-18 11:00:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 11:00:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:00:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:00:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:00:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 11:00:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:00:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:00:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 11:00:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:02:37 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments
2025-09-18 11:02:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-18 11:02:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:02:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-18 11:02:37 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 11:02:37 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 11:02:37 [http-nio-8080-exec-2] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-09-18 11:02:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:02:37 [http-nio-8080-exec-2] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN is creating an appointment with clinic context. ActingClinicId: 9, Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-09-18 11:02:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:02:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 11:08:22 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-18 11:08:22 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-18 11:08:22 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-18 11:08:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-18 11:08:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-18 11:08:25 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 14373 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-18 11:08:25 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-18 11:08:25 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-18 11:08:25 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-18 11:08:26 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-18 11:08:26 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 39 ms. Found 15 JPA repository interfaces.
2025-09-18 11:08:26 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-18 11:08:26 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-18 11:08:26 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-18 11:08:26 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-18 11:08:26 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1000 ms
2025-09-18 11:08:26 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-18 11:08:26 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-18 11:08:26 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-18 11:08:27 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-18 11:08:27 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-18 11:08:27 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@74ebb60d
2025-09-18 11:08:27 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-18 11:08:27 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-18 11:08:27 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-18 11:08:27 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-18 11:08:27 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-18 11:08:27 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-18 11:08:28 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-18 11:08:29 [restartedMain] INFO  c.n.a.config.WebConverterConfig - WebConverterConfig initialized - Custom converters will be registered
2025-09-18 11:08:29 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported BloodType formats: O+, O-, A+, A-, B+, B-, AB+, AB-, O_POSITIVE, etc.
2025-09-18 11:08:29 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Supported Gender formats: MALE, FEMALE, M, F, ذكر, أنثى
2025-09-18 11:08:29 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-18 11:08:29 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-18 11:08:29 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToBloodTypeConverter
2025-09-18 11:08:29 [restartedMain] INFO  c.n.a.config.WebConverterConfig - Registered converter: StringToGenderConverter
2025-09-18 11:08:30 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-18 11:08:30 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-18 11:08:30 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-18 11:08:30 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.171 seconds (process running for 5.457)
2025-09-18 11:08:30 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-18 11:08:30 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-18 11:08:30 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-18 11:08:30 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-18 11:08:35 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-18 11:08:35 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-18 11:08:35 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-18 11:08:35 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments
2025-09-18 11:08:35 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /appointments
2025-09-18 11:08:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:08:35 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /appointments
2025-09-18 11:08:35 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 11:08:35 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.createAppointment(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreateAppointmentRequest); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 11:08:35 [http-nio-8080-exec-2] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-09-18 11:08:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:08:35 [http-nio-8080-exec-2] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN is creating an appointment with clinic context. ActingClinicId: 9, Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-09-18 11:08:35 [http-nio-8080-exec-2] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-09-18 11:08:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Clinic x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            clinics c1_0 
        where
            c1_0.id=?
2025-09-18 11:08:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-18 11:08:35 [http-nio-8080-exec-2] INFO  c.n.a.service.ClinicContextService - System Admin Action Logged: User 2 performed CONTEXT_SWITCH on clinic 9 - %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-09-18 11:08:35 [http-nio-8080-exec-2] INFO  c.n.a.service.AppointmentService - Creating patient in clinic 9 by user admin
2025-09-18 11:08:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:08:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 11:08:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:08:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:08:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.doctor = :doctor 
        AND a.appointmentDate = :date 
        AND a.status NOT IN ('CANCELLED', 'NO_SHOW') 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.doctor_id=? 
            and a1_0.appointment_date=? 
            and a1_0.status not in ('CANCELLED', 'NO_SHOW') 
        order by
            a1_0.appointment_time
2025-09-18 11:08:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:08:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.Appointment */insert 
    into
        appointments (appointment_date, appointment_time, appointment_type, chief_complaint, clinic_id, created_at, created_by, doctor_id, duration_minutes, notes, patient_id, status, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-18 11:08:35 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-18 11:08:35 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=9
2025-09-18 11:08:35 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-18 11:08:35 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=9
2025-09-18 11:08:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:08:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:08:35 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-09-18 11:08:35 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=9
2025-09-18 11:08:35 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 11:08:35 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 11:08:35 [http-nio-8080-exec-6] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading all doctors from clinic: 9
2025-09-18 11:08:35 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 11:08:35 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 11:08:35 [http-nio-8080-exec-5] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading appointments from clinic: 9
2025-09-18 11:08:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:08:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-18 11:08:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-18 11:08:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:08:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:08:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:08:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:08:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:08:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:08:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:08:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 11:08:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:08:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 11:08:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 11:08:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 11:08:41 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-09-18 11:08:41 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 11:08:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 11:08:41 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-09-18 11:08:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:08:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:08:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 11:08:41 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-09-18 11:08:41 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:08:41 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:08:41 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-09-18 11:08:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:08:41 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:08:41 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:08:41 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-18 11:08:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:08:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-09-18 11:08:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-18 11:08:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-18 11:08:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-09-18 11:08:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 11:08:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-18 11:08:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:08:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-09-18 11:08:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:08:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-09-18 11:08:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:08:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 11:08:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:08:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:08:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 11:08:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:08:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-09-18 11:08:45 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/17?clinicId=9
2025-09-18 11:08:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/17?clinicId=9
2025-09-18 11:08:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:08:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/17?clinicId=9
2025-09-18 11:08:45 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:08:45 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:08:45 [http-nio-8080-exec-5] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 11:08:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:08:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 11:08:47 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/17/upcoming?clinicId=9
2025-09-18 11:08:47 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/17/upcoming?clinicId=9
2025-09-18 11:08:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:08:47 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/17/upcoming?clinicId=9
2025-09-18 11:08:47 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 11:08:47 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 11:08:47 [http-nio-8080-exec-8] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 9
2025-09-18 11:08:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 11:08:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-09-18 11:08:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:08:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:08:59 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/patient/17/upcoming?clinicId=9
2025-09-18 11:08:59 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/patient/17/upcoming?clinicId=9
2025-09-18 11:08:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:08:59 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/patient/17/upcoming?clinicId=9
2025-09-18 11:08:59 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 11:08:59 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getUpcomingAppointmentsByPatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 11:08:59 [http-nio-8080-exec-1] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading upcoming appointments for a specific patients from clinic: 9
2025-09-18 11:08:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 11:08:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.patient = :patient 
        AND (
            (
                a.appointmentDate > CURRENT_DATE()
            ) 
            OR (
                a.appointmentDate = CURRENT_DATE() 
                AND a.appointmentTime > CURRENT_TIME()
            )
        ) 
        AND a.status IN ('SCHEDULED', 'CONFIRMED') 
    ORDER BY
        a.appointmentDate,
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.patient_id=? 
            and (
                (
                    a1_0.appointment_date>current_date
                ) 
                or (
                    a1_0.appointment_date=current_date 
                    and a1_0.appointment_time>current_time
                )
            ) 
            and a1_0.status in ('SCHEDULED', 'CONFIRMED') 
        order by
            a1_0.appointment_date,
            a1_0.appointment_time
2025-09-18 11:08:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:08:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:09:04 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 11:09:04 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=9
2025-09-18 11:09:04 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/17?clinicId=9
2025-09-18 11:09:04 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=9
2025-09-18 11:09:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/17?clinicId=9
2025-09-18 11:09:04 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 11:09:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:09:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:09:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:09:04 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=9
2025-09-18 11:09:04 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/17?clinicId=9
2025-09-18 11:09:04 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 11:09:04 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-18 11:09:04 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:09:04 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:09:04 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 11:09:04 [http-nio-8080-exec-5] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading all doctors from clinic: 9
2025-09-18 11:09:04 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 11:09:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:09:04 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:09:04 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:09:04 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-18 11:09:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-18 11:09:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:09:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 11:09:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-18 11:09:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 11:09:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:09:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:09:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:09:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 11:09:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:09:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:09:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 11:09:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:09:06 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-09-18 11:09:06 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-18&clinicId=9
2025-09-18 11:09:06 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-18&clinicId=9
2025-09-18 11:09:06 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-09-18 11:09:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:09:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:09:06 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-09-18 11:09:06 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-18&clinicId=9
2025-09-18 11:09:06 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:09:06 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 11:09:06 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:09:06 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-09-18 11:09:06 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-18 11:09:06 [http-nio-8080-exec-2] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 9
2025-09-18 11:09:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:09:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:09:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-09-18 11:09:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-18 11:09:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-09-18 11:09:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-18 11:09:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-18 11:09:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-09-18 11:09:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-09-18 11:09:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:09:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-09-18 11:09:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 11:09:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:09:20 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-09-18 11:09:20 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 11:09:20 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 11:09:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-09-18 11:09:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:09:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:09:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-09-18 11:09:20 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 11:09:20 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:09:20 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:09:20 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:09:20 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:09:20 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-09-18 11:09:20 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-18 11:09:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:09:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:09:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-09-18 11:09:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-18 11:09:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-18 11:09:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-09-18 11:09:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 11:09:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-18 11:09:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:09:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:09:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-09-18 11:09:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:09:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-09-18 11:09:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 11:09:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:09:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-09-18 11:09:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:09:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 11:09:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:09:33 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 11:09:33 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 11:09:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:09:33 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 11:09:33 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,com.nakqeeb.amancare.entity.BloodType,java.lang.Boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:09:33 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,com.nakqeeb.amancare.entity.BloodType,java.lang.Boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:09:33 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN searching patients from clinic: 9 with filters - gender: null, bloodType: null, isActive: false
2025-09-18 11:09:33 [http-nio-8080-exec-3] INFO  c.n.amancare.service.PatientService - Searching patients - clinicId: 9, search: null, gender: null, bloodType: null, isActive: false
2025-09-18 11:09:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:09:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND (
            :search IS NULL 
            OR :search = '' 
            OR LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
        AND (
            :gender IS NULL 
            OR p.gender = :gender
        ) 
        AND (
            :bloodType IS NULL 
            OR p.bloodType = :bloodType
        ) 
        AND (
            :isActive IS NULL 
            OR p.isActive = :isActive
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and (
                ? is null 
                or ?='' 
                or lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
            and (
                ? is null 
                or p1_0.gender=?
            ) 
            and (
                ? is null 
                or p1_0.blood_type=?
            ) 
            and (
                ? is null 
                or p1_0.is_active=?
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-18 11:09:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 11:09:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:09:33 [http-nio-8080-exec-3] INFO  c.n.amancare.service.PatientService - Found 1 patients matching criteria
2025-09-18 11:10:12 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients
2025-09-18 11:10:12 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /patients
2025-09-18 11:10:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:10:12 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /patients
2025-09-18 11:10:12 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.createPatient(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreatePatientRequest); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:10:12 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.createPatient(com.nakqeeb.amancare.security.UserPrincipal,com.nakqeeb.amancare.dto.request.CreatePatientRequest); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:10:12 [http-nio-8080-exec-8] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-09-18 11:10:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:10:12 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN is creating a patient with clinic context. ActingClinicId: 9, Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-09-18 11:10:12 [http-nio-8080-exec-8] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-09-18 11:10:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Clinic x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            clinics c1_0 
        where
            c1_0.id=?
2025-09-18 11:10:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-18 11:10:12 [http-nio-8080-exec-8] INFO  c.n.a.service.ClinicContextService - System Admin Action Logged: User 2 performed CONTEXT_SWITCH on clinic 9 - %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-09-18 11:10:12 [http-nio-8080-exec-8] INFO  c.n.amancare.service.PatientService - Creating patient in clinic 9 by user admin
2025-09-18 11:10:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:10:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.phone=?
2025-09-18 11:10:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-18 11:10:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.patient_number=? 
    limit
        ?
2025-09-18 11:10:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.patient_number=? 
    limit
        ?
2025-09-18 11:10:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.Patient */insert 
    into
        patients (address, allergies, blood_type, chronic_diseases, clinic_id, created_at, date_of_birth, email, emergency_contact_name, emergency_contact_phone, first_name, gender, is_active, last_name, notes, patient_number, phone, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-18 11:10:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-18 11:10:12 [http-nio-8080-exec-8] INFO  c.n.amancare.service.AuditLogService - Audit Log: User 2 performed CREATE_PATIENT on PATIENT #24 in clinic 9
2025-09-18 11:10:12 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/24?clinicId=9
2025-09-18 11:10:12 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/24?clinicId=9
2025-09-18 11:10:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:10:12 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/24?clinicId=9
2025-09-18 11:10:12 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:10:12 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:10:12 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 11:10:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:10:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 11:12:46 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/24
2025-09-18 11:12:46 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/24?clinicId=9
2025-09-18 11:12:46 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /patients/24
2025-09-18 11:12:46 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/24?clinicId=9
2025-09-18 11:12:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:12:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:12:46 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /patients/24
2025-09-18 11:12:46 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/24?clinicId=9
2025-09-18 11:12:46 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:12:46 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.deletePatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:12:46 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:12:46 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 11:12:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:12:46 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.deletePatient(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:12:46 [http-nio-8080-exec-2] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-09-18 11:12:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:12:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 11:12:46 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN is deactivating a patient with clinic context. ActingClinicId: 9, Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-09-18 11:12:46 [http-nio-8080-exec-2] INFO  c.n.a.service.ClinicContextService - SYSTEM_ADMIN acting as clinic 9 - Reason: %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-09-18 11:12:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Clinic x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            clinics c1_0 
        where
            c1_0.id=?
2025-09-18 11:12:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.nakqeeb.amancare.entity.SystemAdminAction */insert 
    into
        system_admin_actions (action_type, admin_user_id, created_at, ip_address, reason, request_body, request_method, request_path, response_status, target_clinic_id, target_resource_id, target_resource_type, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-18 11:12:46 [http-nio-8080-exec-2] INFO  c.n.a.service.ClinicContextService - System Admin Action Logged: User 2 performed CONTEXT_SWITCH on clinic 9 - %D8%B7%D9%84%D8%A8%20%D9%85%D9%86%20%D8%A5%D8%AF%D8%A7%D8%B1%D8%A9%20%D8%A7%D9%84%D8%B9%D9%8A%D8%A7%D8%AF%D8%A9
2025-09-18 11:12:46 [http-nio-8080-exec-2] INFO  c.n.amancare.service.PatientService - Deleting patient in clinic 9 by user admin
2025-09-18 11:12:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:12:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-18 11:12:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* update
        for com.nakqeeb.amancare.entity.Patient */update patients 
    set
        address=?,
        allergies=?,
        blood_type=?,
        chronic_diseases=?,
        clinic_id=?,
        date_of_birth=?,
        email=?,
        emergency_contact_name=?,
        emergency_contact_phone=?,
        first_name=?,
        gender=?,
        is_active=?,
        last_name=?,
        notes=?,
        patient_number=?,
        phone=?,
        updated_at=? 
    where
        id=?
2025-09-18 11:12:46 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 11:12:46 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics?clinicId=9
2025-09-18 11:12:46 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics?clinicId=9
2025-09-18 11:12:46 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 11:12:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:12:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:12:46 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=9
2025-09-18 11:12:46 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics?clinicId=9
2025-09-18 11:12:46 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:12:46 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:12:46 [http-nio-8080-exec-5] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: 9
2025-09-18 11:12:46 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:12:46 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:12:46 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 9
2025-09-18 11:12:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:12:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:12:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=?
2025-09-18 11:12:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-18 11:12:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-18 11:12:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = false */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=0
2025-09-18 11:12:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-18 11:12:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 11:12:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:12:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'MALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='MALE'
2025-09-18 11:12:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:12:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.gender = 'FEMALE' */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.gender='FEMALE'
2025-09-18 11:12:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:12:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        AVG(YEAR(CURRENT_DATE()) - YEAR(p.dateOfBirth)) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.dateOfBirth IS NOT NULL */ select
            avg((year(current_date)-year(p1_0.date_of_birth))) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.date_of_birth is not null
2025-09-18 11:12:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 11:12:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:12:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:12:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 11:12:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:12:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 11:12:52 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 11:12:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:12:52 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=10&clinicId=9&isActive=false
2025-09-18 11:12:52 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,com.nakqeeb.amancare.entity.BloodType,java.lang.Boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:12:52 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,com.nakqeeb.amancare.entity.BloodType,java.lang.Boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:12:52 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN searching patients from clinic: 9 with filters - gender: null, bloodType: null, isActive: false
2025-09-18 11:12:52 [http-nio-8080-exec-10] INFO  c.n.amancare.service.PatientService - Searching patients - clinicId: 9, search: null, gender: null, bloodType: null, isActive: false
2025-09-18 11:12:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:12:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND (
            :search IS NULL 
            OR :search = '' 
            OR LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
        AND (
            :gender IS NULL 
            OR p.gender = :gender
        ) 
        AND (
            :bloodType IS NULL 
            OR p.bloodType = :bloodType
        ) 
        AND (
            :isActive IS NULL 
            OR p.isActive = :isActive
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and (
                ? is null 
                or ?='' 
                or lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
            and (
                ? is null 
                or p1_0.gender=?
            ) 
            and (
                ? is null 
                or p1_0.blood_type=?
            ) 
            and (
                ? is null 
                or p1_0.is_active=?
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-18 11:12:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 11:12:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.patient_id,
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.patient_id=?
2025-09-18 11:12:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-18 11:12:52 [http-nio-8080-exec-10] INFO  c.n.amancare.service.PatientService - Found 2 patients matching criteria
2025-09-18 11:12:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/24?clinicId=9
2025-09-18 11:12:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/24?clinicId=9
2025-09-18 11:12:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-18 11:12:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/24?clinicId=9
2025-09-18 11:12:54 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:12:54 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-18 11:12:54 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 9
2025-09-18 11:12:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-18 11:12:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
