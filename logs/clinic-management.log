2025-09-12 00:21:24 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h35m11s915ms).
2025-09-12 01:26:11 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h4m46s267ms).
2025-09-12 03:08:26 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h42m14s934ms).
2025-09-12 04:18:34 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h10m8s96ms).
2025-09-12 05:47:00 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h28m26s655ms).
2025-09-12 05:47:11 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/logout
2025-09-12 05:47:11 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/logout
2025-09-12 05:47:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:47:11 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/logout
2025-09-12 05:47:11 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.logout(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 05:47:11 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.logout(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 05:47:21 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/login
2025-09-12 05:47:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-09-12 05:47:21 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 05:47:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-09-12 05:47:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.username = :usernameOrEmail 
        OR u.email = :usernameOrEmail */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.username=? 
            or u1_0.email=?
2025-09-12 05:47:21 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-12 05:47:21 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/me
2025-09-12 05:47:21 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/me
2025-09-12 05:47:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:47:21 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/me
2025-09-12 05:47:21 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 05:47:21 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 05:47:21 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12
2025-09-12 05:47:21 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12
2025-09-12 05:47:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:47:21 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12
2025-09-12 05:47:21 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:47:21 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:47:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:47:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 05:47:39 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=null
2025-09-12 05:47:39 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:47:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=null
2025-09-12 05:47:39 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:47:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:47:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:47:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=null
2025-09-12 05:47:39 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:47:39 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:47:39 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:47:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:47:39 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'clinicId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "null"]
2025-09-12 05:47:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-12 05:47:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-12 05:47:53 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=null
2025-09-12 05:47:53 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:47:53 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=null
2025-09-12 05:47:53 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:47:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:47:53 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:47:53 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:47:53 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:47:53 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:47:53 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=null
2025-09-12 05:47:53 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:47:53 [http-nio-8080-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'clinicId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "null"]
2025-09-12 05:47:53 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-12 05:47:53 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-12 05:48:25 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12
2025-09-12 05:48:25 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12
2025-09-12 05:48:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:48:25 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12
2025-09-12 05:48:25 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:48:25 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:48:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:48:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 05:48:27 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=null
2025-09-12 05:48:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:48:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=null
2025-09-12 05:48:27 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:48:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:48:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:48:27 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:48:27 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:48:27 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:48:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=null
2025-09-12 05:48:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:48:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-12 05:48:27 [http-nio-8080-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'clinicId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "null"]
2025-09-12 05:48:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-12 05:48:31 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-12 05:48:31 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-12 05:48:31 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-12 05:48:31 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-12 05:49:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:49:45 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:49:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:49:45 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:49:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:49:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:49:45 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:49:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:49:45 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:49:45 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:49:45 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:49:45 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:49:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:49:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:49:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-12 05:49:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-12 05:49:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 05:49:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12
2025-09-12 05:49:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12
2025-09-12 05:49:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:49:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12
2025-09-12 05:49:49 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:49:49 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:49:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:49:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 05:49:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:49:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:49:52 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:49:52 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:49:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:49:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:49:52 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:49:52 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:49:52 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:49:52 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:49:52 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:49:52 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:49:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:49:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:49:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-12 05:49:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-12 05:49:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 05:49:59 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-09-12 05:49:59 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-12 05:49:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-12 05:49:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-12 05:49:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:49:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:49:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc
2025-09-12 05:49:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-12 05:49:59 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-12 05:49:59 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-12 05:49:59 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:49:59 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:49:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:49:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-12 05:49:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-09-12 05:49:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-12 05:49:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-12 05:49:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-12 05:49:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-12 05:49:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-12 05:49:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-12 05:49:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-12 05:49:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-12 05:49:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:49:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-12 05:49:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:49:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-12 05:50:06 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:50:06 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-09-12 05:50:06 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-12 05:50:06 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:50:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:50:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:50:06 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:50:06 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-12 05:50:06 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-12 05:50:06 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-12 05:50:06 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:50:06 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:50:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:50:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-12 05:50:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 05:50:07 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12
2025-09-12 05:50:07 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12
2025-09-12 05:50:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:50:07 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12
2025-09-12 05:50:07 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:50:07 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:50:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:50:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 05:50:09 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-12 05:50:09 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=1000&sortBy=appointmentDate&sortDirection=asc
2025-09-12 05:50:09 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=1000&sortBy=appointmentDate&sortDirection=asc
2025-09-12 05:50:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:50:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:50:09 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-12 05:50:09 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-12 05:50:09 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-12 05:50:09 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=1000&sortBy=appointmentDate&sortDirection=asc
2025-09-12 05:50:09 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:50:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-12 05:50:09 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:50:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:50:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date 
    limit
        ?
2025-09-12 05:50:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-12 05:50:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-12 05:50:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-12 05:50:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-12 05:50:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-12 05:50:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-12 05:50:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.diagnosis,
        mr1_0.doctor_id,
        mr1_0.follow_up_instructions,
        mr1_0.lab_tests,
        mr1_0.next_visit_date,
        mr1_0.patient_id,
        mr1_0.prescribed_medications,
        mr1_0.symptoms,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.visit_date,
        mr1_0.vital_signs 
    from
        medical_records mr1_0 
    where
        mr1_0.appointment_id=?
2025-09-12 05:50:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-12 05:50:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:50:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-12 05:50:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-12 05:50:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:50:25 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors
2025-09-12 05:50:25 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:50:25 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:50:25 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors
2025-09-12 05:50:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:50:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:50:25 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors
2025-09-12 05:50:25 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:50:25 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-12 05:50:25 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-12 05:50:25 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:50:25 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:50:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:50:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        clinics c1_0 
            on c1_0.id=u1_0.clinic_id 
    where
        c1_0.id=? 
        and u1_0.role=? 
        and u1_0.is_active
2025-09-12 05:50:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 05:50:29 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:50:29 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:50:29 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:50:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:50:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:50:29 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:50:29 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:50:29 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:50:29 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:50:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:50:29 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:50:29 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:50:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:50:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-12 05:50:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 05:50:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-12 05:50:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/13
2025-09-12 05:50:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/13
2025-09-12 05:50:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:50:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/13
2025-09-12 05:50:32 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:50:32 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:50:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:50:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-12 05:50:38 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12
2025-09-12 05:50:38 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12
2025-09-12 05:50:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:50:38 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12
2025-09-12 05:50:38 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:50:38 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:50:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:50:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 05:50:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/logout
2025-09-12 05:50:41 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/logout
2025-09-12 05:50:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:50:41 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/logout
2025-09-12 05:50:41 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.logout(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 05:50:41 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.logout(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 05:50:48 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/login
2025-09-12 05:50:48 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-09-12 05:50:48 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 05:50:48 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-09-12 05:50:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.username = :usernameOrEmail 
        OR u.email = :usernameOrEmail */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.username=? 
            or u1_0.email=?
2025-09-12 05:50:48 [http-nio-8080-exec-5] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-12 05:50:48 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/me
2025-09-12 05:50:48 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/me
2025-09-12 05:50:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:50:48 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/me
2025-09-12 05:50:48 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 05:50:48 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 05:50:48 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12
2025-09-12 05:50:48 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12
2025-09-12 05:50:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:50:48 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12
2025-09-12 05:50:48 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:50:48 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:50:48 [http-nio-8080-exec-10] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: ALL
2025-09-12 05:50:55 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:50:55 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:50:55 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:50:55 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:50:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:50:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:50:55 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:50:55 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:50:55 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:50:55 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:50:55 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:50:55 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:50:55 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:50:55 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: ALL
2025-09-12 05:50:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12
2025-09-12 05:50:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12
2025-09-12 05:50:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:50:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12
2025-09-12 05:50:58 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:50:58 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:50:58 [http-nio-8080-exec-4] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: ALL
2025-09-12 05:51:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:51:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:51:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:51:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:51:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:51:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:51:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:51:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:51:02 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:02 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:02 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:51:02 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:02 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:02 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: ALL
2025-09-12 05:51:05 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:51:05 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:51:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:51:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:51:05 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:51:05 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:51:05 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:05 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:05 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:05 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:51:05 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:05 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: ALL
2025-09-12 05:51:07 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12
2025-09-12 05:51:07 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12
2025-09-12 05:51:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:51:07 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12
2025-09-12 05:51:07 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:51:07 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:51:07 [http-nio-8080-exec-1] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: ALL
2025-09-12 05:51:10 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:51:10 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:51:10 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:51:10 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:51:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:51:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:51:10 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:51:10 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:51:10 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:10 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:10 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:51:10 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:10 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:10 [http-nio-8080-exec-5] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: ALL
2025-09-12 05:51:11 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12
2025-09-12 05:51:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:51:11 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12
2025-09-12 05:51:11 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:51:11 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:51:11 [http-nio-8080-exec-10] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: ALL
2025-09-12 05:51:12 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/clinics
2025-09-12 05:51:12 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/clinics
2025-09-12 05:51:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:51:12 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/clinics
2025-09-12 05:51:12 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getAllClinics(); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-12 05:51:12 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getAllClinics(); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-12 05:51:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        DISTINCT u.clinic 
    FROM
        User u 
    WHERE
        u.role = 'ADMIN' 
        AND u.isActive = true */ select
            distinct c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            u1_0.role='ADMIN' 
            and u1_0.is_active=1
2025-09-12 05:51:33 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:51:33 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:51:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:51:33 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:51:33 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:51:33 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:51:33 [http-nio-8080-exec-1] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 3
2025-09-12 05:51:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:51:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 05:51:39 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:51:39 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:51:39 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:51:39 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:51:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:51:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:51:39 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:51:39 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:51:39 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:39 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:39 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:51:39 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:39 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:39 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: ALL
2025-09-12 05:51:42 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:51:42 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:51:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:51:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:51:42 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:51:42 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:42 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:42 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:51:42 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:51:42 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:42 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:42 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: ALL
2025-09-12 05:51:46 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:51:46 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:51:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:51:46 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:51:46 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:51:46 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:51:46 [http-nio-8080-exec-3] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 3
2025-09-12 05:51:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:51:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 05:51:48 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:51:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:51:48 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:51:48 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:51:48 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:51:48 [http-nio-8080-exec-1] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 3
2025-09-12 05:51:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:51:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 05:51:51 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:51:51 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:51:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:51:51 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:51:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:51:51 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:51:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:51:51 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:51:51 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:51 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:51 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:51:51 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:51 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:51:51 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: ALL
2025-09-12 05:51:53 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:51:53 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:51:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:51:53 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:51:53 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:51:53 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:51:53 [http-nio-8080-exec-9] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 3
2025-09-12 05:51:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:51:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 05:51:56 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/clinics
2025-09-12 05:51:56 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/clinics
2025-09-12 05:51:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:51:56 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/clinics
2025-09-12 05:51:56 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getAllClinics(); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-12 05:51:56 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getAllClinics(); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-12 05:51:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        DISTINCT u.clinic 
    FROM
        User u 
    WHERE
        u.role = 'ADMIN' 
        AND u.isActive = true */ select
            distinct c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            u1_0.role='ADMIN' 
            and u1_0.is_active=1
2025-09-12 05:52:05 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12&clinicId=2
2025-09-12 05:52:05 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12&clinicId=2
2025-09-12 05:52:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:52:05 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12&clinicId=2
2025-09-12 05:52:05 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:52:05 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:52:05 [http-nio-8080-exec-5] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 2
2025-09-12 05:52:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:52:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 05:52:08 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:52:08 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:52:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:52:08 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:52:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:52:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:52:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:52:08 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:52:08 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:08 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:08 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:08 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:52:08 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:08 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: ALL
2025-09-12 05:52:12 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:52:12 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:52:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:52:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:52:12 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:52:12 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:52:12 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:12 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:12 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:52:12 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:12 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:12 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: ALL
2025-09-12 05:52:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12&clinicId=2
2025-09-12 05:52:14 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12&clinicId=2
2025-09-12 05:52:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:52:14 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12&clinicId=2
2025-09-12 05:52:14 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:52:14 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:52:14 [http-nio-8080-exec-2] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 2
2025-09-12 05:52:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:52:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 05:52:31 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12&clinicId=2
2025-09-12 05:52:31 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12&clinicId=2
2025-09-12 05:52:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:52:31 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12&clinicId=2
2025-09-12 05:52:31 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:52:31 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:52:31 [http-nio-8080-exec-10] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 2
2025-09-12 05:52:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:52:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 05:52:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:52:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=2
2025-09-12 05:52:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:52:36 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=2
2025-09-12 05:52:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:52:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:52:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:52:36 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=2
2025-09-12 05:52:36 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:36 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:36 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:52:36 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:36 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:36 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 2
2025-09-12 05:52:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:52:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 05:52:39 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/13
2025-09-12 05:52:39 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/13
2025-09-12 05:52:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:52:39 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/13
2025-09-12 05:52:39 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:39 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:39 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: ALL
2025-09-12 05:52:39 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=2
2025-09-12 05:52:39 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:52:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:52:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:52:39 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=2
2025-09-12 05:52:39 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:52:39 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:39 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:39 [http-nio-8080-exec-4] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 2
2025-09-12 05:52:39 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:39 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:39 [http-nio-8080-exec-5] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:52:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:52:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 05:52:43 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=2
2025-09-12 05:52:43 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:52:43 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=2
2025-09-12 05:52:43 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:52:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:52:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:52:43 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=2
2025-09-12 05:52:43 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:43 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:43 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 2
2025-09-12 05:52:43 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:52:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:52:43 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:43 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:43 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:52:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 05:52:45 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12&clinicId=2
2025-09-12 05:52:45 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12&clinicId=2
2025-09-12 05:52:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:52:45 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12&clinicId=2
2025-09-12 05:52:45 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:52:45 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:52:45 [http-nio-8080-exec-2] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 2
2025-09-12 05:52:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:52:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 05:52:48 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/clinics
2025-09-12 05:52:48 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/clinics
2025-09-12 05:52:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:52:48 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/clinics
2025-09-12 05:52:48 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getAllClinics(); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-12 05:52:48 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getAllClinics(); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-12 05:52:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        DISTINCT u.clinic 
    FROM
        User u 
    WHERE
        u.role = 'ADMIN' 
        AND u.isActive = true */ select
            distinct c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            u1_0.role='ADMIN' 
            and u1_0.is_active=1
2025-09-12 05:52:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:52:54 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:52:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:52:54 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:52:54 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:52:54 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:52:54 [http-nio-8080-exec-9] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 3
2025-09-12 05:52:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:52:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 05:52:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:52:58 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 05:52:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 05:52:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:52:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:52:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:52:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:52:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 05:52:58 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:58 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:58 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:52:58 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:58 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:52:58 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 3
2025-09-12 05:52:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:52:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 05:53:01 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/3
2025-09-12 05:53:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/3
2025-09-12 05:53:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:53:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/3
2025-09-12 05:53:01 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:53:01 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:53:01 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: ALL
2025-09-12 05:53:01 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 05:53:01 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:53:01 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:53:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:53:01 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:53:01 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 05:53:01 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:53:01 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:53:01 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:53:01 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:53:01 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:53:01 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 3
2025-09-12 05:53:01 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:53:01 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 05:53:40 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:53:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:53:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:53:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:53:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:53:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:53:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:53:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:53:40 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:53:40 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:53:40 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:53:40 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:53:40 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:53:40 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: ALL
2025-09-12 05:53:49 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:53:49 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:53:49 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:53:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:53:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:53:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:53:49 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:53:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:53:49 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:53:49 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:53:49 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:53:49 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: ALL
2025-09-12 05:53:49 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:53:49 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:53:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:53:51 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:53:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:53:51 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:53:51 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:53:51 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:53:51 [http-nio-8080-exec-6] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 3
2025-09-12 05:53:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:53:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 05:53:53 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:53:53 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:53:53 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:53:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:53:53 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:53:53 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:53:53 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:53:53 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: ALL
2025-09-12 05:53:53 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:53:53 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:53:53 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:53:53 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:54:05 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:54:05 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:54:05 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:54:05 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:54:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:54:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:54:05 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:54:05 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:54:05 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:54:05 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:54:05 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:54:05 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:54:05 [http-nio-8080-exec-5] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: ALL
2025-09-12 05:54:05 [http-nio-8080-exec-4] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:54:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:54:08 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:54:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:54:08 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:54:08 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:54:08 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:54:08 [http-nio-8080-exec-10] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 3
2025-09-12 05:54:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:54:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 05:54:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:54:09 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:54:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:54:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:54:09 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:54:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:54:09 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:54:09 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:54:09 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:54:09 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:54:09 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:54:09 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: ALL
2025-09-12 05:54:31 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:54:31 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:54:31 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:54:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:54:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:54:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:54:31 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:54:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:54:31 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:54:31 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:54:31 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:54:31 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:54:31 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:54:31 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: ALL
2025-09-12 05:54:34 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/clinics
2025-09-12 05:54:34 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/clinics
2025-09-12 05:54:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:54:34 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/clinics
2025-09-12 05:54:34 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getAllClinics(); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-12 05:54:34 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getAllClinics(); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-09-12 05:54:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        DISTINCT u.clinic 
    FROM
        User u 
    WHERE
        u.role = 'ADMIN' 
        AND u.isActive = true */ select
            distinct c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            u1_0.role='ADMIN' 
            and u1_0.is_active=1
2025-09-12 05:54:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:54:37 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:54:37 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:54:37 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:54:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:54:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:54:37 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:54:37 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:54:37 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:54:37 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:54:37 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:54:37 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:54:37 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:54:37 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: ALL
2025-09-12 05:55:51 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:55:51 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 05:55:51 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:55:51 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 05:55:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:55:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:55:51 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:55:51 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 05:55:51 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:55:51 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:55:51 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:55:51 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:55:51 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 3
2025-09-12 05:55:51 [http-nio-8080-exec-5] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:55:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:55:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 05:57:30 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Retrograde clock change detected (housekeeper delta=29s199ms), soft-evicting connections from pool.
2025-09-12 05:58:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 05:58:15 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:58:15 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:58:15 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 05:58:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:58:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:58:15 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:58:15 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 05:58:15 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:58:15 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:58:15 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:58:15 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:58:15 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:58:15 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 3
2025-09-12 05:58:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:58:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 05:58:21 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:58:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:58:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:58:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:58:21 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:58:21 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:58:21 [http-nio-8080-exec-1] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 3
2025-09-12 05:58:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:58:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 05:58:24 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:58:24 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 05:58:24 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 05:58:24 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:58:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:58:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:58:24 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 05:58:24 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:58:24 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:58:24 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:58:24 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:58:24 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:58:24 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:58:24 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 3
2025-09-12 05:58:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:58:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 05:58:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:58:47 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:58:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:58:47 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 05:58:47 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:58:47 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:58:47 [http-nio-8080-exec-8] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 3
2025-09-12 05:58:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:58:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 05:58:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/logout
2025-09-12 05:58:49 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/logout
2025-09-12 05:58:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:58:49 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/logout
2025-09-12 05:58:49 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.logout(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 05:58:49 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.logout(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 05:58:54 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/login
2025-09-12 05:58:54 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-09-12 05:58:54 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 05:58:54 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-09-12 05:58:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.username = :usernameOrEmail 
        OR u.email = :usernameOrEmail */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.username=? 
            or u1_0.email=?
2025-09-12 05:58:55 [http-nio-8080-exec-10] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-12 05:58:55 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/me
2025-09-12 05:58:55 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/me
2025-09-12 05:58:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:58:55 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/me
2025-09-12 05:58:55 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 05:58:55 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 05:58:55 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12
2025-09-12 05:58:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12
2025-09-12 05:58:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:58:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12
2025-09-12 05:58:55 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:58:55 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:58:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:58:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 05:59:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:59:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:59:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:59:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:59:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:59:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:59:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:59:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 05:59:02 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:59:02 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:59:02 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:59:02 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:59:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:59:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:59:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-12 05:59:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-12 05:59:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 05:59:39 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/13
2025-09-12 05:59:39 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/13
2025-09-12 05:59:39 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:59:39 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/13
2025-09-12 05:59:39 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:59:39 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:59:39 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:59:39 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-12 05:59:44 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/logout
2025-09-12 05:59:44 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/logout
2025-09-12 05:59:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:59:44 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/logout
2025-09-12 05:59:44 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.logout(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 05:59:44 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.logout(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 05:59:49 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/login
2025-09-12 05:59:49 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-09-12 05:59:49 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 05:59:49 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-09-12 05:59:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.username = :usernameOrEmail 
        OR u.email = :usernameOrEmail */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.username=? 
            or u1_0.email=?
2025-09-12 05:59:49 [http-nio-8080-exec-2] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-12 05:59:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/me
2025-09-12 05:59:49 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/me
2025-09-12 05:59:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:59:49 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/me
2025-09-12 05:59:49 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 05:59:49 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 05:59:49 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12
2025-09-12 05:59:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12
2025-09-12 05:59:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:59:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12
2025-09-12 05:59:49 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:59:49 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 05:59:49 [http-nio-8080-exec-6] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: ALL
2025-09-12 05:59:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 05:59:56 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 05:59:56 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 05:59:56 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 05:59:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:59:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 05:59:56 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 05:59:56 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 05:59:56 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:59:56 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:59:56 [http-nio-8080-exec-5] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 05:59:56 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:59:56 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 05:59:56 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 3
2025-09-12 05:59:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 05:59:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 06:00:00 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/8
2025-09-12 06:00:00 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/8
2025-09-12 06:00:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 06:00:00 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/8
2025-09-12 06:00:00 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 06:00:00 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 06:00:00 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: ALL
2025-09-12 06:00:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 06:00:00 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 06:00:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 06:00:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 06:00:00 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 06:00:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 06:00:00 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 06:00:00 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 06:00:00 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 06:00:00 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 06:00:00 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 06:00:00 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 3
2025-09-12 06:00:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 06:00:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 06:01:18 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 06:01:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 06:01:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 06:01:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 06:01:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 06:01:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 06:01:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 06:01:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 06:01:18 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 06:01:18 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 06:01:18 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 06:01:18 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 3
2025-09-12 06:01:18 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 06:01:18 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 06:01:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 06:01:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 06:01:26 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/3?clinicId=3
2025-09-12 06:01:26 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/3?clinicId=3
2025-09-12 06:01:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 06:01:26 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/3?clinicId=3
2025-09-12 06:01:26 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 06:01:26 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 06:01:26 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading a patient from clinic: 3
2025-09-12 06:01:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 06:01:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-12 06:01:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 06:01:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 06:01:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 06:01:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 06:01:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 06:01:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 06:01:32 [http-nio-8080-exec-6] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 3
2025-09-12 06:01:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 06:01:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 06:01:35 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/logout
2025-09-12 06:01:35 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/logout
2025-09-12 06:01:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 06:01:35 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/logout
2025-09-12 06:01:35 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.logout(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 06:01:35 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.logout(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 06:01:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/login
2025-09-12 06:01:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-09-12 06:01:40 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 06:01:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-09-12 06:01:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.username = :usernameOrEmail 
        OR u.email = :usernameOrEmail */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.username=? 
            or u1_0.email=?
2025-09-12 06:01:40 [http-nio-8080-exec-2] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-12 06:01:40 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/me
2025-09-12 06:01:40 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/me
2025-09-12 06:01:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 06:01:40 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/me
2025-09-12 06:01:40 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 06:01:40 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 06:01:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12
2025-09-12 06:01:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12
2025-09-12 06:01:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 06:01:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12
2025-09-12 06:01:40 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 06:01:40 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 06:01:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 06:01:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 06:01:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 06:01:45 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 06:01:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 06:01:45 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 06:01:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 06:01:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 06:01:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc
2025-09-12 06:01:45 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 06:01:45 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 06:01:45 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 06:01:45 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 06:01:45 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 06:01:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 06:01:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 06:01:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1
2025-09-12 06:01:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 06:01:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(p) 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.createdAt >= :startDateTime 
        AND p.createdAt <= :endDateTime */ select
            count(p1_0.id) 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.created_at>=? 
            and p1_0.created_at<=?
2025-09-12 06:01:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/13
2025-09-12 06:01:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/13
2025-09-12 06:01:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 06:01:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/13
2025-09-12 06:01:47 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 06:01:47 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 06:01:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 06:01:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-12 06:02:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/13
2025-09-12 06:02:09 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/13
2025-09-12 06:02:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 06:02:10 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/13
2025-09-12 06:02:10 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 06:02:10 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 06:02:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 06:02:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-12 06:58:15 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=55m45s681ms).
2025-09-12 08:19:12 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h20m56s915ms).
2025-09-12 09:55:16 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h36m3s978ms).
2025-09-12 11:06:11 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h10m55s210ms).
2025-09-12 12:23:08 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h16m56s425ms).
2025-09-12 13:32:15 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/13
2025-09-12 13:32:15 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/13
2025-09-12 13:32:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:32:15 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/13
2025-09-12 13:32:15 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:32:15 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientById(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:32:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:32:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-09-12 13:32:15 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h9m7s588ms).
2025-09-12 13:32:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12
2025-09-12 13:32:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12
2025-09-12 13:32:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:32:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12
2025-09-12 13:32:32 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 13:32:32 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 13:32:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:32:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 13:32:43 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/logout
2025-09-12 13:32:43 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/logout
2025-09-12 13:32:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:32:43 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/logout
2025-09-12 13:32:43 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.logout(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 13:32:43 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.logout(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 13:32:49 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/login
2025-09-12 13:32:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-09-12 13:32:49 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 13:32:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-09-12 13:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.username = :usernameOrEmail 
        OR u.email = :usernameOrEmail */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.username=? 
            or u1_0.email=?
2025-09-12 13:32:50 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-12 13:32:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/me
2025-09-12 13:32:50 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/me
2025-09-12 13:32:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:32:50 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12
2025-09-12 13:32:50 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/me
2025-09-12 13:32:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12
2025-09-12 13:32:50 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 13:32:50 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.getCurrentUser(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 13:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:32:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12
2025-09-12 13:32:50 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 13:32:50 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 13:32:50 [http-nio-8080-exec-10] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: ALL
2025-09-12 13:32:55 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:32:55 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 13:32:55 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:32:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 13:32:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:32:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:32:55 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:32:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 13:32:55 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:32:55 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:32:55 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 13:32:55 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:32:55 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:32:55 [http-nio-8080-exec-5] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 3
2025-09-12 13:32:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:32:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 13:32:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 13:32:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 13:32:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:32:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 13:32:58 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 13:32:58 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 13:32:58 [http-nio-8080-exec-4] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 3
2025-09-12 13:32:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:32:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 13:33:35 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-12 13:33:35 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 13:33:35 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 13:33:35 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-12 13:33:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-09-12 13:33:37 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 13:33:37 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 13:33:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-09-12 13:33:37 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-09-12 13:33:37 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 13:33:37 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 13:33:37 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-09-12 13:33:37 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-09-12 13:33:37 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 13:33:37 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 13:33:37 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-09-12 13:33:37 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-09-12 13:33:37 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 13:33:37 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 13:33:37 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-09-12 13:33:37 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-12 13:33:37 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 13:33:37 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 13:33:37 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-12 13:33:37 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-09-12 13:33:37 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 13:33:37 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 13:33:37 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-09-12 13:33:37 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs/swagger-config
2025-09-12 13:33:37 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 13:33:37 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 13:33:37 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs/swagger-config
2025-09-12 13:33:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-12 13:33:37 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 13:33:37 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 13:33:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-12 13:33:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs
2025-09-12 13:33:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 13:33:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 13:33:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs
2025-09-12 13:34:30 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 13:34:30 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 13:34:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:34:30 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 13:34:30 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 13:34:30 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 13:34:30 [http-nio-8080-exec-8] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 3
2025-09-12 13:34:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:34:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 13:34:38 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 13:34:38 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 13:34:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:34:38 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments/today?date=2025-09-12&clinicId=3
2025-09-12 13:34:38 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 13:34:38 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getTodayAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-09-12 13:34:38 [http-nio-8080-exec-2] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading today's appointments from clinic: 3
2025-09-12 13:34:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:34:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Appointment a 
    WHERE
        a.clinic = :clinic 
        AND a.appointmentDate = CURRENT_DATE() 
    ORDER BY
        a.appointmentTime */ select
            a1_0.id,
            a1_0.appointment_date,
            a1_0.appointment_time,
            a1_0.appointment_type,
            a1_0.chief_complaint,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.created_by,
            a1_0.doctor_id,
            a1_0.duration_minutes,
            a1_0.notes,
            a1_0.patient_id,
            a1_0.status,
            a1_0.updated_at 
        from
            appointments a1_0 
        where
            a1_0.clinic_id=? 
            and a1_0.appointment_date=current_date 
        order by
            a1_0.appointment_time
2025-09-12 13:34:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 13:34:40 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:34:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:34:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 13:34:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:34:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:34:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 13:34:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:34:40 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:40 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:40 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:40 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:40 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 13:34:40 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 3
2025-09-12 13:34:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:34:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 13:34:45 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=10&clinicId=3&q=P2025080002
2025-09-12 13:34:45 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=10&clinicId=3&q=P2025080002
2025-09-12 13:34:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:34:45 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=10&clinicId=3&q=P2025080002
2025-09-12 13:34:45 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:45 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:45 [http-nio-8080-exec-4] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:34:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:34:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 13:34:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:34:49 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:34:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:34:49 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:34:49 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:49 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:49 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 3
2025-09-12 13:34:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:34:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 13:34:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:34:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:34:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:34:49 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:49 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:49 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 3
2025-09-12 13:34:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:34:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 13:34:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=10&clinicId=3&q=%D8%B5%D8%A7%D9%84%D8%AD%D8%A9%20%D8%B3%D8%A7%D9%84%D9%85%D9%8A%D9%86
2025-09-12 13:34:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=10&clinicId=3&q=%D8%B5%D8%A7%D9%84%D8%AD%D8%A9%20%D8%B3%D8%A7%D9%84%D9%85%D9%8A%D9%86
2025-09-12 13:34:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:34:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=10&clinicId=3&q=%D8%B5%D8%A7%D9%84%D8%AD%D8%A9%20%D8%B3%D8%A7%D9%84%D9%85%D9%8A%D9%86
2025-09-12 13:34:56 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:56 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:56 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:34:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:34:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 13:34:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=10&clinicId=3&q=%D8%B5%D8%A7%D9%84%D8%AD%D8%A9%20%D8%B3%D8%A7%D9%84%D9%85
2025-09-12 13:34:58 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=10&clinicId=3&q=%D8%B5%D8%A7%D9%84%D8%AD%D8%A9%20%D8%B3%D8%A7%D9%84%D9%85
2025-09-12 13:34:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:34:58 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=10&clinicId=3&q=%D8%B5%D8%A7%D9%84%D8%AD%D8%A9%20%D8%B3%D8%A7%D9%84%D9%85
2025-09-12 13:34:58 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:58 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:58 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:34:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:34:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 13:34:59 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=10&clinicId=3&q=%D8%B5%D8%A7%D9%84%D8%AD%D8%A9%20%D8%B3%D8%A7%D9%84
2025-09-12 13:34:59 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=10&clinicId=3&q=%D8%B5%D8%A7%D9%84%D8%AD%D8%A9%20%D8%B3%D8%A7%D9%84
2025-09-12 13:34:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:34:59 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=10&clinicId=3&q=%D8%B5%D8%A7%D9%84%D8%AD%D8%A9%20%D8%B3%D8%A7%D9%84
2025-09-12 13:34:59 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:59 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:59 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:34:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:34:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 13:34:59 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=10&clinicId=3&q=%D8%B5%D8%A7%D9%84%D8%AD%D8%A9%20%D8%B3%D8%A7
2025-09-12 13:34:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=10&clinicId=3&q=%D8%B5%D8%A7%D9%84%D8%AD%D8%A9%20%D8%B3%D8%A7
2025-09-12 13:34:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:34:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=10&clinicId=3&q=%D8%B5%D8%A7%D9%84%D8%AD%D8%A9%20%D8%B3%D8%A7
2025-09-12 13:34:59 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:59 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:59 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:34:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:34:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 13:34:59 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=10&clinicId=3&q=%D8%B5%D8%A7%D9%84%D8%AD%D8%A9
2025-09-12 13:34:59 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=10&clinicId=3&q=%D8%B5%D8%A7%D9%84%D8%AD%D8%A9
2025-09-12 13:34:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:34:59 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=10&clinicId=3&q=%D8%B5%D8%A7%D9%84%D8%AD%D8%A9
2025-09-12 13:34:59 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:59 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:59 [http-nio-8080-exec-5] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:34:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:34:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 13:34:59 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=10&clinicId=3&q=%D8%B5%D8%A7%D9%84%D8%AD%D8%A9
2025-09-12 13:34:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:34:59 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=10&clinicId=3&q=%D8%B5%D8%A7%D9%84%D8%AD%D8%A9
2025-09-12 13:34:59 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:59 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:59 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:34:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:34:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 13:34:59 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=10&clinicId=3&q=%D8%B5%D8%A7%D9%84%D8%AD%D8%A9
2025-09-12 13:34:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:34:59 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=10&clinicId=3&q=%D8%B5%D8%A7%D9%84%D8%AD%D8%A9
2025-09-12 13:34:59 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:59 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:34:59 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:34:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:34:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 13:35:00 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=10&clinicId=3&q=%D8%B5%D8%A7%D9%84%D8%AD%D8%A9
2025-09-12 13:35:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:35:00 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=10&clinicId=3&q=%D8%B5%D8%A7%D9%84%D8%AD%D8%A9
2025-09-12 13:35:00 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:35:00 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:35:00 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:35:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:35:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 13:35:07 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:35:07 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:35:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:35:07 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:35:07 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:35:07 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:35:07 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 3
2025-09-12 13:35:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:35:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 13:35:07 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:35:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:35:07 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:35:07 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:35:07 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:35:07 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 3
2025-09-12 13:35:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:35:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 13:35:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:35:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:35:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:35:09 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:35:09 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:35:09 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 3
2025-09-12 13:35:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:35:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 13:35:09 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:35:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:35:09 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:35:09 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:35:09 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:35:09 [http-nio-8080-exec-5] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 3
2025-09-12 13:35:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:35:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 13:35:12 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=10&clinicId=3
2025-09-12 13:35:12 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=10&clinicId=3
2025-09-12 13:35:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:35:12 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=10&clinicId=3
2025-09-12 13:35:12 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:35:12 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:35:12 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:35:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:35:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:35:16 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=10&clinicId=3
2025-09-12 13:35:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:35:16 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=10&clinicId=3
2025-09-12 13:35:16 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:35:16 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:35:16 [http-nio-8080-exec-4] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:35:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:35:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:35:22 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=10&clinicId=3
2025-09-12 13:35:22 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=10&clinicId=3
2025-09-12 13:35:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:35:22 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=10&clinicId=3
2025-09-12 13:35:22 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:35:22 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:35:22 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:35:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:35:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:35:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=10&clinicId=3
2025-09-12 13:35:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:35:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=10&clinicId=3
2025-09-12 13:35:26 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:35:26 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:35:26 [http-nio-8080-exec-5] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:35:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:35:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:36:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:36:56 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 13:36:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 13:36:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:36:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:36:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:36:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 13:36:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:36:56 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:36:56 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:36:56 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:36:56 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:36:56 [http-nio-8080-exec-4] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 13:36:56 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 3
2025-09-12 13:36:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:36:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 13:38:07 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=10&clinicId=3
2025-09-12 13:38:07 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=10&clinicId=3
2025-09-12 13:38:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:38:07 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=10&clinicId=3
2025-09-12 13:38:07 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:38:07 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:38:07 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:38:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:38:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:39:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/statistics
2025-09-12 13:39:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:39:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/statistics
2025-09-12 13:39:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:39:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:39:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:39:02 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/statistics
2025-09-12 13:39:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients?page=0&size=10&sortBy=firstName&sortDirection=asc&clinicId=3
2025-09-12 13:39:02 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:39:02 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getPatientStatistics(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:39:02 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patient statistics from clinic: ALL
2025-09-12 13:39:02 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:39:02 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.getAllPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:39:02 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading patients from clinic: 3
2025-09-12 13:39:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:39:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name 
    limit
        ?
2025-09-12 13:40:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:40:55 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:40:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:40:55 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:40:55 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:40:55 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:40:55 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:40:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:40:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:40:55 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:40:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:40:55 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:40:55 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:40:55 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:40:55 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:40:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:40:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:41:00 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:41:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:41:00 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:41:00 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:41:00 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:41:00 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:41:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:41:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:41:00 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:41:00 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:41:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:41:00 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:41:00 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:41:00 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:41:00 [http-nio-8080-exec-7] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:41:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:41:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:41:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:41:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:41:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:41:02 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:41:02 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:41:02 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:41:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:41:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:41:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:41:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:41:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:41:02 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:41:02 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:41:02 [http-nio-8080-exec-4] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:41:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:41:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:41:08 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:41:08 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:41:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:41:08 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:41:08 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:41:08 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:41:08 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:41:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:41:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:41:08 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:41:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:41:08 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:41:08 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:41:08 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:41:08 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:41:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:41:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:41:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:41:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:41:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:41:09 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:41:09 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:41:09 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:41:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:41:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:41:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:41:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:41:09 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:41:09 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:41:09 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:41:09 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:41:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:41:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:41:56 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&page=0&size=10
2025-09-12 13:41:56 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 13:41:56 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 13:42:05 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?clinicId=2&q=%D9%85%D8%AD%D9%85%D8%AF&page=0&size=10
2025-09-12 13:42:05 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 13:42:05 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 13:42:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/validate
2025-09-12 13:42:31 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 13:42:31 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 13:42:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/validate
2025-09-12 13:42:31 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.validateToken(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController]
2025-09-12 13:42:31 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AuthController.validateToken(com.nakqeeb.amancare.security.UserPrincipal); target is of class [com.nakqeeb.amancare.controller.AuthController] with authorization manager org.springframework.security.authorization.method.PreAuthorizeAuthorizationManager@38679848 and result ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasRole('SYSTEM_ADMIN') or hasRole('ADMIN') or hasRole('DOCTOR') or hasRole('NURSE') or hasRole('RECEPTIONIST')]
2025-09-12 13:42:31 [http-nio-8080-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authorization.AuthorizationDeniedException: Access Denied]
2025-09-12 13:42:46 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-09-12 13:42:46 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 13:42:46 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 13:42:46 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-09-12 13:42:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.username = :usernameOrEmail 
        OR u.email = :usernameOrEmail */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.username=? 
            or u1_0.email=?
2025-09-12 13:42:46 [http-nio-8080-exec-3] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-12 13:43:01 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?clinicId=2&q=%D9%85%D8%AD%D9%85%D8%AF&page=0&size=10
2025-09-12 13:43:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:43:01 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?clinicId=2&q=%D9%85%D8%AD%D9%85%D8%AF&page=0&size=10
2025-09-12 13:43:01 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:43:01 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:43:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:43:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 13:43:14 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?clinicId=2&q=female&page=0&size=10
2025-09-12 13:43:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:43:14 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?clinicId=2&q=female&page=0&size=10
2025-09-12 13:43:14 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:43:14 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:43:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:43:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 13:43:25 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?clinicId=2&q=MALE&page=0&size=10
2025-09-12 13:43:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:43:25 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?clinicId=2&q=MALE&page=0&size=10
2025-09-12 13:43:25 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:43:25 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:43:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:43:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 13:43:34 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?clinicId=2&q=%D8%B0%D9%83%D8%B1&page=0&size=10
2025-09-12 13:43:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:43:34 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?clinicId=2&q=%D8%B0%D9%83%D8%B1&page=0&size=10
2025-09-12 13:43:34 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:43:34 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:43:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:43:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 13:44:23 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?clinicId=2&page=0&size=10
2025-09-12 13:44:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:44:23 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?clinicId=2&page=0&size=10
2025-09-12 13:44:23 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:44:23 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:44:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:44:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:44:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?clinicId=2&q=777223456&page=0&size=10
2025-09-12 13:44:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:44:32 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?clinicId=2&q=777223456&page=0&size=10
2025-09-12 13:44:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:44:32 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:44:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:44:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 13:46:14 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Retrograde clock change detected (housekeeper delta=28s801ms), soft-evicting connections from pool.
2025-09-12 13:50:32 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-12 13:50:32 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-12 13:50:32 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 13:50:32 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-12 13:50:32 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-12 13:50:34 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 23234 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-12 13:50:34 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-12 13:50:34 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-12 13:50:34 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-12 13:50:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-12 13:50:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 15 JPA repository interfaces.
2025-09-12 13:50:36 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-12 13:50:36 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-12 13:50:36 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-12 13:50:36 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-12 13:50:36 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1303 ms
2025-09-12 13:50:36 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-12 13:50:36 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-12 13:50:36 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-12 13:50:36 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-12 13:50:36 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-12 13:50:36 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@97129a6
2025-09-12 13:50:36 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-12 13:50:36 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-12 13:50:36 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-12 13:50:37 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-12 13:50:37 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-12 13:50:37 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 13:50:37 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-12 13:50:39 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-12 13:50:39 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-12 13:50:40 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-12 13:50:40 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-12 13:50:40 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-12 13:50:40 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.953 seconds (process running for 6.286)
2025-09-12 13:50:40 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-12 13:50:40 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-12 13:50:40 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-12 13:50:40 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-12 13:50:44 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-12 13:50:44 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-12 13:50:44 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-12 13:50:44 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?clinicId=2&q=male&page=0&size=10
2025-09-12 13:50:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:50:44 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?clinicId=2&q=male&page=0&size=10
2025-09-12 13:50:44 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:50:44 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:50:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:50:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.gender LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.gender like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 13:50:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?clinicId=2&q=female&page=0&size=10
2025-09-12 13:50:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:50:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?clinicId=2&q=female&page=0&size=10
2025-09-12 13:50:54 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:50:54 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:50:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:50:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.gender LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.gender like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 13:51:20 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-12 13:51:20 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-12 13:51:20 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 13:51:20 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-12 13:51:20 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-12 13:51:22 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 23445 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-12 13:51:22 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-12 13:51:22 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-12 13:51:22 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-12 13:51:23 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-12 13:51:23 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52 ms. Found 15 JPA repository interfaces.
2025-09-12 13:51:23 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-12 13:51:23 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-12 13:51:23 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-12 13:51:23 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-12 13:51:23 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1054 ms
2025-09-12 13:51:24 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-12 13:51:24 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-12 13:51:24 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-12 13:51:24 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-12 13:51:24 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-12 13:51:24 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@97129a6
2025-09-12 13:51:24 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-12 13:51:24 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-12 13:51:24 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-12 13:51:25 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-12 13:51:25 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-12 13:51:25 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 13:51:25 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-12 13:51:26 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-12 13:51:26 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-12 13:51:27 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-12 13:51:27 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-12 13:51:28 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-12 13:51:28 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.585 seconds (process running for 5.857)
2025-09-12 13:51:28 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-12 13:51:28 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-12 13:51:28 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-12 13:51:28 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-12 13:51:31 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-12 13:51:31 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-12 13:51:31 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-12 13:51:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?clinicId=2&q=A_NEGATIVE&page=0&size=10
2025-09-12 13:51:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:51:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?clinicId=2&q=A_NEGATIVE&page=0&size=10
2025-09-12 13:51:31 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:51:31 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:51:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:51:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.gender LIKE CONCAT('%', :search, '%') 
            OR p.bloodType LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.gender like concat('%', ?, '%') escape '' 
                or p1_0.blood_type like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 13:52:24 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-12 13:52:24 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-12 13:52:24 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 13:52:25 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-12 13:52:25 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-12 13:52:27 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 23741 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-12 13:52:27 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-12 13:52:27 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-12 13:52:27 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-12 13:52:28 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-12 13:52:28 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 15 JPA repository interfaces.
2025-09-12 13:52:28 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-12 13:52:28 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-12 13:52:28 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-12 13:52:28 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-12 13:52:28 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1302 ms
2025-09-12 13:52:29 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-12 13:52:29 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-12 13:52:29 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-12 13:52:29 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-12 13:52:29 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-12 13:52:29 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@30b719fa
2025-09-12 13:52:29 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-12 13:52:29 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-12 13:52:29 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-12 13:52:30 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-12 13:52:30 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-12 13:52:30 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 13:52:30 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-12 13:52:31 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-12 13:52:31 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-12 13:52:32 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-12 13:52:32 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-12 13:52:32 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-12 13:52:32 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.681 seconds (process running for 5.958)
2025-09-12 13:52:32 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-12 13:52:32 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-12 13:52:32 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-12 13:52:32 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-12 13:52:34 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-12 13:52:34 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-12 13:52:34 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-09-12 13:52:34 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:52:34 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:52:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:52:34 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:52:34 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:52:34 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:52:34 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:52:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:52:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:52:38 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:52:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:52:38 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:52:38 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:52:38 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:52:38 [http-nio-8080-exec-2] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:52:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:52:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:52:42 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:52:42 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:52:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:52:42 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:52:42 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:52:42 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:52:42 [http-nio-8080-exec-5] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:52:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:52:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:52:42 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:52:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:52:42 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:52:42 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:52:42 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:52:42 [http-nio-8080-exec-6] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:52:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:52:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:52:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:52:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:52:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:52:44 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:52:44 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:52:44 [http-nio-8080-exec-8] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:52:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:52:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:52:45 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:52:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:52:45 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:52:45 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:52:45 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:52:45 [http-nio-8080-exec-9] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:52:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:52:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:52:46 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:52:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:52:46 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:52:46 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:52:46 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:52:46 [http-nio-8080-exec-10] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:52:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:52:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:52:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:52:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:52:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:52:47 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:52:47 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:52:47 [http-nio-8080-exec-1] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:52:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:52:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:52:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:52:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:52:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:52:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:52:47 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:52:47 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:52:47 [http-nio-8080-exec-3] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:52:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:52:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 13:52:48 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:52:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 13:52:48 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?page=0&size=50&clinicId=3
2025-09-12 13:52:48 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:52:48 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 13:52:48 [http-nio-8080-exec-4] INFO  c.n.a.controller.PatientController - SYSTEM_ADMIN reading searched patients from clinic: 3
2025-09-12 13:52:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 13:52:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 14:01:59 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Retrograde clock change detected (housekeeper delta=29s778ms), soft-evicting connections from pool.
2025-09-12 14:52:32 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-12 14:52:32 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-12 14:52:32 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-12 14:52:32 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-12 14:57:04 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-12 14:57:04 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-12 14:57:04 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 14:57:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-12 14:57:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-12 14:57:07 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 39534 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-12 14:57:07 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-12 14:57:07 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-12 14:57:07 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-12 14:57:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-12 14:57:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 39 ms. Found 15 JPA repository interfaces.
2025-09-12 14:57:08 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-12 14:57:08 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-12 14:57:08 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-12 14:57:08 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-12 14:57:08 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1023 ms
2025-09-12 14:57:08 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-12 14:57:08 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-12 14:57:08 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-12 14:57:08 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-12 14:57:08 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-12 14:57:08 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@d6322ba
2025-09-12 14:57:08 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-12 14:57:08 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-12 14:57:08 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-12 14:57:09 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-12 14:57:09 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-12 14:57:09 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 14:57:09 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-12 14:57:10 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-12 14:57:10 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-12 14:57:11 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-12 14:57:11 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-12 14:57:11 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-12 14:57:11 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 4.894 seconds (process running for 5.156)
2025-09-12 14:57:11 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-12 14:57:11 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-12 14:57:11 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-12 14:57:11 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-12 14:57:59 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-12 14:57:59 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-12 14:57:59 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 14:57:59 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-12 14:57:59 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-12 14:58:01 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 39764 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-12 14:58:01 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-12 14:58:01 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-12 14:58:01 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-12 14:58:01 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-12 14:58:01 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38 ms. Found 15 JPA repository interfaces.
2025-09-12 14:58:02 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-12 14:58:02 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-12 14:58:02 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-12 14:58:02 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-12 14:58:02 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 963 ms
2025-09-12 14:58:02 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-12 14:58:02 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-12 14:58:02 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-12 14:58:02 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-12 14:58:02 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-12 14:58:02 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@97129a6
2025-09-12 14:58:02 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-12 14:58:02 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-12 14:58:02 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-12 14:58:03 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-12 14:58:03 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-12 14:58:03 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 14:58:03 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-12 14:58:05 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-12 14:58:05 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-12 14:58:05 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-12 14:58:05 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-12 14:58:05 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-12 14:58:05 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 4.826 seconds (process running for 5.058)
2025-09-12 14:58:05 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-12 14:58:05 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-12 14:58:05 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-12 14:58:05 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-12 14:58:10 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-12 14:58:10 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-12 14:58:10 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-12 14:58:10 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-09-12 14:58:10 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 14:58:10 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 14:58:10 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-09-12 14:58:10 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-09-12 14:58:10 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-09-12 14:58:10 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 14:58:10 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 14:58:10 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-09-12 14:58:10 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 14:58:10 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 14:58:10 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-09-12 14:58:10 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-09-12 14:58:10 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-09-12 14:58:10 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 14:58:10 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 14:58:10 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-12 14:58:10 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-09-12 14:58:10 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 14:58:10 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 14:58:10 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 14:58:10 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-12 14:58:10 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 14:58:10 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-09-12 14:58:10 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs/swagger-config
2025-09-12 14:58:10 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-12 14:58:10 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 14:58:10 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 14:58:10 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 14:58:10 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 14:58:10 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs/swagger-config
2025-09-12 14:58:10 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-12 14:58:10 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs
2025-09-12 14:58:10 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 14:58:10 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 14:58:10 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs
2025-09-12 14:58:10 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 639 ms
2025-09-12 14:58:21 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-12 14:58:21 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-12 14:58:21 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 14:58:21 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-12 14:58:21 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-12 14:58:22 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 39852 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-12 14:58:22 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-12 14:58:22 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-12 14:58:22 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-12 14:58:23 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-12 14:58:23 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 41 ms. Found 15 JPA repository interfaces.
2025-09-12 14:58:24 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-12 14:58:24 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-12 14:58:24 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-12 14:58:24 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-12 14:58:24 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1346 ms
2025-09-12 14:58:24 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-12 14:58:24 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-12 14:58:24 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-12 14:58:24 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-12 14:58:24 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-12 14:58:24 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@97129a6
2025-09-12 14:58:24 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-12 14:58:24 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-12 14:58:24 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-12 14:58:25 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-12 14:58:25 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-12 14:58:25 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 14:58:25 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-12 14:58:26 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-12 14:58:26 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-12 14:58:27 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-12 14:58:27 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-12 14:58:27 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-12 14:58:27 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.416 seconds (process running for 5.677)
2025-09-12 14:58:27 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-12 14:58:27 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-12 14:58:27 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-12 14:58:27 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-12 14:58:27 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-12 14:58:27 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-12 14:58:27 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-12 14:58:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-09-12 14:58:27 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 14:58:27 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 14:58:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-09-12 14:58:27 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-09-12 14:58:27 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-09-12 14:58:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-09-12 14:58:27 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 14:58:27 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 14:58:27 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 14:58:27 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 14:58:27 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 14:58:27 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 14:58:27 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-09-12 14:58:27 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-12 14:58:27 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 14:58:27 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 14:58:27 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-09-12 14:58:27 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-12 14:58:27 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 14:58:27 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 14:58:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-09-12 14:58:27 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-09-12 14:58:27 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-09-12 14:58:28 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs/swagger-config
2025-09-12 14:58:28 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 14:58:28 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 14:58:28 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs/swagger-config
2025-09-12 14:58:28 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-12 14:58:28 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 14:58:28 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 14:58:28 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-12 14:58:28 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs
2025-09-12 14:58:28 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 14:58:28 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 14:58:28 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs
2025-09-12 14:58:28 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 637 ms
2025-09-12 14:58:49 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&isActive=true&page=0&size=10
2025-09-12 14:58:49 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 14:58:49 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&isActive=true&page=0&size=10
2025-09-12 14:58:49 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 14:58:49 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 14:58:49 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 14:58:49 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = :isActive 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.gender LIKE CONCAT('%', :search, '%') 
            OR p.bloodType LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=? 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.gender like concat('%', ?, '%') escape '' 
                or p1_0.blood_type like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 14:58:59 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?q=male&isActive=true&page=0&size=10
2025-09-12 14:58:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 14:58:59 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?q=male&isActive=true&page=0&size=10
2025-09-12 14:58:59 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 14:58:59 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 14:58:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 14:58:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = :isActive 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.gender LIKE CONCAT('%', :search, '%') 
            OR p.bloodType LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=? 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.gender like concat('%', ?, '%') escape '' 
                or p1_0.blood_type like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 14:59:26 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?q=male&isActive=false&page=0&size=10
2025-09-12 14:59:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 14:59:26 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?q=male&isActive=false&page=0&size=10
2025-09-12 14:59:26 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 14:59:26 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 14:59:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 14:59:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = :isActive 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.gender LIKE CONCAT('%', :search, '%') 
            OR p.bloodType LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=? 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.gender like concat('%', ?, '%') escape '' 
                or p1_0.blood_type like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 15:02:45 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-12 15:02:45 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-12 15:02:45 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 15:02:45 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-12 15:02:45 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-12 15:02:48 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 40948 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-12 15:02:48 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-12 15:02:48 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-12 15:02:48 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-12 15:02:48 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-12 15:02:48 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 39 ms. Found 15 JPA repository interfaces.
2025-09-12 15:02:49 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-12 15:02:49 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-12 15:02:49 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-12 15:02:49 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-12 15:02:49 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 964 ms
2025-09-12 15:02:49 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-12 15:02:49 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-12 15:02:49 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-12 15:02:49 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-12 15:02:49 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-12 15:02:49 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@aedf4f6
2025-09-12 15:02:49 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-12 15:02:49 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-12 15:02:49 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-12 15:02:50 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-12 15:02:50 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-12 15:02:50 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 15:02:50 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-12 15:02:51 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-12 15:02:51 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-12 15:02:52 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-12 15:02:52 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-12 15:02:52 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-12 15:02:52 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 4.722 seconds (process running for 4.971)
2025-09-12 15:02:52 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-12 15:02:52 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-12 15:02:52 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-12 15:02:52 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-12 15:02:56 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-12 15:02:56 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-12 15:02:56 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-12 15:02:56 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-09-12 15:02:56 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:02:56 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:02:56 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-09-12 15:02:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-09-12 15:02:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:02:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:02:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-09-12 15:02:56 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-09-12 15:02:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-12 15:02:56 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:02:56 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:02:56 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:02:56 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:02:56 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-09-12 15:02:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-12 15:02:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-09-12 15:02:56 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:02:56 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:02:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-09-12 15:02:56 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-09-12 15:02:56 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:02:56 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:02:56 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-09-12 15:02:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-12 15:02:56 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:02:56 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:02:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-12 15:02:56 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs/swagger-config
2025-09-12 15:02:56 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:02:56 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:02:56 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs/swagger-config
2025-09-12 15:02:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs
2025-09-12 15:02:56 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:02:56 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:02:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs
2025-09-12 15:02:57 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 643 ms
2025-09-12 15:03:09 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-09-12 15:03:09 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:03:09 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:03:09 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-09-12 15:03:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.username = :usernameOrEmail 
        OR u.email = :usernameOrEmail */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.username=? 
            or u1_0.email=?
2025-09-12 15:03:09 [http-nio-8080-exec-5] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-12 15:03:42 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&gender=%D8%B0%D9%83%D8%B1&isActive=true&page=0&size=10
2025-09-12 15:03:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:03:42 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&gender=%D8%B0%D9%83%D8%B1&isActive=true&page=0&size=10
2025-09-12 15:03:42 [http-nio-8080-exec-8] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'gender': Failed to convert value of type 'java.lang.String' to required type 'com.nakqeeb.amancare.entity.Gender'; Failed to convert from type [java.lang.String] to type [@io.swagger.v3.oas.annotations.Parameter @org.springframework.web.bind.annotation.RequestParam com.nakqeeb.amancare.entity.Gender] for value [ذكر]]
2025-09-12 15:03:47 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&gender=%D8%B0%D9%83%D8%B1&isActive=true&page=0&size=10
2025-09-12 15:03:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:03:47 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&gender=%D8%B0%D9%83%D8%B1&isActive=true&page=0&size=10
2025-09-12 15:03:47 [http-nio-8080-exec-7] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'gender': Failed to convert value of type 'java.lang.String' to required type 'com.nakqeeb.amancare.entity.Gender'; Failed to convert from type [java.lang.String] to type [@io.swagger.v3.oas.annotations.Parameter @org.springframework.web.bind.annotation.RequestParam com.nakqeeb.amancare.entity.Gender] for value [ذكر]]
2025-09-12 15:03:51 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&gender=MALE&isActive=true&page=0&size=10
2025-09-12 15:03:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:03:51 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&gender=MALE&isActive=true&page=0&size=10
2025-09-12 15:03:51 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:03:51 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:03:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 15:03:57 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&gender=MALE&isActive=false&page=0&size=10
2025-09-12 15:03:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:03:57 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&gender=MALE&isActive=false&page=0&size=10
2025-09-12 15:03:57 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:03:57 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:03:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 15:04:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&gender=MALE&isActive=false&page=0&size=10
2025-09-12 15:04:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:04:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&gender=MALE&isActive=false&page=0&size=10
2025-09-12 15:04:43 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:04:43 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:04:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 15:05:51 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-12 15:05:51 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-12 15:05:51 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 15:05:51 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-12 15:05:51 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-12 15:05:53 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 41768 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-12 15:05:53 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-12 15:05:53 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-12 15:05:53 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-12 15:05:54 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-12 15:05:54 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 15 JPA repository interfaces.
2025-09-12 15:05:54 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-12 15:05:54 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-12 15:05:54 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-12 15:05:54 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-12 15:05:54 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 954 ms
2025-09-12 15:05:54 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-12 15:05:54 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-12 15:05:54 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-12 15:05:55 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-12 15:05:55 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-12 15:05:55 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@97129a6
2025-09-12 15:05:55 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-12 15:05:55 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-12 15:05:55 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-12 15:05:55 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-12 15:05:55 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-12 15:05:55 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 15:05:56 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-12 15:05:57 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-12 15:05:57 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-12 15:05:58 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-12 15:05:58 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-12 15:05:58 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-12 15:05:58 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.119 seconds (process running for 5.353)
2025-09-12 15:05:58 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-12 15:05:58 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-12 15:05:58 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-12 15:05:58 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-12 15:05:58 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-12 15:05:58 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-12 15:05:58 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-09-12 15:05:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&gender=MALE&isActive=false&page=0&size=10
2025-09-12 15:05:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:05:58 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&gender=MALE&isActive=false&page=0&size=10
2025-09-12 15:05:58 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:05:58 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:05:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 15:05:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = :isActive 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.gender LIKE CONCAT('%', :gender, '%') 
            OR p.bloodType LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=? 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.gender like concat('%', ?, '%') escape '' 
                or p1_0.blood_type like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 15:06:07 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&gender=MALE&isActive=true&page=0&size=10
2025-09-12 15:06:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:06:07 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&gender=MALE&isActive=true&page=0&size=10
2025-09-12 15:06:07 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:06:07 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:06:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 15:06:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = :isActive 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.gender LIKE CONCAT('%', :gender, '%') 
            OR p.bloodType LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=? 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.gender like concat('%', ?, '%') escape '' 
                or p1_0.blood_type like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 15:06:18 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&gender=FEMALE&isActive=true&page=0&size=10
2025-09-12 15:06:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:06:18 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&gender=FEMALE&isActive=true&page=0&size=10
2025-09-12 15:06:18 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:06:18 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,com.nakqeeb.amancare.entity.Gender,boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:06:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 15:06:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = :isActive 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.gender LIKE CONCAT('%', :gender, '%') 
            OR p.bloodType LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=? 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.gender like concat('%', ?, '%') escape '' 
                or p1_0.blood_type like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 15:11:01 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-12 15:11:01 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-12 15:11:01 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 15:11:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-12 15:11:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-12 15:11:03 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 43068 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-12 15:11:03 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-12 15:11:03 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-12 15:11:03 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-12 15:11:04 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-12 15:11:04 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38 ms. Found 15 JPA repository interfaces.
2025-09-12 15:11:04 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-12 15:11:04 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-12 15:11:04 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-12 15:11:04 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-12 15:11:04 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 963 ms
2025-09-12 15:11:04 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-12 15:11:05 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-12 15:11:05 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-12 15:11:05 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-12 15:11:05 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-12 15:11:05 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6417d43e
2025-09-12 15:11:05 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-12 15:11:05 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-12 15:11:05 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-12 15:11:05 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-12 15:11:05 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-12 15:11:06 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 15:11:06 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-12 15:11:07 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-12 15:11:07 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-12 15:11:08 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-12 15:11:08 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-12 15:11:08 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-12 15:11:08 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 4.882 seconds (process running for 5.139)
2025-09-12 15:11:08 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-12 15:11:08 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-12 15:11:08 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-12 15:11:08 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-12 15:11:14 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-12 15:11:14 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-12 15:11:14 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-09-12 15:11:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-09-12 15:11:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:11:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:11:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-09-12 15:11:14 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-09-12 15:11:14 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:11:14 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:11:14 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-09-12 15:11:14 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-09-12 15:11:14 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:11:14 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:11:14 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-09-12 15:11:14 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-09-12 15:11:14 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-09-12 15:11:14 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:11:14 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:11:14 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:11:14 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:11:14 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-09-12 15:11:14 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-12 15:11:14 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-09-12 15:11:14 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:11:14 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:11:14 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-12 15:11:14 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-12 15:11:14 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs/swagger-config
2025-09-12 15:11:14 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:11:14 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:11:14 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:11:14 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:11:14 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-12 15:11:14 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs/swagger-config
2025-09-12 15:11:14 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs
2025-09-12 15:11:14 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:11:14 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:11:14 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs
2025-09-12 15:11:15 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 629 ms
2025-09-12 15:11:16 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-09-12 15:11:16 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:11:16 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:11:16 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-09-12 15:11:16 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-12 15:11:16 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-09-12 15:11:16 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:11:16 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-09-12 15:11:16 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:11:16 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:11:16 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:11:16 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:11:16 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:11:16 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-12 15:11:16 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-09-12 15:11:16 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-09-12 15:11:16 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-09-12 15:11:16 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-09-12 15:11:16 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:11:16 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:11:16 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:11:16 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:11:16 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-09-12 15:11:16 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-09-12 15:11:16 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs/swagger-config
2025-09-12 15:11:16 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:11:16 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:11:16 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-12 15:11:16 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs/swagger-config
2025-09-12 15:11:16 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:11:16 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:11:16 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-12 15:11:16 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs
2025-09-12 15:11:16 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-12 15:11:16 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:11:16 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:11:16 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:11:16 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:11:16 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs
2025-09-12 15:11:16 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-12 15:11:37 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=%D8%B0%D9%83%D8%B1&bloodType=A_POSITIVE&page=0&size=10
2025-09-12 15:11:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:11:37 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=%D8%B0%D9%83%D8%B1&bloodType=A_POSITIVE&page=0&size=10
2025-09-12 15:11:37 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'gender': Failed to convert value of type 'java.lang.String' to required type 'com.nakqeeb.amancare.entity.Gender'; Failed to convert from type [java.lang.String] to type [@io.swagger.v3.oas.annotations.Parameter @org.springframework.web.bind.annotation.RequestParam com.nakqeeb.amancare.entity.Gender] for value [ذكر]]
2025-09-12 15:11:45 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=%D8%B0%D9%83%D8%B1&bloodType=B%2B&page=0&size=10
2025-09-12 15:11:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:11:45 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=%D8%B0%D9%83%D8%B1&bloodType=B%2B&page=0&size=10
2025-09-12 15:11:45 [http-nio-8080-exec-6] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'gender': Failed to convert value of type 'java.lang.String' to required type 'com.nakqeeb.amancare.entity.Gender'; Failed to convert from type [java.lang.String] to type [@io.swagger.v3.oas.annotations.Parameter @org.springframework.web.bind.annotation.RequestParam com.nakqeeb.amancare.entity.Gender] for value [ذكر]]
2025-09-12 15:11:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=FEMALE&bloodType=B%2B&page=0&size=10
2025-09-12 15:11:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:11:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=FEMALE&bloodType=B%2B&page=0&size=10
2025-09-12 15:11:55 [http-nio-8080-exec-8] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'bloodType': Failed to convert value of type 'java.lang.String' to required type 'com.nakqeeb.amancare.entity.BloodType'; Failed to convert from type [java.lang.String] to type [@io.swagger.v3.oas.annotations.Parameter @org.springframework.web.bind.annotation.RequestParam com.nakqeeb.amancare.entity.BloodType] for value [B+]]
2025-09-12 15:12:36 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-12 15:12:36 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-12 15:12:36 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 15:12:36 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-12 15:12:36 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-12 15:12:39 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 43493 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-12 15:12:39 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-12 15:12:39 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-12 15:12:39 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-12 15:12:39 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-12 15:12:39 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 39 ms. Found 15 JPA repository interfaces.
2025-09-12 15:12:40 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-12 15:12:40 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-12 15:12:40 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-12 15:12:40 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-12 15:12:40 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1032 ms
2025-09-12 15:12:40 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-12 15:12:40 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-12 15:12:40 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-12 15:12:40 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-12 15:12:40 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-12 15:12:40 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@97129a6
2025-09-12 15:12:40 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-12 15:12:40 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-12 15:12:40 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-12 15:12:41 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-12 15:12:41 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-12 15:12:41 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 15:12:41 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-12 15:12:42 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-12 15:12:42 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-12 15:12:43 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-12 15:12:43 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-12 15:12:43 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-12 15:12:43 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 4.866 seconds (process running for 5.104)
2025-09-12 15:12:43 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-12 15:12:43 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-12 15:12:43 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-12 15:12:43 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-12 15:12:44 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-12 15:12:44 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-12 15:12:44 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-12 15:12:45 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=FEMALE&bloodType=B%2B&page=0&size=10
2025-09-12 15:12:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:12:45 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=FEMALE&bloodType=B%2B&page=0&size=10
2025-09-12 15:12:45 [http-nio-8080-exec-1] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'bloodType': Failed to convert value of type 'java.lang.String' to required type 'com.nakqeeb.amancare.entity.BloodType'; Failed to convert from type [java.lang.String] to type [@io.swagger.v3.oas.annotations.Parameter @org.springframework.web.bind.annotation.RequestParam com.nakqeeb.amancare.entity.BloodType] for value [B+]]
2025-09-12 15:12:52 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=FEMALE&bloodType=AB-&page=0&size=10
2025-09-12 15:12:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:12:52 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=FEMALE&bloodType=AB-&page=0&size=10
2025-09-12 15:12:52 [http-nio-8080-exec-2] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'bloodType': Failed to convert value of type 'java.lang.String' to required type 'com.nakqeeb.amancare.entity.BloodType'; Failed to convert from type [java.lang.String] to type [@io.swagger.v3.oas.annotations.Parameter @org.springframework.web.bind.annotation.RequestParam com.nakqeeb.amancare.entity.BloodType] for value [AB-]]
2025-09-12 15:12:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=MALE&bloodType=AB-&page=0&size=10
2025-09-12 15:12:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:12:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=MALE&bloodType=AB-&page=0&size=10
2025-09-12 15:12:59 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'bloodType': Failed to convert value of type 'java.lang.String' to required type 'com.nakqeeb.amancare.entity.BloodType'; Failed to convert from type [java.lang.String] to type [@io.swagger.v3.oas.annotations.Parameter @org.springframework.web.bind.annotation.RequestParam com.nakqeeb.amancare.entity.BloodType] for value [AB-]]
2025-09-12 15:15:59 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-12 15:15:59 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-12 15:15:59 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 15:15:59 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-12 15:15:59 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-12 15:16:01 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 44345 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-12 15:16:01 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-12 15:16:01 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-12 15:16:01 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-12 15:16:02 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-12 15:16:02 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 15 JPA repository interfaces.
2025-09-12 15:16:02 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-12 15:16:02 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-12 15:16:02 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-12 15:16:02 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-12 15:16:02 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1042 ms
2025-09-12 15:16:02 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-12 15:16:02 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-12 15:16:02 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-12 15:16:02 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-12 15:16:02 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-12 15:16:03 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@39013d92
2025-09-12 15:16:03 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-12 15:16:03 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-12 15:16:03 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-12 15:16:03 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-12 15:16:03 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-12 15:16:03 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 15:16:04 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-12 15:16:05 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-12 15:16:05 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-12 15:16:06 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-12 15:16:06 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-12 15:16:06 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-12 15:16:06 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.024 seconds (process running for 5.264)
2025-09-12 15:16:06 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-12 15:16:06 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-12 15:16:06 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-12 15:16:06 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-12 15:16:07 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-12 15:16:07 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-12 15:16:07 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-12 15:16:07 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-09-12 15:16:07 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:16:07 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:16:07 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-09-12 15:16:07 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-09-12 15:16:07 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:16:07 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:16:07 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-09-12 15:16:07 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-09-12 15:16:07 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-09-12 15:16:07 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-12 15:16:07 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:16:07 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:16:07 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:16:07 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-09-12 15:16:07 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:16:07 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:16:07 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:16:07 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:16:07 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-12 15:16:07 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:16:07 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-09-12 15:16:07 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-09-12 15:16:07 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-09-12 15:16:07 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-12 15:16:07 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs/swagger-config
2025-09-12 15:16:07 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:16:07 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:16:07 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:16:07 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:16:07 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-12 15:16:07 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs/swagger-config
2025-09-12 15:16:07 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs
2025-09-12 15:16:07 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:16:07 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:16:07 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs
2025-09-12 15:16:08 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 696 ms
2025-09-12 15:16:27 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-09-12 15:16:27 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:16:27 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:16:27 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-09-12 15:16:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.username = :usernameOrEmail 
        OR u.email = :usernameOrEmail */ select
            u1_0.id,
            u1_0.clinic_id,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        where
            u1_0.username=? 
            or u1_0.email=?
2025-09-12 15:16:28 [http-nio-8080-exec-3] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-09-12 15:16:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=%D8%B0%D9%83%D8%B1&bloodType=A_POSITIVE&page=0&size=10
2025-09-12 15:16:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:16:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=%D8%B0%D9%83%D8%B1&bloodType=A_POSITIVE&page=0&size=10
2025-09-12 15:16:56 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,java.lang.String,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:16:56 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,java.lang.String,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:16:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 15:17:06 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=male&bloodType=A_POSITIVE&page=0&size=10
2025-09-12 15:17:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:17:06 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=male&bloodType=A_POSITIVE&page=0&size=10
2025-09-12 15:17:06 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,java.lang.String,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:17:06 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,java.lang.String,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:17:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 15:18:15 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-12 15:18:15 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-12 15:18:15 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 15:18:15 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-12 15:18:15 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-12 15:18:18 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 44961 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-12 15:18:18 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-12 15:18:18 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-12 15:18:18 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-12 15:18:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-12 15:18:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52 ms. Found 15 JPA repository interfaces.
2025-09-12 15:18:19 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-12 15:18:19 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-12 15:18:19 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-12 15:18:19 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-12 15:18:19 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1211 ms
2025-09-12 15:18:20 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-12 15:18:20 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-12 15:18:20 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-12 15:18:20 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-12 15:18:20 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-12 15:18:20 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@281b2432
2025-09-12 15:18:20 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-12 15:18:20 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-12 15:18:20 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-12 15:18:21 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-12 15:18:21 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-12 15:18:21 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 15:18:21 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-12 15:18:22 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-12 15:18:22 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-12 15:18:23 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-12 15:18:23 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-12 15:18:23 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-12 15:18:23 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.396 seconds (process running for 5.655)
2025-09-12 15:18:23 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-12 15:18:23 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-12 15:18:23 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-12 15:18:23 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-12 15:18:30 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-12 15:18:30 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-12 15:18:30 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-09-12 15:18:30 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&page=0&size=10
2025-09-12 15:18:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:18:30 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&page=0&size=10
2025-09-12 15:18:30 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,java.lang.String,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:18:30 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,java.lang.String,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:18:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 15:18:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND (
            :active IS NULL 
            OR p.isActive = :active
        ) 
        AND (
            :gender IS NULL 
            OR p.gender = :gender
        ) 
        AND (
            :bloodType IS NULL 
            OR p.bloodType = :bloodType
        ) 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and (
                ? is null 
                or p1_0.is_active=?
            ) 
            and (
                ? is null 
                or p1_0.gender=?
            ) 
            and (
                ? is null 
                or p1_0.blood_type=?
            ) 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 15:18:37 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&bloodType=O_POSITIVE&page=0&size=10
2025-09-12 15:18:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:18:37 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&bloodType=O_POSITIVE&page=0&size=10
2025-09-12 15:18:38 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,java.lang.String,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:18:38 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,java.lang.String,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:18:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 15:48:05 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-12 15:48:05 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-12 15:48:05 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 15:48:05 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-12 15:48:05 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-12 15:48:08 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 52259 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-12 15:48:08 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-12 15:48:08 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-12 15:48:08 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-12 15:48:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-12 15:48:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38 ms. Found 15 JPA repository interfaces.
2025-09-12 15:48:09 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-12 15:48:09 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-12 15:48:09 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-12 15:48:09 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-12 15:48:09 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 964 ms
2025-09-12 15:48:09 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-12 15:48:09 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-12 15:48:09 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-12 15:48:09 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-12 15:48:09 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-12 15:48:09 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5393010f
2025-09-12 15:48:09 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-12 15:48:09 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-12 15:48:09 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-12 15:48:10 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-12 15:48:10 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-12 15:48:10 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 15:48:10 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-12 15:48:11 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-12 15:48:11 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-12 15:48:12 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-12 15:48:13 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-12 15:48:13 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-12 15:48:13 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 5.328 seconds (process running for 5.662)
2025-09-12 15:48:13 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-12 15:48:13 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-12 15:48:13 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-12 15:48:13 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-12 15:48:17 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-12 15:48:17 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-12 15:48:17 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-12 15:48:17 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=MALE&bloodType=AB-&page=0&size=10
2025-09-12 15:48:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:48:17 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=MALE&bloodType=AB-&page=0&size=10
2025-09-12 15:48:17 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,java.lang.String,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:48:17 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,java.lang.String,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:48:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 15:48:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=MALE&bloodType=B%2B&page=0&size=10
2025-09-12 15:48:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:48:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=MALE&bloodType=B%2B&page=0&size=10
2025-09-12 15:48:32 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,java.lang.String,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:48:32 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,java.lang.String,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:48:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 15:49:00 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-09-12 15:49:00 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:49:00 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:49:00 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-09-12 15:49:00 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-09-12 15:49:00 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:49:00 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:49:00 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-09-12 15:49:00 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-09-12 15:49:00 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-09-12 15:49:00 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:49:00 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:49:00 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-09-12 15:49:00 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:49:00 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:49:00 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-09-12 15:49:00 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-09-12 15:49:00 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:49:00 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:49:00 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-09-12 15:49:00 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-12 15:49:00 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:49:00 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:49:00 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-12 15:49:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs/swagger-config
2025-09-12 15:49:00 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:49:00 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:49:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs/swagger-config
2025-09-12 15:49:00 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-12 15:49:00 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:49:00 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:49:00 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-12 15:49:00 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs
2025-09-12 15:49:00 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:49:00 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:49:00 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs
2025-09-12 15:49:01 [http-nio-8080-exec-1] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 757 ms
2025-09-12 15:49:19 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=%D8%B0%D9%83%D8%B1&bloodType=A_POSITIVE&page=0&size=10
2025-09-12 15:49:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:49:19 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=%D8%B0%D9%83%D8%B1&bloodType=A_POSITIVE&page=0&size=10
2025-09-12 15:49:19 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,java.lang.String,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:49:19 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,java.lang.String,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:49:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 15:49:26 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=male&bloodType=A_POSITIVE&page=0&size=10
2025-09-12 15:49:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:49:26 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?search=%D9%85%D8%AD%D9%85%D8%AF&active=true&gender=male&bloodType=A_POSITIVE&page=0&size=10
2025-09-12 15:49:26 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,java.lang.String,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:49:26 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,java.lang.String,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:49:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 15:49:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND (
            :active IS NULL 
            OR p.isActive = :active
        ) 
        AND (
            :gender IS NULL 
            OR p.gender = :gender
        ) 
        AND (
            :bloodType IS NULL 
            OR p.bloodType = :bloodType
        ) 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and (
                ? is null 
                or p1_0.is_active=?
            ) 
            and (
                ? is null 
                or p1_0.gender=?
            ) 
            and (
                ? is null 
                or p1_0.blood_type=?
            ) 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 15:49:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?active=true&bloodType=A_POSITIVE&page=0&size=10
2025-09-12 15:49:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:49:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?active=true&bloodType=A_POSITIVE&page=0&size=10
2025-09-12 15:49:36 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,java.lang.String,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:49:36 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,java.lang.String,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:49:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 15:49:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 15:49:57 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?active=true&gender=FEMALE&page=0&size=10
2025-09-12 15:49:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:49:57 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?active=true&gender=FEMALE&page=0&size=10
2025-09-12 15:49:57 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,java.lang.String,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:49:57 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,java.lang.String,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:49:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 15:49:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 15:50:06 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?active=false&gender=FEMALE&page=0&size=10
2025-09-12 15:50:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:50:06 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?active=false&gender=FEMALE&page=0&size=10
2025-09-12 15:50:06 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,java.lang.String,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:50:06 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,java.lang.String,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:50:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 15:50:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=? 
        and p1_0.is_active 
    order by
        p1_0.first_name,
        p1_0.last_name 
    limit
        ?
2025-09-12 15:53:04 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-12 15:53:04 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-12 15:53:04 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 15:53:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-12 15:53:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-12 15:53:07 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 53526 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-12 15:53:07 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-12 15:53:07 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-12 15:53:07 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-12 15:53:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-12 15:53:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 39 ms. Found 15 JPA repository interfaces.
2025-09-12 15:53:08 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-12 15:53:08 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-12 15:53:08 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-12 15:53:08 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-12 15:53:08 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1020 ms
2025-09-12 15:53:08 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-12 15:53:08 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-12 15:53:08 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-12 15:53:08 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-12 15:53:08 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-12 15:53:08 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@30b719fa
2025-09-12 15:53:08 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-12 15:53:08 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-12 15:53:08 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-12 15:53:09 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-12 15:53:09 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-12 15:53:09 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 15:53:09 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-12 15:53:11 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-12 15:53:11 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-12 15:53:11 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-12 15:53:11 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-12 15:53:11 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-12 15:53:11 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 4.698 seconds (process running for 4.956)
2025-09-12 15:53:11 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-12 15:53:11 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-12 15:53:11 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-12 15:53:11 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-12 15:53:33 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-12 15:53:33 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-12 15:53:33 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-12 15:53:33 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-09-12 15:53:33 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:53:33 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:53:33 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-09-12 15:53:33 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-09-12 15:53:33 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-09-12 15:53:33 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:53:33 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-09-12 15:53:33 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:53:33 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:53:33 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:53:33 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-09-12 15:53:33 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:53:33 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-09-12 15:53:33 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:53:33 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-09-12 15:53:33 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-09-12 15:53:33 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:53:33 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:53:33 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-12 15:53:33 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:53:33 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-09-12 15:53:33 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:53:33 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-12 15:53:34 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs/swagger-config
2025-09-12 15:53:34 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-12 15:53:34 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:53:34 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:53:34 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:53:34 [http-nio-8080-exec-7] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:53:34 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-12 15:53:34 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs/swagger-config
2025-09-12 15:53:34 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs
2025-09-12 15:53:34 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 15:53:34 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 15:53:34 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs
2025-09-12 15:53:34 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 612 ms
2025-09-12 15:54:00 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&isActive=true&page=0&size=10
2025-09-12 15:54:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:54:00 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&isActive=true&page=0&size=10
2025-09-12 15:54:00 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:54:00 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:54:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 15:54:06 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&isActive=false&page=0&size=10
2025-09-12 15:54:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 15:54:06 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&isActive=false&page=0&size=10
2025-09-12 15:54:06 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:54:06 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,boolean,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 15:54:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 15:55:28 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-09-12 15:55:28 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-09-12 15:55:28 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 15:55:28 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-12 15:55:28 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-12 15:55:31 [restartedMain] INFO  c.n.amancare.AmancareApplication - Starting AmancareApplication using Java 24.0.1 with PID 54137 (/Users/khaledyafey/MyProjects/spring-boot/amancare/target/classes started by khaledyafey in /Users/khaledyafey/MyProjects/spring-boot/amancare)
2025-09-12 15:55:31 [restartedMain] INFO  c.n.amancare.AmancareApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-12 15:55:31 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-12 15:55:31 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-12 15:55:31 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-12 15:55:31 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 41 ms. Found 15 JPA repository interfaces.
2025-09-12 15:55:32 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-12 15:55:32 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-12 15:55:32 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-12 15:55:32 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-12 15:55:32 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 989 ms
2025-09-12 15:55:32 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-12 15:55:32 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-09-12 15:55:32 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-12 15:55:32 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-12 15:55:32 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-12 15:55:32 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@30b719fa
2025-09-12 15:55:32 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-12 15:55:32 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-12 15:55:32 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-09-12 15:55:33 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-12 15:55:33 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table audit_logs 
       modify column severity enum ('CRITICAL','ERROR','INFO','WARNING')
2025-09-12 15:55:33 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-12 15:55:33 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-12 15:55:35 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-09-12 15:55:35 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-09-12 15:55:35 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-12 15:55:35 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-09-12 15:55:35 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api/v1'
2025-09-12 15:55:35 [restartedMain] INFO  c.n.amancare.AmancareApplication - Started AmancareApplication in 4.87 seconds (process running for 5.117)
2025-09-12 15:55:36 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        PasswordResetToken p 
    WHERE
        p.expiryDate < :now */ delete prt1_0 
    from
        password_reset_tokens prt1_0 
    where
        prt1_0.expiry_date<?
2025-09-12 15:55:36 [scheduling-1] INFO  c.n.a.service.PasswordResetService - تم تنظيف الرموز المنتهية الصلاحية
2025-09-12 15:55:36 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        EmailVerificationToken e 
    WHERE
        e.expiryDate < :now */ delete evt1_0 
    from
        email_verification_tokens evt1_0 
    where
        evt1_0.expiry_date<?
2025-09-12 15:55:36 [scheduling-1] INFO  c.n.a.s.EmailVerificationService - تم تنظيف رموز تأكيد البريد الإلكتروني المنتهية الصلاحية
2025-09-12 16:25:00 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=28m57s778ms).
2025-09-12 17:56:51 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h31m50s548ms).
2025-09-12 19:15:51 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h19m725ms).
2025-09-12 20:49:01 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h33m9s435ms).
2025-09-12 22:00:49 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h11m47s863ms).
2025-09-12 23:09:13 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h8m23s750ms).
2025-09-12 23:12:26 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3m13s721ms).
2025-09-12 23:12:36 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-12 23:12:36 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-12 23:12:36 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-09-12 23:12:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&isActive=false&page=0&size=10
2025-09-12 23:12:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 23:12:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?q=%D9%85%D8%AD%D9%85%D8%AF&isActive=false&page=0&size=10
2025-09-12 23:12:36 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 23:12:36 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 23:12:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 23:12:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 23:12:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?q=female&isActive=false&page=0&size=10
2025-09-12 23:12:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 23:12:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?q=female&isActive=false&page=0&size=10
2025-09-12 23:12:52 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 23:12:52 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 23:12:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 23:12:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 23:12:58 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patients/search?q=female&isActive=true&page=0&size=10
2025-09-12 23:12:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-09-12 23:12:58 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patients/search?q=female&isActive=true&page=0&size=10
2025-09-12 23:12:58 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 23:12:58 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.PatientController.searchPatients(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.lang.String,int,int); target is of class [com.nakqeeb.amancare.controller.PatientController]
2025-09-12 23:12:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-09-12 23:12:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        p 
    FROM
        Patient p 
    WHERE
        p.clinic = :clinic 
        AND p.isActive = true 
        AND (
            LOWER(p.firstName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR LOWER(p.lastName) LIKE LOWER(CONCAT('%', :search, '%')) 
            OR p.phone LIKE CONCAT('%', :search, '%') 
            OR p.patientNumber LIKE CONCAT('%', :search, '%')
        ) 
    order by
        p.firstName asc,
        p.lastName asc */ select
            p1_0.id,
            p1_0.address,
            p1_0.allergies,
            p1_0.blood_type,
            p1_0.chronic_diseases,
            p1_0.clinic_id,
            p1_0.created_at,
            p1_0.date_of_birth,
            p1_0.email,
            p1_0.emergency_contact_name,
            p1_0.emergency_contact_phone,
            p1_0.first_name,
            p1_0.gender,
            p1_0.is_active,
            p1_0.last_name,
            p1_0.notes,
            p1_0.patient_number,
            p1_0.phone,
            p1_0.updated_at 
        from
            patients p1_0 
        where
            p1_0.clinic_id=? 
            and p1_0.is_active=1 
            and (
                lower(p1_0.first_name) like lower(concat('%', ?, '%')) escape '' 
                or lower(p1_0.last_name) like lower(concat('%', ?, '%')) escape '' 
                or p1_0.phone like concat('%', ?, '%') escape '' 
                or p1_0.patient_number like concat('%', ?, '%') escape ''
            ) 
        order by
            p1_0.first_name,
            p1_0.last_name 
        limit
            ?
2025-09-12 23:13:00 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-09-12 23:13:00 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 23:13:00 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 23:13:00 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-09-12 23:13:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-09-12 23:13:00 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-09-12 23:13:01 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 23:13:01 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 23:13:01 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 23:13:01 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 23:13:01 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-09-12 23:13:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-09-12 23:13:01 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-09-12 23:13:01 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 23:13:01 [http-nio-8080-exec-10] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 23:13:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-09-12 23:13:01 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-12 23:13:01 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 23:13:01 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 23:13:01 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-09-12 23:13:01 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-09-12 23:13:01 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 23:13:01 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 23:13:01 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-09-12 23:13:01 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs/swagger-config
2025-09-12 23:13:01 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 23:13:01 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 23:13:01 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs/swagger-config
2025-09-12 23:13:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-09-12 23:13:01 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 23:13:01 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 23:13:01 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-09-12 23:13:01 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /docs
2025-09-12 23:13:01 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-12 23:13:01 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 2F16A8B404D563D304AD54AF1C090868
2025-09-12 23:13:01 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /docs
2025-09-12 23:13:01 [http-nio-8080-exec-6] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 701 ms
