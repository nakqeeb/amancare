2025-10-12 00:01:54 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /public/doctors/available
2025-10-12 00:01:54 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /public/doctors/available
2025-10-12 00:01:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-12 00:01:54 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /public/doctors/available
2025-10-12 00:01:54 [http-nio-8080-exec-4] INFO  c.n.amancare.service.PublicService - Fetching available doctors for clinic: null
2025-10-12 00:01:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=? 
        and u1_0.is_active
2025-10-12 00:01:54 [http-nio-8080-exec-4] INFO  c.n.amancare.service.PublicService - Found 15 doctors for clinic null
2025-10-12 00:01:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:01:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:01:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:01:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:01:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:01:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:01:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:01:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:01:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:01:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:01:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:01:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:01:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:01:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:01:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:02:33 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m41s373ms).
2025-10-12 00:04:18 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m45s160ms).
2025-10-12 00:06:19 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m1s32ms).
2025-10-12 00:08:31 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m11s649ms).
2025-10-12 00:10:23 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /public/doctors/available
2025-10-12 00:10:23 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /public/doctors/available
2025-10-12 00:10:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-12 00:10:24 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /public/doctors/available
2025-10-12 00:10:24 [http-nio-8080-exec-6] INFO  c.n.amancare.service.PublicService - Fetching available doctors for clinic: null
2025-10-12 00:10:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=? 
        and u1_0.is_active
2025-10-12 00:10:24 [http-nio-8080-exec-6] INFO  c.n.amancare.service.PublicService - Found 15 doctors for clinic null
2025-10-12 00:10:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:10:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:10:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:10:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:10:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:10:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:10:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:10:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:10:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:10:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:10:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:10:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:10:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:10:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:10:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:11:03 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m32s209ms).
2025-10-12 00:13:48 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m44s946ms).
2025-10-12 00:16:20 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m32s112ms).
2025-10-12 00:19:02 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m42s292ms).
2025-10-12 00:20:35 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /public/announcements/active
2025-10-12 00:20:35 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /public/announcements/active
2025-10-12 00:20:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-12 00:20:35 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /public/doctors/available
2025-10-12 00:20:35 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /public/announcements/active
2025-10-12 00:20:35 [http-nio-8080-exec-1] INFO  c.n.amancare.service.PublicService - Fetching active announcements
2025-10-12 00:20:35 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /public/doctors/available
2025-10-12 00:20:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Announcement a 
    WHERE
        a.isActive = true 
        AND a.startDate <= :today 
        AND (
            a.endDate IS NULL 
            OR a.endDate >= :today
        ) 
    ORDER BY
        a.priority DESC,
        a.createdAt DESC */ select
            a1_0.id,
            a1_0.action_text,
            a1_0.action_url,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.doctor_id,
            a1_0.end_date,
            a1_0.image_url,
            a1_0.is_active,
            a1_0.message,
            a1_0.priority,
            a1_0.start_date,
            a1_0.title,
            a1_0.type,
            a1_0.updated_at 
        from
            announcements a1_0 
        where
            a1_0.is_active=1 
            and a1_0.start_date<=? 
            and (
                a1_0.end_date is null 
                or a1_0.end_date>=?
            ) 
        order by
            a1_0.priority desc,
            a1_0.created_at desc
2025-10-12 00:20:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-12 00:20:35 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /public/doctors/available
2025-10-12 00:20:35 [http-nio-8080-exec-10] INFO  c.n.amancare.service.PublicService - Fetching available doctors for clinic: null
2025-10-12 00:20:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=? 
        and u1_0.is_active
2025-10-12 00:20:35 [http-nio-8080-exec-10] INFO  c.n.amancare.service.PublicService - Found 15 doctors for clinic null
2025-10-12 00:20:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:20:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:20:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:20:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:20:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:20:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:20:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:20:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:20:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:20:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:20:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:20:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:20:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:20:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:20:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 00:21:55 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m52s156ms).
2025-10-12 00:34:42 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=12m47s727ms).
2025-10-12 00:44:08 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=9m25s444ms).
2025-10-12 00:46:50 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m42s750ms).
2025-10-12 01:45:12 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /public/doctors/available
2025-10-12 01:45:12 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /public/doctors/available
2025-10-12 01:45:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-12 01:45:12 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /public/doctors/available
2025-10-12 01:45:12 [http-nio-8080-exec-2] INFO  c.n.amancare.service.PublicService - Fetching available doctors for clinic: null
2025-10-12 01:45:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=? 
        and u1_0.is_active
2025-10-12 01:45:12 [http-nio-8080-exec-2] INFO  c.n.amancare.service.PublicService - Found 15 doctors for clinic null
2025-10-12 01:45:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 01:45:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 01:45:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 01:45:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 01:45:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 01:45:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 01:45:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 01:45:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 01:45:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 01:45:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 01:45:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 01:45:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 01:45:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 01:45:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 01:45:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 02:04:16 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h17m25s684ms).
2025-10-12 02:31:11 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=26m54s771ms).
2025-10-12 03:31:53 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h42s22ms).
2025-10-12 04:33:05 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h42s5ms).
2025-10-12 04:33:07 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /public/doctors/available
2025-10-12 04:33:07 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /public/doctors/available
2025-10-12 04:33:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-12 04:33:07 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /public/doctors/available
2025-10-12 04:33:07 [http-nio-8080-exec-5] INFO  c.n.amancare.service.PublicService - Fetching available doctors for clinic: null
2025-10-12 04:33:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=? 
        and u1_0.is_active
2025-10-12 04:33:07 [http-nio-8080-exec-5] INFO  c.n.amancare.service.PublicService - Found 15 doctors for clinic null
2025-10-12 04:33:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 04:33:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 04:33:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 04:33:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 04:33:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 04:33:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 04:33:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 04:33:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 04:33:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 04:33:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 04:33:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 04:33:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 04:33:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 04:33:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 04:33:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 05:06:43 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=33m38s544ms).
2025-10-12 05:33:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /guest/doctor/18/schedules?clinicId=9
2025-10-12 05:33:56 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /guest/clinics/9/doctors
2025-10-12 05:33:56 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /guest/clinics
2025-10-12 05:33:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /guest/clinics/9/doctors
2025-10-12 05:33:56 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /guest/doctor/18/schedules?clinicId=9
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /guest/clinics
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-12 05:33:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-12 05:33:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-12 05:33:56 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /guest/doctor/18/schedules?clinicId=9
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /guest/clinics
2025-10-12 05:33:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /guest/clinics/9/doctors
2025-10-12 05:33:56 [http-nio-8080-exec-8] INFO  c.n.a.c.GuestBookingController - REST request to get all active clinics for guest booking
2025-10-12 05:33:56 [http-nio-8080-exec-8] INFO  c.n.a.service.GuestBookingService - Fetching all active clinics for guest booking
2025-10-12 05:33:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-12 05:33:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ds1_0.id,
        ds1_0.break_end_time,
        ds1_0.break_start_time,
        ds1_0.created_at,
        ds1_0.day_of_week,
        ds1_0.doctor_id,
        ds1_0.effective_date,
        ds1_0.end_date,
        ds1_0.end_time,
        ds1_0.is_active,
        ds1_0.notes,
        ds1_0.schedule_type,
        ds1_0.start_time,
        ds1_0.updated_at 
    from
        doctor_schedules ds1_0 
    where
        ds1_0.doctor_id=? 
        and ds1_0.is_active 
    order by
        ds1_0.day_of_week
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.is_active
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /guest/clinics
2025-10-12 05:33:57 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /public/announcements/active
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /guest/clinics
2025-10-12 05:33:57 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /public/doctors/available
2025-10-12 05:33:57 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /public/announcements/active
2025-10-12 05:33:57 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /public/doctors/available
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-12 05:33:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-12 05:33:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-12 05:33:57 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /public/doctors/available
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /guest/clinics
2025-10-12 05:33:57 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /public/announcements/active
2025-10-12 05:33:57 [http-nio-8080-exec-1] INFO  c.n.a.c.GuestBookingController - REST request to get all active clinics for guest booking
2025-10-12 05:33:57 [http-nio-8080-exec-10] INFO  c.n.amancare.service.PublicService - Fetching available doctors for clinic: null
2025-10-12 05:33:57 [http-nio-8080-exec-1] INFO  c.n.a.service.GuestBookingService - Fetching all active clinics for guest booking
2025-10-12 05:33:57 [http-nio-8080-exec-5] INFO  c.n.amancare.service.PublicService - Fetching active announcements
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.is_active
2025-10-12 05:33:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=? 
        and u1_0.is_active
2025-10-12 05:33:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        a 
    FROM
        Announcement a 
    WHERE
        a.isActive = true 
        AND a.startDate <= :today 
        AND (
            a.endDate IS NULL 
            OR a.endDate >= :today
        ) 
    ORDER BY
        a.priority DESC,
        a.createdAt DESC */ select
            a1_0.id,
            a1_0.action_text,
            a1_0.action_url,
            a1_0.clinic_id,
            a1_0.created_at,
            a1_0.doctor_id,
            a1_0.end_date,
            a1_0.image_url,
            a1_0.is_active,
            a1_0.message,
            a1_0.priority,
            a1_0.start_date,
            a1_0.title,
            a1_0.type,
            a1_0.updated_at 
        from
            announcements a1_0 
        where
            a1_0.is_active=1 
            and a1_0.start_date<=? 
            and (
                a1_0.end_date is null 
                or a1_0.end_date>=?
            ) 
        order by
            a1_0.priority desc,
            a1_0.created_at desc
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-10] INFO  c.n.amancare.service.PublicService - Found 15 doctors for clinic null
2025-10-12 05:33:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        ds 
    FROM
        DoctorSchedule ds 
    WHERE
        ds.doctor = :doctor 
        AND ds.dayOfWeek = :dayOfWeek 
        AND ds.isActive = true 
        AND (
            ds.effectiveDate IS NULL 
            OR ds.effectiveDate <= :date
        ) 
        AND (
            ds.endDate IS NULL 
            OR ds.endDate >= :date
        ) 
    ORDER BY
        ds.effectiveDate DESC */ select
            ds1_0.id,
            ds1_0.break_end_time,
            ds1_0.break_start_time,
            ds1_0.created_at,
            ds1_0.day_of_week,
            ds1_0.doctor_id,
            ds1_0.effective_date,
            ds1_0.end_date,
            ds1_0.end_time,
            ds1_0.is_active,
            ds1_0.notes,
            ds1_0.schedule_type,
            ds1_0.start_time,
            ds1_0.updated_at 
        from
            doctor_schedules ds1_0 
        where
            ds1_0.doctor_id=? 
            and ds1_0.day_of_week=? 
            and ds1_0.is_active=1 
            and (
                ds1_0.effective_date is null 
                or ds1_0.effective_date<=?
            ) 
            and (
                ds1_0.end_date is null 
                or ds1_0.end_date>=?
            ) 
        order by
            ds1_0.effective_date desc
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.clinic_id,
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.clinic_id=?
2025-10-12 05:33:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.clinic_id,
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.clinic_id=?
2025-10-12 05:33:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /users/doctors?clinicId=9
2025-10-12 05:33:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-10-12 05:33:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/doctors?clinicId=9
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-12 05:33:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-12 05:33:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/doctors?clinicId=9
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /appointments?page=0&size=10&sortBy=appointmentDate&sortDirection=desc&clinicId=9
2025-10-12 05:33:58 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.AppointmentController.getAllAppointments(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long,java.time.LocalDate,java.lang.Long,com.nakqeeb.amancare.entity.AppointmentStatus,int,int,java.lang.String,java.lang.String); target is of class [com.nakqeeb.amancare.controller.AppointmentController]
2025-10-12 05:33:58 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.nakqeeb.amancare.controller.UserController.getDoctors(com.nakqeeb.amancare.security.UserPrincipal,java.lang.Long); target is of class [com.nakqeeb.amancare.controller.UserController]
2025-10-12 05:33:58 [http-nio-8080-exec-3] INFO  c.n.a.controller.UserController - SYSTEM_ADMIN reading doctors from clinic: 9
2025-10-12 05:33:58 [http-nio-8080-exec-2] INFO  c.n.a.c.AppointmentController - SYSTEM_ADMIN reading appointments from clinic: 9
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.address,
        c1_0.created_at,
        c1_0.description,
        c1_0.email,
        c1_0.is_active,
        c1_0.name,
        c1_0.phone,
        c1_0.subscription_end_date,
        c1_0.subscription_plan,
        c1_0.subscription_start_date,
        c1_0.updated_at,
        c1_0.working_days,
        c1_0.working_hours_end,
        c1_0.working_hours_start 
    from
        clinics c1_0 
    where
        c1_0.id=?
2025-10-12 05:33:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    JOIN
        
    FETCH
        u.clinic 
    WHERE
        u.clinic.id = :clinicId 
        AND u.role = 'DOCTOR' 
        AND u.isActive = true 
    ORDER BY
        u.firstName,
        u.lastName */ select
            u1_0.id,
            u1_0.clinic_id,
            c1_0.id,
            c1_0.address,
            c1_0.created_at,
            c1_0.description,
            c1_0.email,
            c1_0.is_active,
            c1_0.name,
            c1_0.phone,
            c1_0.subscription_end_date,
            c1_0.subscription_plan,
            c1_0.subscription_start_date,
            c1_0.updated_at,
            c1_0.working_days,
            c1_0.working_hours_end,
            c1_0.working_hours_start,
            u1_0.created_at,
            u1_0.email,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password_hash,
            u1_0.phone,
            u1_0.role,
            u1_0.specialization,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        join
            clinics c1_0 
                on c1_0.id=u1_0.clinic_id 
        where
            c1_0.id=? 
            and u1_0.role='DOCTOR' 
            and u1_0.is_active=1 
        order by
            u1_0.first_name,
            u1_0.last_name
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.appointment_date,
        a1_0.appointment_time,
        a1_0.appointment_type,
        a1_0.chief_complaint,
        a1_0.clinic_id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.doctor_id,
        a1_0.duration_minutes,
        a1_0.notes,
        a1_0.patient_id,
        a1_0.status,
        a1_0.updated_at 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=? 
    order by
        a1_0.appointment_date desc 
    limit
        ?
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        mr1_0.id,
        mr1_0.appointment_id,
        mr1_0.chief_complaint,
        mr1_0.clinic_id,
        mr1_0.created_at,
        mr1_0.created_by,
        mr1_0.doctor_id,
        mr1_0.family_history,
        mr1_0.follow_up_date,
        mr1_0.follow_up_instructions,
        mr1_0.is_confidential,
        mr1_0.notes,
        mr1_0.past_medical_history,
        mr1_0.patient_id,
        mr1_0.physical_examination,
        mr1_0.present_illness,
        mr1_0.social_history,
        mr1_0.status,
        mr1_0.systemic_examination,
        mr1_0.treatment_plan,
        mr1_0.updated_at,
        mr1_0.updated_by,
        mr1_0.visit_date,
        mr1_0.visit_type,
        mr1_0.blood_pressure_diastolic,
        mr1_0.blood_pressure_systolic,
        mr1_0.blood_sugar,
        mr1_0.bmi,
        mr1_0.heart_rate,
        mr1_0.height,
        mr1_0.oxygen_saturation,
        mr1_0.pain_scale,
        mr1_0.respiratory_rate,
        mr1_0.temperature,
        mr1_0.weight,
        a2_0.medical_record_id,
        a2_0.allergy 
    from
        medical_records mr1_0 
    left join
        medical_record_allergies a2_0 
            on mr1_0.id=a2_0.medical_record_id 
    where
        mr1_0.appointment_id=?
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(a1_0.id) 
    from
        appointments a1_0 
    where
        a1_0.clinic_id=?
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.clinic_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.phone,
        u1_0.role,
        u1_0.specialization,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-12 05:33:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.address,
        p1_0.allergies,
        p1_0.blood_type,
        p1_0.chronic_diseases,
        p1_0.clinic_id,
        p1_0.created_at,
        p1_0.date_of_birth,
        p1_0.email,
        p1_0.emergency_contact_name,
        p1_0.emergency_contact_phone,
        p1_0.first_name,
        p1_0.gender,
        p1_0.is_active,
        p1_0.last_name,
        p1_0.notes,
        p1_0.patient_number,
        p1_0.phone,
        p1_0.updated_at 
    from
        patients p1_0 
    where
        p1_0.id=?
2025-10-12 05:34:15 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=27m31s66ms).
